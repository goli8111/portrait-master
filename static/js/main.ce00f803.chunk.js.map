{"version":3,"sources":["actions/scene.js","components/PortraitMasterContentsIntro.js","components/PortraitMasterSimpleCaptureList.js","components/PortraitMaster.js","actions/camera.js","components/util/SendMessage.js","components/camera/CameraCapture.js","components/camera/CameraCaptureSelect.js","components/PortraitMasterCaptureImageControlBar.js","components/PortraitMasterGridCaptureImageList.js","components/PortraitMasterFullScreenCaptureList.js","scene/SceneNavigation.js","scene/IndexScene.js","App.js","serviceWorker.js","reducers/scene.js","reducers/camera.js","reducers/index.js","index.js"],"names":["set_scene","change_scene","type","_change_scene","SetSelectImgIndex","index","_selectImgIndex","useStyles","makeStyles","theme","root","width","height","ContentsText","textAlign","contents_site_link","position","frameBorder","mapDispatchToProps","connect","state","_current_scene","scene","props","console","log","classes","className","url","process","overflow","left_title","left","right_title","top","right","ImgList","display","_canvasData","camera","useEffect","onUploadImageList","undefined","window","HybridApp","imgCount","GetDirectoryFileCount","i","imgText","GetImageDataFromDirectory","AddImage","length","imgsrc","element","document","createElement","style","margin","src","onclick","getElementById","appendChild","onClick","id","ContentsBody","bottom","gridTemplateRows","BottomBarBack","backgroundColor","BottomBarButtonBase","background","borderRadius","border","color","boxShadow","BottomBarButtonLeft","BottomBarButtonRight","BottomBarButton","divLine","simpleImageList","bottomButton","clsx","onCameraCapture","Button","variant","DeleteCanvasData","_deleteCanvasDataIndex","SetIframeFullScreen","fullScreen","parent","postMessage","_videoUserCameraFlag","btnTopBatStyle","btnBottomBarStyle","rootStyle","zIndex","videoStyle","transform","canvasStyle","btnLeftBottomStyle","btnCenterBottomStyle","btnRightBottomStyle","btnTopStyle1","btnTopStyle2","btnTopStyle3","btnTopStyle4","btnTopStyle5","CameraCapture","defaultProps","getCanvas","elem","canvas","getCanvasOverlay","canvasOverlay","getVideo","video","updateCameraGrid","viewState","canvasContext","getContext","videoWidth","videoHeight","clearRect","save","strokeStyle","lineWidth","globalAlpha","x","moveTo","lineTo","y","stroke","restore","onNextCamera","playCamera","onFlash","setFlashLight","cameraFlashType","onTimerSelect","currentValue","cameraCaptureTimerType","setState","onCaptureAnimation","flashEffect","setTimeout","onCapture","delayDuration","dateText","Date","toISOString","saveImage","toDataURL","onAddCanvasData","SaveAlbumJpgImage","a","body","href","download","click","URL","revokeObjectURL","onBack","onSetScene","onToggleGrid","gridView","onCaptureRatio","captureRatioType","onMovieFilter","cameraFilterType","stopCamera","bind","this","setupCamera","Error","navigator","mediaDevices","enumerateDevices","then","devices","forEach","device","kind","label","deviceId","catch","err","name","message","updateCamera","stream","getTracks","track","stop","facingModeText","getUserMedia","audio","facingMode","frameRate","exact","aspectRatio","screenWidth","srcObject","play","pause","getVideoTracks","capabilities","getCapabilities","torch","applyConstraints","advanced","e","showVideo","updateCameraFrame","findUpdateCameraFrame","showDebugVideo","filter","drawImage","_closeCamera","onCloseCamera","requestAnimationFrame","timerIcon","flashIcon","gridIcon","captureRatioIcon","filterIcon","playsInline","ref","Component","loadingText","dispatch","img","_addCanvasData","overflowX","BottomBar1","Height","BottomBar2","onAddImageChange","imageInput","target","files","file","fr","FileReader","onload","event","result","Image","readAsDataURL","imgUpload","fileInput","accept","onchange","bottomBar","upload_button","delete_button","PortraitMasterCaptureImageControlBar","itemCount","onClickUploadImage","onClickDeleteImage","onClickSubmit","enableSubmit","uploadImageButton","deleteImageButton","getButton","select_text","overflowY","_items","useState","setItemCount","onUpdateImageList","getSelectState","onToggleImage","selectState","deleteState","splice","push","selectImage","imgElement","checkElement","selectText","imgList","divElement","overlayElement","getIndexFromId","indexText","substring","parseInt","error","selectIndex","DoShareImage","deleteIndexList","img_element","remove","sort","b","DeleteImageDataFromDirectory","childElementCount","multi_select_text","onSelectImage","idx","infiniteLoop","selectedItem","showArrows","showStatus","showThumbs","onChange","map","image","success","flexGrow","React","value","setValue","BottomNavigation","newValue","showLabels","BottomNavigationAction","icon","getActiveScene","App","Boolean","location","hostname","match","initialState","combineReducers","action","Object","assign","slice","appElement","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce00f803.chunk.js","sourcesContent":["export const SET_SCENE = 'SET_SCENE';\r\nexport function set_scene(change_scene) {\r\n    return {\r\n        type: SET_SCENE,\r\n        _change_scene: change_scene\r\n    };\r\n}\r\n\r\nexport const SETSELECTIMGINDEX = 'SETSELECTIMGINDEX';\r\nexport function SetSelectImgIndex(index) {\r\n    return {\r\n        type: SETSELECTIMGINDEX,\r\n        _selectImgIndex: index\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Iframe from 'react-iframe'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        //background: '#00FF0088', \r\n    },\r\n    ContentsText: {\r\n        textAlign: 'left'\r\n    },\r\n    contents_site_link: {\r\n        position: 'absolute',\r\n        height: '100%',\r\n        width: '100%',\r\n        frameBorder: 0,\r\n      },\r\n}));\r\n\r\nexport const PortraitMasterContentsIntro = (props) => {\r\n    console.log('PortraitMasterContentsIntro component start');\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n              <Iframe url={process.env.PUBLIC_URL + '/contents/index.html'} className={classes.contents_site_link} frameBorder=\"0\"/>;\r\n            {/* <center><h2><b>스마트폰 인물사진 마스터</b></h2>\r\n                <img src={process.env.PUBLIC_URL + '/img/camera-master-intro.jpg'} />;\r\n                <h5>오드리 헵번 by 유수프 카쉬, 1956</h5>\r\n            </center>\r\n            <div className={classes.ContentsText}>\r\n                <h4>\r\n                    스마트폰으로 <b>인물사진 마스터</b>에 도전합니다.\r\n                </h4>\r\n                <h5>\r\n                    늘 우리와 함께 하는 스마트폰. 작고 가벼운 스마트폰이지만, 스마트폰 카메라의 성능은 결고 가볍지 않습니다. 무려 <b>촬영, 편집, 보정을 한 큐에 끝낼 수 있는</b> 강력한 도구죠.\r\n<br /><br />\r\n모델의 마음까지 훔치는 스마트폰 인물사진 노우-하우를 <b>마스터와 함께</b> 배워 나갑니다. 퀘스트 특성에 맞는 맞춤 카메라를 제공해 드리니, 한 발짝씩 쉽게 따라오실 수 있을 거예요.\r\n</h5>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _current_scene: state.scene._current_scene\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMasterContentsIntro);","import React, { useEffect }  from 'react';\r\nimport './PortraitMaster.css'\r\nimport { connect } from 'react-redux';\r\nimport { set_scene, SetSelectImgIndex } from '../actions/scene';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {RemoveScrollBar, fullWidthClassName} from 'react-remove-scroll-bar';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\"\r\n        //background: '#FFFF0088', \r\n    },\r\n    left_title: {\r\n        position: \"absolute\",\r\n        left: \"0\",\r\n    },\r\n    right_title: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"10px\",\r\n        height: \"3%\",\r\n    },\r\n    ImgList: {\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n    },\r\n}));\r\n\r\nexport const PortraitMasterSimpleCaptureList = ({set_scene, SetSelectImgIndex, _canvasData}) => {\r\n    console.log('PortraitMasterSimpleCaptureList component start');\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        onUploadImageList();\r\n      }, []);\r\n\r\n    const onUploadImageList = () => {\r\n        console.log('onUploadImageList');\r\n        if (undefined != window.HybridApp) {\r\n            var imgCount = window.HybridApp.GetDirectoryFileCount();\r\n            for (var i = 0; i < imgCount; i++) {\r\n                var imgText = window.HybridApp.GetImageDataFromDirectory(i);\r\n                AddImage(i, imgText);\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < _canvasData.length; i++) {\r\n                AddImage(i, _canvasData[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    const AddImage = (index, imgsrc) => {\r\n        var element = document.createElement('img');\r\n        element.style.width = \"90%\";\r\n        element.style.height = \"auto\";\r\n        element.style.margin = \"5px\";\r\n        element.src = imgsrc;\r\n        element.onclick = function() {\r\n            console.log(\"img click index:\"+ index);\r\n            SetSelectImgIndex(index);\r\n            set_scene('FullScreenCaptureList');\r\n        };\r\n        var imgList = document.getElementById('imagelist');\r\n        imgList.appendChild(element);\r\n    }\r\n\r\n    const onClickGridCaptureList = () => {\r\n        console.log(\"onClickGridCaptureList\");\r\n        set_scene('GridCaptureList');\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.left_title}>내 사진</div>\r\n            <img className={classes.right_title} onClick={onClickGridCaptureList} src={process.env.PUBLIC_URL + '/img/image-modify-icon.png'} />\r\n            <div>\r\n                <br/>\r\n                <div id='imagelist' className=\"SimpleCaptureImageList\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _current_scene: state.scene._current_scene,\r\n    _canvasData: state.camera._canvasData\r\n});\r\nconst mapDispatchToProps = { set_scene, SetSelectImgIndex };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMasterSimpleCaptureList);","import React from 'react';\r\nimport './PortraitMaster.css';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport PortraitMasterContentsIntro from './PortraitMasterContentsIntro'\r\nimport PortraitMasterSimpleCaptureList from './PortraitMasterSimpleCaptureList'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  ContentsBody: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    left: \"0px\",\r\n    top: \"0px\",\r\n    bottom: \"50px\",\r\n    display: \"grid\",\r\n    gridTemplateRows: \"50% 50%\"\r\n  },\r\n  BottomBarBack: {\r\n    position: \"fixed\",\r\n    backgroundColor: '#FFFFFF88',\r\n    width: '100%',\r\n    height: '11%',\r\n    top: '89%',\r\n    left: '0%'\r\n  },\r\n  BottomBarButtonBase: {\r\n    position: \"fixed\",\r\n    height: \"8%\",\r\n    top: \"90%\",\r\n    background: 'linear-gradient(90deg, #cc6699 30%, #6666ff 80%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\r\n\r\n  },\r\n  BottomBarButtonLeft: {\r\n    width: \"44%\",\r\n    left: \"3%\",\r\n  },\r\n  BottomBarButtonRight: {\r\n    width: \"44%\",\r\n    left: \"53%\",\r\n  },\r\n  BottomBarButton: {\r\n    width: \"94%\",\r\n    left: \"3%\",\r\n  },\r\n  divLine: {\r\n    border: \"1px solid\",\r\n    color: \"#DDDDDD\",\r\n    width: \"95%\"\r\n  }\r\n}));\r\n\r\nexport const PortraitMaster = ({ _current_scene, set_scene, _canvasData }) => {\r\n  console.log('PortraitMaster component start');\r\n  const classes = useStyles();\r\n  const BottomBarButtonRight = clsx(classes.BottomBarButtonBase, classes.BottomBarButtonRight);\r\n  const BottomBarButtonLeft = clsx(classes.BottomBarButtonBase, classes.BottomBarButtonLeft);\r\n  const BottomBarButton = clsx(classes.BottomBarButtonBase, classes.BottomBarButton);\r\n\r\n  const onCameraCapture = () => {\r\n    set_scene(\"CameraCapture\");\r\n    console.log(\"onCameraCapture\");\r\n  }\r\n\r\n  const onCameraCaptureSubmit = () => {\r\n    set_scene(\"SubmitCaptureList\");\r\n    console.log(\"onCameraCaptureSubmit\");\r\n  }\r\n\r\n  const GetImageCount = () => {\r\n    if (undefined != window.HybridApp) {\r\n      return window.HybridApp.GetDirectoryFileCount();\r\n    }\r\n    else {\r\n      return _canvasData.length;\r\n    }\r\n  }\r\n\r\n  let simpleImageList;\r\n  let bottomButton;\r\n  var imageCount = GetImageCount();\r\n  if (imageCount == 0) {\r\n    bottomButton = <Button onClick={onCameraCapture} className={BottomBarButton} variant=\"contained\" color=\"secondary\">사진 찍기</Button>;\r\n  } else {\r\n    simpleImageList = <div><PortraitMasterSimpleCaptureList /> <hr className={classes.divLine} /></div>;\r\n    bottomButton = <div>< Button onClick={onCameraCapture} className={BottomBarButtonLeft} variant=\"contained\" color=\"secondary\" > 사진 찍기</Button >\r\n    <Button onClick={onCameraCaptureSubmit} className={BottomBarButtonRight} variant=\"contained\" color=\"secondary\">제출하기</Button></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"MainSceneRoot\">\r\n        {simpleImageList}\r\n        <PortraitMasterContentsIntro />\r\n      <div className={classes.BottomBarBack}>\r\n        {bottomButton}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _current_scene: state.scene._current_scene,\r\n  _canvasData: state.camera._canvasData\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMaster);","export const CLOSECAMERA = 'CLOSECAMERA';\r\nexport function CloseCamera(closeCamera) {\r\n    return {\r\n        type: CLOSECAMERA,\r\n        _closeCamera: closeCamera\r\n    };\r\n}\r\n\r\nexport const ADDCANVASDATA = 'ADDCANVASDATA';\r\nexport function AddCanvasData(data) {\r\n    return {\r\n        type: ADDCANVASDATA,\r\n        _addCanvasData: data\r\n    };\r\n}\r\n\r\nexport const DELETECANVASDATA = 'DELETECANVASDATA';\r\nexport function DeleteCanvasData(index) {\r\n    return {\r\n        type: DELETECANVASDATA,\r\n        _deleteCanvasDataIndex: index\r\n    };\r\n}\r\n","export function SetIframeFinish(success) {\r\n    if (undefined == window) {\r\n        return;\r\n    }\r\n    if (undefined == window.parent) {\r\n        return;\r\n    }\r\n\r\n    if (success == false) {\r\n        window.parent.postMessage(\"onBack\", \"*\");\r\n    }\r\n    else {\r\n        window.parent.postMessage(\"onSuccess\", \"*\");\r\n    }\r\n}\r\n\r\nexport function SetIframeFullScreen(fullScreen) {\r\n    if (undefined == window) {\r\n        return;\r\n    }\r\n    if (undefined == window.parent) {\r\n        return;\r\n    }\r\n    \r\n    if (fullScreen == false) {\r\n        window.parent.postMessage(\"onFitScreen\", \"*\");\r\n    }\r\n    else {\r\n        window.parent.postMessage(\"onFullScreen\", \"*\");\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './../PortraitMaster.css';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { set_scene } from '../../actions/scene'\r\nimport { AddCanvasData } from '../../actions/camera'\r\n\r\nimport { SetIframeFullScreen } from './../util/SendMessage'\r\n\r\nvar _videoUserCameraFlag = true;\r\n\r\nconst btnTopBatStyle = {\r\n    //backgroundColor: '#FF0000',\r\n    position: \"fixed\",\r\n    left: \"0px\",\r\n    top: \"0\",\r\n    width: \"100%\",\r\n    height: \"11.6%\",\r\n}\r\n\r\nconst btnBottomBarStyle = {\r\n    //backgroundColor: '#FF0000',\r\n    position: \"fixed\",\r\n    left: \"0px\",\r\n    top: \"88.4%\",\r\n    height: \"11.6%\",\r\n    width: \"100%\",\r\n}\r\n\r\nconst rootStyle = {\r\n    position: \"fixed\",\r\n    left: \"0%\",\r\n    top: \"0%\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    zIndex: '-3',\r\n    backgroundColor : 'black'\r\n}\r\n\r\nconst videoStyle = {\r\n    position: \"fixed\",\r\n    left: \"0%\",\r\n    //top: \"0%\",\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    top: \"50%\",\r\n    transform: 'translate(0%, -50%)',\r\n    zIndex: '-2'\r\n}\r\n\r\nconst canvasStyle = {\r\n    position: \"fixed\",\r\n    left: \"0%\",\r\n    //top: \"0%\",\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    top: \"50%\",\r\n    transform: 'translate(0%, -50%)',\r\n    zIndex: '-1'\r\n}\r\n\r\nconst btnLeftBottomStyle = {\r\n    position: \"fixed\",\r\n    height: \"5.1%\",\r\n    left: \"10%\",\r\n    top: \"91.5%\"\r\n}\r\n\r\nconst btnCenterBottomStyle = {\r\n    position: \"fixed\",\r\n    height: \"9.1%\",\r\n    left: \"40%\",\r\n    top: \"89.5%\"\r\n}\r\n\r\nconst btnRightBottomStyle = {\r\n    position: \"fixed\", \r\n    height: \"5.1%\",\r\n    left: \"75%\",\r\n    top: \"91.5%\"\r\n}\r\n\r\nconst btnTopStyle1 = {\r\n    position: \"fixed\",\r\n    height: \"5.1%\",\r\n    left: \"5%\",\r\n    top: \"3.5%\"\r\n}\r\n\r\nconst btnTopStyle2 = {\r\n    position: \"fixed\",\r\n    height: \"5.1%\",\r\n    left: \"25%\",\r\n    top: \"3.5%\"\r\n}\r\n\r\nconst btnTopStyle3 = {\r\n    position: \"fixed\",\r\n    height: \"5.1%\",\r\n    left: \"45%\",\r\n    top: \"3.5%\"\r\n}\r\n\r\nconst btnTopStyle4 = {\r\n    position: \"fixed\",\r\n    height: \"2.1%\",\r\n    left: \"65%\",\r\n    top: \"5%\"\r\n}\r\n\r\nconst btnTopStyle5 = {\r\n    position: \"fixed\",\r\n    height: \"5.1%\",\r\n    left: \"85%\",\r\n    top: \"3.5%\"\r\n}\r\n\r\n// const flashEffect = {\r\n//     position: \"fixed\",\r\n//     height: \"100%\",\r\n//     width: \"100%\",\r\n//     left: \"0%\",\r\n//     top: \"0%\",\r\n//     backgroundColor : \"white\"\r\n// }\r\n\r\nclass CameraCapture extends Component {\r\n\r\n    static defaultProps = {\r\n        showVideo: false,\r\n        showDebugVideo: true,\r\n        loadingText: 'Loading...please be patient...'\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props, CameraCapture.defaultProps)\r\n        //this.resize = this.resize.bind(this);\r\n        this.stopCamera = this.stopCamera.bind(this);\r\n\r\n        this.state = {\r\n            cameraCaptureTimerType: 0,\r\n            cameraFlashType: 0,\r\n            cameraFilterType: 0,\r\n            captureRatioType: 0,\r\n            gridView: false,\r\n            flashEffect: false\r\n        };\r\n    }\r\n\r\n    getCanvas = elem => {\r\n        this.canvas = elem\r\n    }\r\n\r\n    getCanvasOverlay = elem => {\r\n        this.canvasOverlay = elem\r\n    }\r\n\r\n    getVideo = elem => {\r\n        this.video = elem;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        SetIframeFullScreen(true);\r\n        try {\r\n            await this.setupCamera();\r\n        } catch (error) {\r\n            throw new Error(\r\n                'This browser does not support video capture, or this device does not have a camera'\r\n            )\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        SetIframeFullScreen(false);\r\n        this.setFlashLight(false);\r\n        this.stopCamera();\r\n    }\r\n\r\n    async setupCamera() {\r\n        if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\r\n            throw new Error(\r\n                'Browser API navigator.mediaDevices.getUserMedia not available'\r\n            )\r\n        }\r\n        navigator.mediaDevices.enumerateDevices()\r\n            .then(function (devices) {\r\n                devices.forEach(function (device) {\r\n                    if (device.kind === 'videoinput') {\r\n                        //_videoCamneraList.push(device.deviceId);\r\n                    }\r\n                    console.log(device.kind + \": \" + device.label + \", id = \" + device.deviceId);\r\n                });\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err.name + \": \" + err.message);\r\n            });\r\n\r\n        //this.resize();\r\n        this.playCamera();\r\n        this.updateCamera();\r\n    }\r\n\r\n    async playCamera() {\r\n        if (window.stream) {\r\n            window.stream.getTracks().forEach(track => {\r\n                track.stop();\r\n            });\r\n        }\r\n\r\n        const video = this.video;\r\n        //video.style.transform = 'rotatey(180deg)';\r\n\r\n        // const videoSource = _videoCamneraList[_videoSelectIndex];\r\n        // console.log('videoSource:' + videoSource);\r\n\r\n        var screenWidth = 1080;//1280;//1920;//video.width;//window.innerWidth;\r\n        var screenHeight = 1080;//720;//1080;//video.height;//window.innerHeight;\r\n\r\n        var facingModeText = 'user';\r\n        if (_videoUserCameraFlag == false) {\r\n            facingModeText = 'environment';\r\n        }\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n          audio: false,\r\n          video: {\r\n            //deviceId: videoSource ? { exact: videoSource } : undefined,\r\n            facingMode: facingModeText,\r\n            frameRate: 60,\r\n            width: {exact: screenWidth},\r\n            height: {exact: screenHeight},\r\n            aspectRatio: {\r\n                exact: screenWidth / screenHeight\r\n            }\r\n          }\r\n        })\r\n\r\n        window.stream = stream;\r\n        video.srcObject = stream;\r\n        video.play();\r\n    }\r\n\r\n    stopCamera() {\r\n        console.log('stopCamera call');\r\n        const video = this.video;\r\n        //console.log(video);\r\n        if (undefined == video) {\r\n            return;\r\n        }\r\n        video.pause();\r\n        video.src = \"\";\r\n        if (undefined != video.srcObject) {\r\n            video.srcObject.getTracks()[0].stop();\r\n            video.srcObject = undefined;\r\n        }\r\n        console.log(\"video off\");\r\n    }\r\n\r\n    setFlashLight(state) {\r\n        console.log('setFlashLight:'+state);\r\n        if (undefined == window.stream) {\r\n            return;\r\n        }\r\n        const track = window.stream.getVideoTracks()[0];\r\n        console.log(track);\r\n        if (undefined == track) {\r\n            return;\r\n        }\r\n\r\n        var capabilities = track.getCapabilities();\r\n        console.log(capabilities);\r\n        if (undefined == capabilities) {\r\n            return;\r\n        }\r\n        console.log(capabilities.torch);\r\n        if (capabilities.torch) {\r\n            track.applyConstraints({\r\n                advanced: [{ torch: state }]\r\n            }).catch(e => console.log(e));\r\n        }\r\n    }\r\n\r\n    updateCamera() {\r\n        const canvas = this.canvas;\r\n        if (undefined == canvas) {\r\n            return;\r\n        }\r\n        const canvasContext = canvas.getContext('2d')\r\n        if (undefined == canvasContext) {\r\n            return;\r\n        }\r\n        const video = this.video;\r\n        if (undefined == video) {\r\n            return;\r\n        }\r\n        //console.log('showVideo:' + this.props.showVideo);\r\n        if (false == this.props.showVideo) {\r\n            video.style.display = \"none\";\r\n        }\r\n        else {\r\n            video.style.display = \"block\";\r\n        }\r\n        this.updateCameraFrame(canvasContext)\r\n    }\r\n\r\n    updateCameraFrame(canvasContext) {\r\n        const video = this.video;\r\n        const findUpdateCameraFrame = async () => {\r\n            const canvas = this.canvas;\r\n            if (true == this.props.showDebugVideo && undefined != canvas) {\r\n\r\n                if (video.videoWidth != canvas.width || video.videoHeight != canvas.height) {\r\n                    canvas.width = video.videoWidth;\r\n                    canvas.height = video.videoHeight;\r\n                    canvasContext.width = video.videoWidth;\r\n                    canvasContext.height = video.videoHeight;\r\n                }\r\n                //console.log('resolution width:' + video.videoWidth + \", canvas width:\" + canvas.width);\r\n                //console.log('video pos x:' + canvas.style.left + \", y:\" + canvas.style.top);\r\n                //console.log(video);\r\n                //console.log('video:' + video.left + ',' + video.top + ',' + video.width + ',' + video.height);\r\n                canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n                //CanvasFPS_Update();\r\n                canvasContext.save();\r\n\r\n                switch (this.state.cameraFilterType) {\r\n                    case 0: {\r\n                        canvasContext.filter = 'none';\r\n                    }break;\r\n                    case 1: {\r\n                        canvasContext.filter = 'grayscale(100%)';\r\n                    }break;\r\n                    case 2: {\r\n                        canvasContext.filter = 'brightness(100%)';\r\n                    }break;\r\n                    case 3: {\r\n                        canvasContext.filter = 'contrast(100%)';\r\n                    }break;\r\n                    case 4: {\r\n                        canvasContext.filter = 'sepia(100%)';\r\n                    }break;\r\n                    case 5: {\r\n                        canvasContext.filter = 'invert(100%)';\r\n                    }break;\r\n                    case 6: {\r\n                        canvasContext.filter = 'saturate(100%)';\r\n                    }break;\r\n                    case 7: {\r\n                        canvasContext.filter = 'blur(4px)';\r\n                    }break;\r\n                }\r\n                //canvasContext.scale(-1, 1)\r\n                //canvasContext.translate(-video.width, 0)\r\n                \r\n                canvasContext.drawImage(video, 0, 0);//, video.videoWidth, video.videoHeight)\r\n                canvasContext.restore();\r\n\r\n                // var fontSize = canvas.width/20;\r\n                // canvasContext.fillStyle = 'white';\r\n                // canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n                // canvasContext.shadowBlur = 2;\r\n                // canvasContext.shadowOffsetX = 3;\r\n                // canvasContext.shadowOffsetY = 3;\r\n                // canvasContext.font = fontSize + \"px Arial\";\r\n                // canvasContext.textAlign = \"center\";\r\n                // canvasContext.fillText('목표', canvas.width - fontSize*4, fontSize);\r\n                //CanvasFPS_Render(canvasContext);\r\n            }\r\n\r\n            if ('start' == this.props._closeCamera) {\r\n                this.stopCamera();\r\n                this.props.onCloseCamera('complete');\r\n                return;\r\n            }\r\n            requestAnimationFrame(findUpdateCameraFrame)\r\n        }\r\n        findUpdateCameraFrame()\r\n    }\r\n\r\n    updateCameraGrid = (viewState) => {\r\n        const video = this.video;\r\n        if (undefined == video) {\r\n            return;\r\n        }\r\n\r\n        const canvas = this.canvasOverlay;\r\n        if (undefined == canvas) {\r\n            return;\r\n        }\r\n        const canvasContext = canvas.getContext('2d')\r\n        if (undefined == canvasContext) {\r\n            return;\r\n        }\r\n    \r\n        if (video.videoWidth != canvas.width || video.videoHeight != canvas.height) {\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n            canvasContext.width = video.videoWidth;\r\n            canvasContext.height = video.videoHeight;\r\n        }\r\n\r\n        canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        if (true == viewState) {\r\n            canvasContext.save();\r\n            canvasContext.strokeStyle = 'rgb(255,0,0)';\r\n            canvasContext.lineWidth = 3;//Math.floor(Math.random() * Math.floor(3))+1; \r\n            canvasContext.globalAlpha = 0.1;\r\n\r\n            for (var x = 0; x <= canvas.width; x += canvas.width/3) {\r\n                canvasContext.moveTo(x, 0);\r\n                canvasContext.lineTo(x, canvas.height);\r\n            }\r\n            for (var y = 0; y <= canvas.height; y += canvas.height/3) {\r\n                canvasContext.moveTo(0, y);\r\n                canvasContext.lineTo(canvas.width, y);\r\n            }\r\n            canvasContext.stroke();\r\n            canvasContext.restore();\r\n        }\r\n    }\r\n\r\n    onNextCamera = () => {\r\n        // _videoSelectIndex++;\r\n        // if (_videoCamneraList.length <= _videoSelectIndex)\r\n        //   _videoSelectIndex = 0;\r\n        // console.log('camera index : ' + _videoSelectIndex);\r\n\r\n        _videoUserCameraFlag = !_videoUserCameraFlag;\r\n        console.log('user camera flag : ' + _videoUserCameraFlag);\r\n        this.playCamera();\r\n        if (true == _videoUserCameraFlag) {\r\n            this.onFlash();\r\n        }\r\n        else {\r\n            this.setFlashLight((this.state.cameraFlashType == 1) ? true : false);\r\n        }\r\n    }\r\n\r\n    onTimerSelect = () => {\r\n        var currentValue = this.state.cameraCaptureTimerType;\r\n        currentValue++;\r\n        if (currentValue > 3) {\r\n            currentValue = 0;\r\n        }\r\n        this.setState(() => {\r\n            return {cameraCaptureTimerType: currentValue};\r\n          });\r\n        console.log(\"timer:\" + currentValue);\r\n    }\r\n\r\n    onCaptureAnimation = () => {\r\n        console.log('onCaptureAnimation call');\r\n        if (true == this.state.flashEffect) {\r\n            console.log('onCaptureAnimation call fail!');\r\n            return;\r\n        }\r\n        this.setState({\r\n            flashEffect: true\r\n          });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                flashEffect: false\r\n              });\r\n        }, 800);\r\n    }\r\n\r\n    onCapture = () => {\r\n        const canvas = this.canvas;\r\n        if (undefined == canvas) {\r\n            return;\r\n        }\r\n\r\n        var delayDuration = 0;\r\n        switch (this.state.cameraCaptureTimerType) {\r\n            case 0:\r\n                delayDuration = 0;\r\n                break;\r\n            case 1:\r\n                delayDuration = 3000;\r\n                break;\r\n            case 2:\r\n                delayDuration = 5000;\r\n                break;\r\n            case 3:\r\n                delayDuration = 10000;\r\n                break;\r\n        }\r\n        var d = new Date();\r\n        var dateText = d.toISOString();\r\n        if (undefined == window.HybridApp) {\r\n            setTimeout(() => {\r\n                var saveImage = canvas.toDataURL(\"image/jpeg\", 1.0);\r\n                this.props.onAddCanvasData(saveImage);\r\n                this.onCaptureAnimation();\r\n            }, delayDuration);\r\n        }\r\n        else {\r\n            setTimeout(() => {\r\n                var saveImage = canvas.toDataURL(\"image/jpeg\", 1.0);\r\n                if (undefined != window.HybridApp) {\r\n                    window.HybridApp.SaveAlbumJpgImage(saveImage, dateText + \".jpg\");\r\n                } else {\r\n                    var a = document.createElement(\"a\");\r\n                    document.body.appendChild(a);\r\n                    a.style = \"display: none\";\r\n                    a.href = saveImage;\r\n                    a.download = dateText + \".jpg\";\r\n                    a.click();\r\n                    window.URL.revokeObjectURL(saveImage);\r\n                }\r\n                this.onCaptureAnimation();\r\n                console.log(\"onCapture\");\r\n            }, delayDuration);\r\n        }\r\n    }\r\n\r\n    onBack = () => {\r\n        console.log(\"onBack\");\r\n        this.props.onSetScene(\"PortraitMaster\");\r\n    }\r\n\r\n    onFlash = () => {\r\n        var currentValue = this.state.cameraFlashType;\r\n        currentValue++;\r\n        if (currentValue > 1) {\r\n            currentValue = 0;\r\n        }\r\n        // 유저 카메라 모드에소는 라이트를 쓰지 않게함\r\n        if (true == _videoUserCameraFlag) {\r\n            currentValue = 0;\r\n        }\r\n        this.setState(() => {\r\n            return {cameraFlashType: currentValue};\r\n          });\r\n\r\n        this.setFlashLight((currentValue == 1) ? true : false);\r\n        console.log(\"flash:\" + currentValue);\r\n    }\r\n    \r\n    onToggleGrid = () => {\r\n        var viewState = !this.state.gridView;\r\n        this.setState(() => {\r\n            return {gridView: viewState};\r\n          });\r\n        console.log(\"grid view:\" + viewState);\r\n        this.updateCameraGrid(viewState);\r\n    }\r\n\r\n    onCaptureRatio = () => {\r\n        var currentValue = this.state.captureRatioType;\r\n        currentValue++;\r\n        if (currentValue > 1) {\r\n            currentValue = 0;\r\n        }\r\n        this.setState(() => {\r\n            return {captureRatioType: currentValue};\r\n          });\r\n        console.log(\"capture Ratio Type:\" + currentValue);\r\n    }\r\n\r\n\r\n    onMovieFilter = () => {\r\n        var currentValue = this.state.cameraFilterType;\r\n        currentValue++;\r\n        if (currentValue > 7) {\r\n            currentValue = 0;\r\n        }\r\n        this.setState(() => {\r\n            return {cameraFilterType: currentValue};\r\n          });\r\n        console.log(\"camera filter:\" + currentValue);\r\n    }\r\n    \r\n    render() {\r\n        let timerIcon;\r\n        switch (this.state.cameraCaptureTimerType) {\r\n            case 0: {\r\n                timerIcon = <img style={btnLeftBottomStyle} onClick={this.onTimerSelect.bind(this)} src={process.env.PUBLIC_URL + '/img/TimerOff.png'} />;\r\n            } break;\r\n            case 1: {\r\n                timerIcon = <img style={btnLeftBottomStyle} onClick={this.onTimerSelect.bind(this)} src={process.env.PUBLIC_URL + '/img/Timer3.png'} />;\r\n            } break;\r\n            case 2: {\r\n                timerIcon = <img style={btnLeftBottomStyle} onClick={this.onTimerSelect.bind(this)} src={process.env.PUBLIC_URL + '/img/Timer5.png'} />;\r\n                \r\n            } break;\r\n            case 3: {\r\n                timerIcon = <img style={btnLeftBottomStyle} onClick={this.onTimerSelect.bind(this)} src={process.env.PUBLIC_URL + '/img/Timer10.png'} />;\r\n            } break;\r\n        }\r\n\r\n        let flashIcon;\r\n        switch (this.state.cameraFlashType) {\r\n            case 0: {\r\n                flashIcon = <img style={btnTopStyle2} onClick={this.onFlash.bind(this)} src={process.env.PUBLIC_URL + '/img/FlashOff.png'} />\r\n            } break;\r\n            case 1: {\r\n                flashIcon = <img style={btnTopStyle2} onClick={this.onFlash.bind(this)} src={process.env.PUBLIC_URL + '/img/FlashOn.png'} />\r\n            } break;\r\n        }\r\n        \r\n        let gridIcon;\r\n        if (false == this.state.gridView) {\r\n            gridIcon = <img style={btnTopStyle3} onClick={this.onToggleGrid.bind(this)} src={process.env.PUBLIC_URL + '/img/GridOff.png'} />\r\n        } else {\r\n            gridIcon = <img style={btnTopStyle3} onClick={this.onToggleGrid.bind(this)} src={process.env.PUBLIC_URL + '/img/GridOn.png'} />\r\n        }\r\n\r\n        let captureRatioIcon;\r\n        if (0 == this.state.captureRatioType) {\r\n            captureRatioIcon = <img style={btnTopStyle4} onClick={this.onCaptureRatio.bind(this)} src={process.env.PUBLIC_URL + '/img/CaptureRatio4_3.png'} />\r\n        } else {\r\n            captureRatioIcon = <img style={btnTopStyle4} onClick={this.onCaptureRatio.bind(this)} src={process.env.PUBLIC_URL + '/img/CaptureRatio16_9.png'} />\r\n        }\r\n\r\n        let filterIcon;\r\n        if (0 == this.state.cameraFilterType) {\r\n            filterIcon = <img style={btnTopStyle5} onClick={this.onMovieFilter.bind(this)} src={process.env.PUBLIC_URL + '/img/FilterOff.png'} />\r\n        } else {\r\n            filterIcon = <img style={btnTopStyle5} onClick={this.onMovieFilter.bind(this)} src={process.env.PUBLIC_URL + '/img/FilterOn.png'} />\r\n        }\r\n\r\n        return (\r\n            <div style={rootStyle}>\r\n                {/* <meta http-equiv=\"Content-Security-Policy\" content=\"default-src * gap:; script-src * 'unsafe-inline' 'unsafe-eval'; connect-src *; img-src * data: blob: android-webview-video-poster:; style-src * 'unsafe-inline';\" /> */}\r\n                <video id='videoCamera' style={videoStyle} src=\"\" playsInline ref={this.getVideo} />\r\n                <canvas style={canvasStyle} ref={this.getCanvas} />\r\n                <canvas id='canvasOverlay' style={canvasStyle} ref={this.getCanvasOverlay} />\r\n\r\n                <div style={btnTopBatStyle}>\r\n                    <img style={btnTopStyle1} onClick={this.onBack.bind(this)} src={process.env.PUBLIC_URL + '/img/CameraBack.png'} />\r\n                    {flashIcon}\r\n                    {gridIcon}\r\n                    {captureRatioIcon}\r\n                    {filterIcon}\r\n                    {/* <IconButton onClick={this.onBack.bind(this)}><ArrowBackIosOutlinedIcon color=\"primary\" fontSize=\"large\" /></IconButton>\r\n                    <IconButton onClick={this.onFlash.bind(this)}>{flashIcon}</IconButton>\r\n                    <IconButton onClick={this.onToggleGrid.bind(this)}><GridOnOutlinedIcon color=\"primary\" fontSize=\"large\" /></IconButton>\r\n                    <IconButton onClick={this.onMovieFilter.bind(this)}><MovieFilterOutlinedIcon color=\"primary\" fontSize=\"large\" /></IconButton> */}\r\n                </div>\r\n\r\n                <div style={btnBottomBarStyle}>\r\n                    {timerIcon}\r\n                    <img style={btnCenterBottomStyle} onClick={this.onCapture.bind(this)} src={process.env.PUBLIC_URL + '/img/shutter_normal.png'} />\r\n                    <img style={btnRightBottomStyle} onClick={this.onNextCamera.bind(this)} src={process.env.PUBLIC_URL + '/img/FlipCamera.png'} />\r\n                </div>\r\n\r\n                <div className={\"CameraCaptureEffect \" + (this.state.flashEffect ? 'CameraCaptureAnimation' : '')}>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        _current_scene: state.scene._current_scene,\r\n        _closeCamera: state.camera._closeCamera\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetScene: (state) => dispatch(set_scene(state)),\r\n        onAddCanvasData: (img) => dispatch(AddCanvasData(img)),\r\n    }\r\n}\r\n\r\nCameraCapture = connect(mapStateToProps, mapDispatchToProps)(CameraCapture);\r\n\r\nexport default CameraCapture;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  ContentsBody: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    left: \"0px\",\r\n    top: \"0px\",\r\n    bottom: \"50px\",\r\n  },\r\n  ImgList: {\r\n    display: \"flex\",\r\n    overflowX: \"auto\",\r\n  },\r\n  BottomBar1: {\r\n    position: \"fixed\",\r\n    width: \"40%\",\r\n    Height: \"50px\",\r\n    left: \"5%\",\r\n    bottom: \"0px\",\r\n  },\r\n  BottomBar2: {\r\n    position: \"fixed\",\r\n    width: \"40%\",\r\n    left: \"55%\",\r\n    Height: \"50px\",\r\n    bottom: \"0px\",\r\n  }\r\n}));\r\n\r\n\r\nexport const CameraCaptureSelect = ({ _current_scene, set_scene }) => {\r\n  console.log('Index_scene component start');\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    onUploadImageList();\r\n  });\r\n\r\n  const imgUpload = (file) => {\r\n    console.log(\"imgUpload:\");\r\n    console.log(file);\r\n    var fr = new FileReader();\r\n    fr.onload = function (event) {\r\n      var src = event.target.result;\r\n      var img = new Image();\r\n      img.onload = function () {\r\n        AddImage(fr.result);\r\n      };\r\n      img.src = src;\r\n    };\r\n    fr.readAsDataURL(file);\r\n  }\r\n\r\n  const onAddImageChange = (imageInput) => {\r\n    console.log(\"onAddImageChange\");\r\n    if (imageInput.target.files[0]) {\r\n      imgUpload(imageInput.target.files[0]);\r\n    }\r\n  }\r\n\r\n  const onAddImageSelect = () => {\r\n    console.log(\"onAddImageSelect\");\r\n    var fileInput = document.createElement('input');\r\n    fileInput.type = \"file\";\r\n    fileInput.accept = \"image/*\";\r\n    fileInput.style.display = 'none';\r\n    fileInput.onchange = onAddImageChange;\r\n    document.body.appendChild(fileInput);\r\n    fileInput.click();\r\n  }\r\n\r\n  const onUploadImageList = () => {\r\n    console.log('onUploadImageList');\r\n    if (undefined != window.HybridApp) {\r\n      var imgCount = window.HybridApp.GetDirectoryFileCount();\r\n      for (var i = 0; i < imgCount; i++) {\r\n        var imgText = window.HybridApp.GetImageDataFromDirectory(i);\r\n        AddImage(imgText);\r\n      }\r\n    }\r\n  }\r\n\r\n  const onUploadData = () => {\r\n    console.log('onUploadData');\r\n  }\r\n\r\n  const AddImage = (imgsrc) => {\r\n    var element = document.createElement('img');\r\n    element.style.display = \"block\";\r\n    element.style.width = \"65%\";\r\n    element.style.height = \"auto\";\r\n    element.style.margin = \"5px\";\r\n    element.src = imgsrc;\r\n    var imgList = document.getElementById('imagelist');\r\n    imgList.appendChild(element);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div id='imagelist' className={classes.ImgList}>\r\n      </div>\r\n      {/* <input type='file' accept='image/*' onChange={onAddImageChange}/> */}\r\n      <Button onClick={onAddImageSelect} className={classes.BottomBar1} variant=\"contained\" color=\"secondary\">\r\n        이미지 선택\r\n      </Button>\r\n      <Button onClick={onUploadData} className={classes.BottomBar2} variant=\"contained\" color=\"secondary\">\r\n        제출하기\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _current_scene: state.scene._current_scene\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CameraCaptureSelect);","import React, { useEffect, useState }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\nimport { DeleteCanvasData } from '../actions/camera'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n    bottomBar: {\r\n        position: \"fixed\",\r\n        height: '50px',\r\n        bottom: \"0px\",\r\n        width: \"100%\",\r\n        backgroundColor: '#000000AA',\r\n    },\r\n    upload_button: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        left: \"20px\",\r\n        height: \"30px\",\r\n    },\r\n    delete_button: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"20px\",\r\n        height: \"30px\",\r\n    },\r\n    BottomBarButton: {\r\n        position: \"absolute\",\r\n        height: \"94%\",\r\n        top: \"3%\",\r\n        background: 'linear-gradient(90deg, #cc6699 30%, #6666ff 80%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\r\n        width: \"94%\",\r\n        left: \"3%\",\r\n      },\r\n}));\r\n\r\nexport const PortraitMasterCaptureImageControlBar = ({set_scene, itemCount, onClickUploadImage, onClickDeleteImage, onClickSubmit, DeleteCanvasData, enableSubmit}) => {\r\n    console.log('PortraitMasterCaptureImageControlBar component start');\r\n    console.log('enableSubmit:' + enableSubmit);\r\n    const classes = useStyles();\r\n\r\n    const getButton = () => {\r\n        if (true == enableSubmit) {\r\n            return (\r\n                <div className={classes.bottomBar} >\r\n                    <Button onClick={onClickSubmit} className={classes.BottomBarButton} variant=\"contained\" color=\"secondary\">제출하기</Button>;\r\n                </div>\r\n            );\r\n        } else {\r\n            let uploadImageButton;\r\n            let deleteImageButton;\r\n\r\n            if (itemCount != 0) {\r\n                uploadImageButton = <img className={classes.upload_button} onClick={onClickUploadImage} src={process.env.PUBLIC_URL + '/img/image-select-upload-enable-icon.png'} />;\r\n                deleteImageButton = <img className={classes.delete_button} onClick={onClickDeleteImage} src={process.env.PUBLIC_URL + '/img/image-select-delete-enable-icon.png'} />;\r\n            } else {\r\n                uploadImageButton = <img className={classes.upload_button} src={process.env.PUBLIC_URL + '/img/image-select-upload-disable-icon.png'} />;\r\n                deleteImageButton = <img className={classes.delete_button} src={process.env.PUBLIC_URL + '/img/image-select-delete-disable-icon.png'} />;\r\n            }\r\n            return (\r\n                <div className={classes.bottomBar} >\r\n                    {uploadImageButton}\r\n                    {deleteImageButton}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}> \r\n            {getButton()}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _current_scene: state.scene._current_scene\r\n});\r\nconst mapDispatchToProps = { set_scene, DeleteCanvasData };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMasterCaptureImageControlBar);","import React, { useEffect, useState }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\nimport { DeleteCanvasData } from '../actions/camera'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport PortraitMasterCaptureImageControlBar from './PortraitMasterCaptureImageControlBar'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        background: '#000000', \r\n    },\r\n    select_text: {\r\n        color: 'white'\r\n    },\r\n    ImgList: {\r\n        overflowY: \"auto\",\r\n        background: '#000000', \r\n    },\r\n    bottomBar: {\r\n        position: \"fixed\",\r\n        height: '50px',\r\n        bottom: \"0px\",\r\n        width: \"100%\",\r\n        backgroundColor: '#000000AA',\r\n    },\r\n    upload_button: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        left: \"20px\",\r\n        height: \"30px\",\r\n    },\r\n    delete_button: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"20px\",\r\n        height: \"30px\",\r\n    },\r\n}));\r\n\r\nvar _items = [];\r\nexport const PortraitMasterGridCaptureImageList = ({_canvasData, set_scene, DeleteCanvasData}) => {\r\n    console.log('PortraitMasterGridCaptureImageList component start');\r\n    const classes = useStyles();\r\n    const [itemCount, setItemCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        onUpdateImageList();\r\n      }, []);\r\n\r\n    const onUpdateImageList = () => {\r\n        console.log('onUpdateImageList');\r\n        if (undefined != window.HybridApp) {\r\n            var imgCount = window.HybridApp.GetDirectoryFileCount();\r\n            for (var i = 0; i < imgCount; i++) {\r\n                var imgText = window.HybridApp.GetImageDataFromDirectory(i);\r\n                AddImage(i, imgText);\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < _canvasData.length; i++) {\r\n                AddImage(i, _canvasData[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectImage = (id) => {\r\n        console.log(\"selectImage:\" + id);\r\n        var deleteState = false;\r\n        for (var i = 0; i < _items.length; i++) {\r\n            if (_items[i] == id) {\r\n                _items.splice(i, 1); \r\n                deleteState = true;\r\n                break;\r\n            }\r\n        }\r\n        if (false == deleteState) {\r\n            _items.push(id);\r\n        }\r\n        setItemCount(_items.length);\r\n        return !deleteState;\r\n    }\r\n\r\n    const getSelectState = (id) => {\r\n        for (var i = 0; i < _items.length; i++) {\r\n            if (_items[i] == id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function onToggleImage(){\r\n        console.log(\"onToggleImage:\" + this.id);\r\n        var selectState = selectImage(this.id);\r\n        //console.log(\"onToggleImage:\");\r\n        var imgElement = document.getElementById(this.id);\r\n        if (undefined != imgElement) {\r\n            if (true == selectState) {\r\n                imgElement.style.filter = \"brightness(150%) grayscale(80%)\";\r\n            }\r\n            else {\r\n                imgElement.style.filter = \"\";\r\n            }\r\n        }\r\n\r\n        var checkElement = document.getElementById(this.id + 'Check');\r\n        if (undefined != checkElement) {\r\n            if (true == selectState) {\r\n                //console.log('checkElement block');\r\n                checkElement.style.display = \"block\";\r\n            }\r\n            else {\r\n                //console.log('checkElement none');\r\n                checkElement.style.display = \"none\";\r\n            }\r\n        }\r\n    }\r\n\r\n    const AddImage = (index, imgsrc) => {\r\n        var imgList = document.getElementById('imagelist');\r\n        if (undefined == imgList) {\r\n            return;\r\n        }\r\n\r\n        var divElement = document.createElement('div');\r\n        divElement.id = 'img' + index + 'Root';\r\n        divElement.style.position = \"relative\";\r\n        imgList.appendChild(divElement);\r\n\r\n        var imgElement = document.createElement('img');\r\n        imgElement.id = 'img' + index;\r\n        imgElement.style.position = \"relative\";\r\n        imgElement.style.width = \"100%\";\r\n        imgElement.style.height = \"auto\";\r\n        imgElement.onclick = onToggleImage;\r\n        imgElement.style.margin = \"5px\";\r\n        imgElement.src = imgsrc;\r\n        divElement.appendChild(imgElement);\r\n\r\n        var overlayElement = document.createElement('img');\r\n        overlayElement.id = 'img' + index + 'Check';\r\n        overlayElement.style.position = \"absolute\";\r\n        overlayElement.style.display = \"none\";\r\n        overlayElement.style.width = \"40px\";\r\n        overlayElement.style.height = \"auto\";\r\n        overlayElement.style.right = \"10px\";\r\n        overlayElement.style.bottom = \"10px\";\r\n        overlayElement.src = process.env.PUBLIC_URL + '/img/image-checked-icon.png';\r\n        divElement.appendChild(overlayElement);\r\n    }\r\n\r\n    const onClickUploadImage = () => {\r\n        console.log(\"onClickUploadImage call\");\r\n\r\n        var selectIndex = -1;\r\n        for (var i = 0; i < _items.length; i++) {\r\n            var selectState = getSelectState(_items[i]);\r\n            if (selectState == true) {\r\n                selectIndex = getIndexFromId(_items[i]);\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (-1 != selectIndex) {\r\n            if (undefined != window.HybridApp) {\r\n                window.HybridApp.DoShareImage(selectIndex, 'level up hero 인물사진 퀘스트');\r\n            } else {\r\n                //set_scene('PortraitMaster');\r\n            }\r\n        }\r\n    }\r\n\r\n    const getIndexFromId = (id) => {\r\n        var removeText = 'img';\r\n        var indexText = id.substring(removeText.length);\r\n        try {\r\n            return parseInt(indexText);\r\n        } catch (error) {\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    const onClickDeleteImage = () => {\r\n        console.log(\"onClickDeleteImage call\");\r\n        var deleteIndexList = [];\r\n        for (var i = 0; i < _items.length; i++) {\r\n            var img_element = document.getElementById(_items[i] + 'Root');\r\n            if (undefined == img_element) {\r\n                console.log('select item delete error id:' + _items[i]);\r\n                break;\r\n            }\r\n            img_element.remove();\r\n            var selectState = getSelectState(_items[i]);\r\n            if (selectState == true) {\r\n                var index = getIndexFromId(_items[i]);\r\n                deleteIndexList.push(index);\r\n            }\r\n        }\r\n        _items = [];\r\n        setItemCount(0);\r\n\r\n        deleteIndexList.sort(function(a, b) {\r\n            return b - a;\r\n        });\r\n        \r\n        for (var i = 0; i < deleteIndexList.length; i++) {\r\n            console.log('select item DeleteCanvasData call index:' + deleteIndexList[i]);\r\n            if (undefined != window.HybridApp) {\r\n                window.HybridApp.DeleteImageDataFromDirectory(deleteIndexList[i]);\r\n            }\r\n            else {\r\n                DeleteCanvasData(deleteIndexList[i]);\r\n            }\r\n        }\r\n        var imgList = document.getElementById('imagelist');\r\n        if (undefined == imgList) {\r\n            return;\r\n        }\r\n        if (imgList.childElementCount == 0) {\r\n            set_scene('PortraitMaster');\r\n        }\r\n    }\r\n\r\n    let selectText;\r\n\r\n    if (itemCount != 0) {\r\n        selectText = <div className={classes.select_text}><center>{itemCount}개 선택됨</center></div>;\r\n    } else {\r\n        selectText = <div className={classes.select_text}><center>선택 되지 않음</center></div>;\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n            {selectText}\r\n            <div id=\"imagelist\" className={classes.ImgList} />\r\n            <PortraitMasterCaptureImageControlBar itemCount={itemCount} onClickUploadImage={onClickUploadImage} onClickDeleteImage={onClickDeleteImage} />\r\n        </div >\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _current_scene: state.scene._current_scene,\r\n    _canvasData: state.camera._canvasData\r\n});\r\nconst mapDispatchToProps = { set_scene, DeleteCanvasData };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMasterGridCaptureImageList);","import React, { useEffect, useState }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene, SetSelectImgIndex } from '../actions/scene';\r\nimport { DeleteCanvasData } from '../actions/camera'\r\nimport { makeStyles, formatMs } from '@material-ui/core/styles';\r\nimport { SetIframeFinish } from './util/SendMessage';\r\n\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { PortraitMasterCaptureImageControlBar } from './PortraitMasterCaptureImageControlBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: \"absolute\",\r\n        left: \"0%\",\r\n        top: \"0%\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundColor: 'black'\r\n    },\r\n    multi_select_text: {\r\n        color: 'white'\r\n    },\r\n    ImgList: {\r\n        overflowY: \"auto\",\r\n        backgroundColor: 'black'\r\n    },\r\n}));\r\n\r\nvar _items = [];\r\nexport const PortraitMasterFullScreenCaptureList = ({_canvasData, set_scene, SetSelectImgIndex, _selectImgIndex, DeleteCanvasData, enableSubmit}) => {\r\n    console.log('PortraitMasterFullScreenCaptureList component start');\r\n    console.log('enableSubmit:' + enableSubmit);\r\n    const classes = useStyles();\r\n    const [itemCount, setItemCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        onUpdateImageList();\r\n      });\r\n\r\n    const onUpdateImageList = () => {\r\n        _items = [];\r\n        console.log('onUpdateImageList');\r\n        if (undefined != window.HybridApp) {\r\n            var imgCount = window.HybridApp.GetDirectoryFileCount();\r\n            for (var i = 0; i < imgCount; i++) {\r\n                var imgText = window.HybridApp.GetImageDataFromDirectory(i);\r\n                AddImage(i, imgText);\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < _canvasData.length; i++) {\r\n                AddImage(i, _canvasData[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    const AddImage = (index, imgsrc) => {\r\n        _items.push(imgsrc);\r\n        setItemCount(_items.length);\r\n        console.log('item count:' + _items.length);\r\n    }\r\n\r\n    const onClickUploadImage = () => {\r\n        console.log(\"onClickUploadImage call\");\r\n        if (undefined != window.HybridApp) {\r\n            window.HybridApp.DoShareImage(_selectImgIndex, 'level up hero 인물사진 퀘스트');\r\n            //window.HybridApp.DoShare('level up hero', '인물사진 퀘스트', 'level up hero');\r\n        } else {\r\n            //set_scene('PortraitMaster');\r\n        }\r\n    }\r\n\r\n    const onClickDeleteImage = () => {\r\n        console.log(\"onClickDeleteImage call index:\" + _selectImgIndex);\r\n        if (undefined != window.HybridApp) {\r\n            window.HybridApp.DeleteImageDataFromDirectory(_selectImgIndex);\r\n        }\r\n        else {\r\n            DeleteCanvasData(_selectImgIndex);\r\n        }\r\n\r\n        SetSelectImgIndex(0);\r\n        if (_items.length <= 1) {\r\n            set_scene('PortraitMaster');\r\n        }\r\n    }\r\n\r\n    const onSelectImage = (idx) => {\r\n        console.log(\"onSelectImage call:\" + idx);\r\n        SetSelectImgIndex(idx);\r\n    }\r\n    \r\n    const onClickSubmit = () => {\r\n        console.log(\"onClickSubmit call\");\r\n        SetIframeFinish(true);\r\n    }\r\n\r\n    const getCarousel = () => {\r\n        console.log('_items count:' + _items.length);\r\n        return <Carousel infiniteLoop={true} selectedItem={_selectImgIndex} showArrows={true} showStatus={true} showThumbs={false} onChange={onSelectImage}>\r\n      {\r\n        _items.map( image => {\r\n          return <img src={image} />\r\n        })\r\n      }\r\n    </Carousel>\r\n    }\r\n\r\n    let selectText;\r\n    if (itemCount > 1) {\r\n        selectText = <div className={classes.multi_select_text}><center>슬라이드하면 다른 사진 표시</center></div>;\r\n    } else {\r\n        selectText = <div className={classes.multi_select_text}></div>;\r\n    }\r\n\r\n    console.log('itemCount renderring update');\r\n    return (\r\n        <div className={classes.root}>\r\n            {selectText}\r\n            {getCarousel()}\r\n            <PortraitMasterCaptureImageControlBar itemCount={1} onClickUploadImage={onClickUploadImage} onClickDeleteImage={onClickDeleteImage} onClickSubmit={onClickSubmit} enableSubmit={enableSubmit} />\r\n        </div >\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _current_scene: state.scene._current_scene,\r\n    _canvasData: state.camera._canvasData,\r\n    _selectImgIndex: state.scene._selectImgIndex\r\n});\r\nconst mapDispatchToProps = { set_scene, SetSelectImgIndex, DeleteCanvasData };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMasterFullScreenCaptureList);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        // height: '100%',\r\n        bottom: 0,\r\n        position: 'fixed',\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nexport const SceneNavigation = ({ _current_scene, set_scene }) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    return (\r\n        <BottomNavigation\r\n            value={value}\r\n            onChange={(event, newValue) => {\r\n                set_scene(newValue);\r\n                setValue(newValue);\r\n            }}\r\n            showLabels\r\n            className={classes.root}\r\n        >\r\n            <BottomNavigationAction value=\"PortraitMaster\" label=\"Home\" icon={<HomeIcon />} />\r\n            <BottomNavigationAction value=\"CameraCapture\" label=\"사진찍기\" icon={<CameraAltIcon />} />\r\n\r\n        </BottomNavigation>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _current_scene: state.scene._current_scene\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SceneNavigation);","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport PortraitMaster from './../components/PortraitMaster'\r\nimport CameraCapture from './../components/camera/CameraCapture'\r\nimport CameraCaptureSelect from './../components/camera/CameraCaptureSelect'\r\nimport PortraitMasterGridCaptureImageList from '../components/PortraitMasterGridCaptureImageList'\r\nimport PortraitMasterFullScreenCaptureList from './../components/PortraitMasterFullScreenCaptureList'\r\nimport SceneNavigation from './SceneNavigation'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      width: \"100%\",\r\n      height: \"100%\"\r\n  },\r\n}));\r\n\r\n\r\nexport const IndexScene = ({ _current_scene, set_scene }) => {\r\n  console.log('Index_scene component start');\r\n  const classes = useStyles();\r\n\r\n  const getActiveScene = () => {\r\n    switch(_current_scene) {\r\n      case 'CameraCapture': {\r\n        return (<CameraCapture />);\r\n      }\r\n      case 'PortraitMaster': {\r\n        return (<PortraitMaster />);\r\n      }\r\n      case 'CameraCaptureSelect': {\r\n        return (<CameraCaptureSelect />);\r\n      }\r\n      case 'GridCaptureList': {\r\n        return (<PortraitMasterGridCaptureImageList  />);\r\n      }\r\n      case 'FullScreenCaptureList': {\r\n        return (<PortraitMasterFullScreenCaptureList enableSubmit={false} />);\r\n      }\r\n      case 'SubmitCaptureList': {\r\n        return (<PortraitMasterFullScreenCaptureList enableSubmit={true} />);\r\n      }\r\n      default: {\r\n        return (<PortraitMaster />); // SceneNavigation\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {getActiveScene()}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _current_scene: state.scene._current_scene\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexScene);","import React from 'react';\r\nimport './App.css';\r\nimport IndexScene from './scene/IndexScene'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <IndexScene />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { SET_SCENE, SETSELECTIMGINDEX } from '../actions/scene'\r\n\r\nconst initialState = {\r\n    _current_scene: 'IndexScene',\r\n    _selectImgIndex: 0\r\n};\r\n\r\nexport default function quest(state = initialState, action) {\r\n    console.log('reducer scene action call:' + action.type);\r\n    switch(action.type) {\r\n        case SET_SCENE:\r\n            console.log('SET_SCENE:' + action._change_scene);\r\n            return Object.assign({}, state, {\r\n                _current_scene: action._change_scene\r\n            });\r\n        case SETSELECTIMGINDEX:\r\n            console.log('SETSELECTIMGINDEX:' + action._selectImgIndex);\r\n            return Object.assign({}, state, {\r\n                _selectImgIndex: action._selectImgIndex\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}","import { CLOSECAMERA, ADDCANVASDATA, DELETECANVASDATA } from '../actions/camera'\r\n\r\nconst initialState = {\r\n    _closeCamera: '',\r\n    _canvasData:[]\r\n};\r\n\r\nexport default function camera(state = initialState, action) {\r\n    console.log('reducer scene action call:' + action.type);\r\n    switch (action.type) {\r\n        case CLOSECAMERA:\r\n            console.log('CLOSECAMERA:' + action._closeCamera);\r\n            return Object.assign({}, state, {\r\n                _closeCamera: action._closeCamera\r\n            });\r\n        case ADDCANVASDATA:\r\n            console.log('ADDCANVASDATA:' + action._addCanvasData);\r\n            return {\r\n                ...state,\r\n                _canvasData: [...state._canvasData, action._addCanvasData]\r\n            }\r\n        case DELETECANVASDATA:\r\n            console.log('DELETECANVASDATA:' + action._deleteCanvasDataIndex);\r\n            return {\r\n                ...state,\r\n                _canvasData: [\r\n                    ...state._canvasData.slice(0, action._deleteCanvasDataIndex),\r\n                    ...state._canvasData.slice(action._deleteCanvasDataIndex + 1)]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport scene from './scene'\r\nimport camera from './camera'\r\n\r\nexport default combineReducers({\r\n    scene,\r\n    camera\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createStore } from 'redux';\r\nimport { Provider  } from 'react-redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst appElement = document.getElementById('root');\r\n\r\n// 리덕스 개발자도구 적용\r\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nconst store = createStore(rootReducer, devTools);\r\n// const store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  appElement\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}