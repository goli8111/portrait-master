{"version":3,"sources":["actions/scene.js","components/util/SendMessage.js","components/RewardButton.js","components/PortraitMasterContentsIntro.js","components/PortraitMasterContentsFeedback.js","components/util/SoundPlay.js","components/PortraitMasterSimpleCaptureList.js","components/DefaultConfirmDialog.js","components/PortraitMaster.js","actions/camera.js","components/camera/CameraCapture.js","components/camera/CameraCaptureSelect.js","components/AppBar_Quest.js","components/PortraitMasterCaptureImageControlBar.js","components/PortraitMasterGridCaptureImageList.js","components/PortraitMasterFullScreenCaptureList.js","scene/SceneNavigation.js","scene/IndexScene.js","App.js","serviceWorker.js","reducers/scene.js","reducers/camera.js","reducers/index.js","index.js"],"names":["set_scene","change_scene","type","_change_scene","SetSelectImgIndex","index","_selectImgIndex","SetIframeFullScreen","fullScreen","SendMessage","text","undefined","window","parent","console","log","postMessage","useStyles","makeStyles","theme","root","position","backgroundColor","width","height","bottom","left","RewardButton","onClick","rewardCategory","rewardExp","classes","className","src","getRewardIconPath","textAlign","contents_site_link","frameBorder","mapDispatchToProps","connect","state","props","alt","id","ContentsTitle","fontSize","color","ContentsBody","ContentsText","playSound","fileName","HybridApp","Audio","play","playEnableClickSound","playDisableClickSound","overflow","ImgList","display","_canvasData","camera","scene","_current_scene","isComplete","onImageClick","getImageNode","contents","imgText","GetImageDataFromDirectory","push","i","GetDirectoryFileCount","length","getImageList","DefaultConfirmDialog","title","onOKClick","onCloseClick","openDialog","Dialog","open","onClose","aria-labelledby","DialogTitle","style","DialogActions","Button","autoFocus","BottomBarBack","top","BottomBarButtonBase","background","borderRadius","border","boxShadow","BottomBarButtonLeft","BottomBarButtonRight","BottomBarButton","divLine","rewardState","simpleImageList","bottomButton","React","useState","_getRewardDialog","setGetRewardDialog","onCameraCapture","clsx","imageCount","getFeedback","DeleteCanvasData","_deleteCanvasDataIndex","_videoUserCameraFlag","btnTopBatStyle","btnBottomBarStyle","rootStyle","zIndex","videoStyle","transform","canvasStyle","btnLeftBottomStyle","btnCenterBottomStyle","btnRightBottomStyle","btnTopStyle1","btnTopStyle2","btnTopStyle3","btnTopStyle4","btnTopStyle5","CameraCapture","defaultProps","getCanvas","elem","canvas","getCanvasOverlay","canvasOverlay","getVideo","video","updateCameraGrid","viewState","canvasContext","getContext","videoWidth","videoHeight","clearRect","save","strokeStyle","lineWidth","globalAlpha","x","moveTo","lineTo","y","stroke","restore","onNextCamera","playCamera","onFlash","setFlashLight","cameraFlashType","onTimerSelect","cameraCaptureTimerType","onCaptureAnimation","flashEffect","setState","setTimeout","onCapture","delayDuration","dateText","Date","toISOString","saveImage","toDataURL","onAddCanvasData","SaveAlbumJpgImage","a","document","createElement","body","appendChild","href","download","click","URL","revokeObjectURL","onBack","onSetScene","currentValue","ShowToast","onToggleGrid","gridView","onCaptureRatio","captureRatioType","onMovieFilter","cameraFilterType","stopCamera","bind","this","setupCamera","Error","navigator","mediaDevices","enumerateDevices","then","devices","forEach","device","kind","label","deviceId","catch","err","name","message","updateCamera","stream","getTracks","track","stop","facingModeText","getUserMedia","audio","facingMode","frameRate","exact","aspectRatio","screenWidth","srcObject","pause","getVideoTracks","capabilities","getCapabilities","torch","applyConstraints","advanced","e","showVideo","updateCameraFrame","findUpdateCameraFrame","showDebugVideo","filter","drawImage","_closeCamera","onCloseCamera","requestAnimationFrame","timerIcon","flashIcon","gridIcon","captureRatioIcon","filterIcon","playsInline","ref","Component","loadingText","dispatch","img","_addCanvasData","overflowX","BottomBar1","Height","BottomBar2","useEffect","onUploadImageList","onAddImageChange","imageInput","target","files","file","fr","FileReader","onload","event","result","Image","AddImage","readAsDataURL","imgUpload","imgCount","imgsrc","element","margin","getElementById","fileInput","accept","onchange","variant","bar","bottomBar","upload_button","delete_button","right","PortraitMasterCaptureImageControlBar","itemCount","onClickUploadImage","onClickDeleteImage","onClickSubmit","enableSubmit","onDisableButton","uploadImageButton","deleteImageButton","getButton","app_root","select_text","overflowY","_items","setItemCount","_deleteImageDialog","setDeleteImageDialog","selectText","getSelectState","deleteState","splice","toggleSelectImage","imgSrc","isSelected","getImageCount","deleteIndexList","isRemoveAll","sort","b","DeleteImageDataFromDirectory","selectIndex","DoShareImage","multi_select_text","image_count_select_text","SetImageSubmit","flag","_flag","_submitImageDialog","setSubmitImageDialog","onUpdateImageList","imageCountText","node","image","onSwipeSound","onSelectImage","idx","appbarTitle","infiniteLoop","onSwipeEnd","selectedItem","showArrows","showStatus","showThumbs","showIndicators","onChange","map","key","flexGrow","value","setValue","BottomNavigation","newValue","showLabels","BottomNavigationAction","icon","_isImageSubmit","location","_rewardState","setRewardState","_rewardCategory","setRewardCategory","_rewardExp","setRewardExp","query","queryString","parse","search","Complete","reward_category","reward_exp","isStampState","getActiveScene","App","path","component","IndexScene","Boolean","hostname","match","initialState","combineReducers","action","Object","assign","slice","appElement","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","ReactDOM","render","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.36d9a724.chunk.js","sourcesContent":["export const SET_SCENE = 'SET_SCENE';\r\nexport function set_scene(change_scene) {\r\n    return {\r\n        type: SET_SCENE,\r\n        _change_scene: change_scene\r\n    };\r\n}\r\n\r\nexport const SETSELECTIMGINDEX = 'SETSELECTIMGINDEX';\r\nexport function SetSelectImgIndex(index) {\r\n    return {\r\n        type: SETSELECTIMGINDEX,\r\n        _selectImgIndex: index\r\n    };\r\n}\r\n\r\nexport const SETIMAGESUBMIT = 'SETIMAGESUBMIT';\r\nexport function SetImageSubmit(flag) {\r\n    console.log('==========SetImageSubmit:' + flag)\r\n    return {\r\n        type: SETIMAGESUBMIT,\r\n        _flag: flag\r\n    };\r\n}\r\n","export function SetIframeFinish() {\r\n    SendMessage(\"onSuccess\");\r\n}\r\n\r\nexport function SetIframeFinishAndLeave() {\r\n    SendMessage(\"onSuccessAndLeave\");\r\n}\r\n\r\nexport function GetIframeReward() {\r\n    SendMessage(\"onGetReward\");\r\n}\r\n\r\nexport function onBack() {\r\n    SendMessage(\"onBack\");\r\n}\r\n\r\nexport function SetIframeFullScreen(fullScreen) {\r\n    //console.log('=========SetIframeFullScreen:' + fullScreen)\r\n    if (fullScreen == false) {\r\n        SendMessage(\"onFitScreen\");\r\n    }\r\n    else {\r\n        SendMessage(\"onFullScreen\");\r\n    }\r\n}\r\n\r\nfunction SendMessage(text) {\r\n    if (undefined == window) {\r\n        return;\r\n    }\r\n    if (undefined == window.parent) {\r\n        return;\r\n    }\r\n    console.log('SendMessage parent:' + text);\r\n    window.parent.postMessage(text, \"*\");\r\n}\r\n\r\nexport function SetLandscapeMode(fullScreen) {\r\n    if (undefined == window) {\r\n        return;\r\n    }\r\n    if (undefined == window.HybridApp) {\r\n        return;\r\n    }\r\n    window.HybridApp.SetLandscapeMode(fullScreen);\r\n}\r\n\r\nexport function EnableScreenMirror() {\r\n    if (undefined == window) {\r\n        return;\r\n    }\r\n    if (undefined == window.HybridApp) {\r\n        return;\r\n    }\r\n    window.HybridApp.EnablingWiFiDisplay();\r\n}\r\n\r\nexport function ShowToast(text) {\r\n    if (undefined == window) {\r\n        return;\r\n    }\r\n    if (undefined == window.HybridApp) {\r\n        return;\r\n    }\r\n    console.log('ShowToast:' + text);\r\n    window.HybridApp.ShowToast(text);\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport './PortraitMaster.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: \"fixed\",\r\n        backgroundColor: '#FFFFFF88',\r\n        width: '100%',\r\n        height: '65px',\r\n        bottom: '0px',\r\n        left: '0%'\r\n    }\r\n}));\r\n\r\nexport const RewardButton = ({ onClick, rewardCategory, rewardExp }) => {\r\n    const classes = useStyles(); \r\n\r\n    const getRewardIconPath = () => {\r\n        //console.log('=====rewardCategory:'+ rewardCategory);\r\n        switch (rewardCategory) {\r\n            case 'strength': return 'https://goli8111.github.io/level-up/images/card_assets/icon_power.png';\r\n            case 'dexterity': return 'https://goli8111.github.io/level-up/images/card_assets/icon_knowledge.png';\r\n            case 'intelligence': return 'https://goli8111.github.io/level-up/images/card_assets/icon_skill.png';\r\n            case 'wisdom': return 'https://goli8111.github.io/level-up/images/card_assets/icon_wisdom.png';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div onClick={onClick} className='quest_reward_main_button'>\r\n                <span>완료하고 보상 받기</span>\r\n            </div>\r\n            <div onClick={onClick} className='quest_reward_button'>\r\n                <img src={getRewardIconPath()}></img>\r\n                <span >{rewardExp}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RewardButton;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//import Iframe from 'react-iframe'\r\n\r\nimport './PortraitMasterContentsIntro.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        textAlign: \"left\"\r\n    },\r\n    contents_site_link: {\r\n        position: 'absolute',\r\n        height: '100%',\r\n        width: '100%',\r\n        frameBorder: 0,\r\n      },\r\n}));\r\n\r\nexport const PortraitMasterContentsIntro = (props) => {\r\n    console.log('PortraitMasterContentsIntro component start');\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <span className='title_text'>3&#48516;&#54624; &#44368;&#52264;&#51216; &#44396;&#46020;</span>\r\n            <br />\r\n            <img alt=\"\" src=\"images/image2.png\" className=\"imageStyle\" />\r\n            \r\n            <p className=\"c4\"><span className=\"c2\">&#51201;&#51208;&#54620; &#50668;&#48177;&#51012; &#53685;&#54644;\r\n            &#50504;&#51221;&#44048;&#51012; &#51452;&#45716; &#44396;&#46020;&#51077;&#45768;&#45796;. </span></p>\r\n            <p className=\"c4\"><span className=\"c2\">&#49324;&#51652; &#54532;&#47112;&#51076;&#51012; &#44032;&#47196;, &#49464;&#47196;\r\n            &#44033;&#44033; 3&#46321;&#48516; &#54644;&#49436; &#44368;&#52264;&#54616;&#45716; 4&#51216;&#51012;\r\n            &#44592;&#51456;&#51004;&#47196; &#51064;&#47932;&#51012; &#48176;&#52824;&#54633;&#45768;&#45796;.\r\n            &nbsp;&#49345;&#45800; 2&#44060;&#51032; &#44368;&#52264;&#51216; &#51473; &#54620; &#44275;&#50640;\r\n            &#50620;&#44404; &#54841;&#51008; &#45576;&#51012; &#48176;&#52824;&#54644;&#48372;&#49464;&#50836;.</span>\r\n            </p>\r\n            <p className=\"c1\"><span className=\"c2\"></span></p>\r\n            <p className=\"c1\"><span className=\"c2\"></span></p>\r\n            <p className=\"c4\">\r\n                <br />\r\n                <img alt=\"\" src=\"images/image1.png\" className=\"imageStyle\" />\r\n            </p>\r\n            <p className=\"c4\"><span className=\"c2\">&#51060;&#47111;&#44172;&#50836;!</span></p>\r\n            <p className=\"c1\"><span className=\"c2\"></span></p>\r\n            <h1 className=\"c5\" id=\"h.swur9s1vrik6\"><span className=\"c6\">&#46020;&#51204; &#44284;&#51228;: &#49324;&#51652;\r\n                &#52237;&#44592;</span></h1>\r\n            <ul className=\"c3 lst-kix_caq9dug8t2jg-0 start\">\r\n                <li className=\"c0\"><span className=\"c2\">3&#48516;&#54624; &#44368;&#52264;&#51216; &#44396;&#46020;&#47196;\r\n                    &#51064;&#47932; &#49324;&#51652;&#51012; &#52237;&#50612; &#48389;&#45768;&#45796;. </span></li>\r\n                <li className=\"c0\"><span className=\"c8\">&#51088;&#46041;&#51004;&#47196; &#44201;&#51088; &#47784;&#46300;&#44032;\r\n                    &#54876;&#49457;&#54868;&#46121;&#45768;&#45796;.</span></li>\r\n                <li className=\"c0\"><span className=\"c2\">&#45796;&#51020; &#51312;&#44148;&#51012;\r\n                    &#47564;&#51313;&#49884;&#53020;&#50556; &#54633;&#45768;&#45796;.</span></li>\r\n            </ul>\r\n            <ul className=\"c3 lst-kix_caq9dug8t2jg-1 start\">\r\n                <li className=\"c4 c9\"><span className=\"c8\">&#49345;&#45800; 2&#44060;&#51032; &#44368;&#52264;&#51216;&#50640;\r\n                &#51064;&#47932;&#51032; &#50620;&#44404;&#51060;&#45208; &#45576;&#51012;\r\n                    &#47582;&#52645;&#45768;&#45796;.</span></li>\r\n            </ul>\r\n            <ul className=\"c3 lst-kix_caq9dug8t2jg-0\">\r\n                <li className=\"c0\"><span className=\"c2\">&#44032;&#51109; &#47560;&#51020;&#50640; &#46300;&#45716;\r\n                &#49324;&#51652;&#51012; &#47560;&#49828;&#53552;&#50640;&#44172;\r\n                    &#51228;&#52636;&#54616;&#49464;&#50836;.</span></li>\r\n            </ul>\r\n            <br />\r\n            <br />\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n{/* <Iframe url='contents/index.html' className={classes.contents_site_link} frameBorder=\"0\"/> */ }\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMasterContentsIntro);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        //background: '#00FF0088', \r\n    },\r\n    ContentsTitle: {\r\n        position: 'relative',\r\n        textAlign: 'left',\r\n        fontSize : '20px',\r\n        color: 'black',\r\n        left : '4%',\r\n        width: '100%',\r\n        height: '25px'\r\n    },\r\n    ContentsBody: {\r\n        position: 'relative',\r\n        left: '4%',\r\n        width: '92%',\r\n        height: '70px',\r\n        backgroundColor: 'gray'\r\n    },\r\n    ContentsText: {\r\n        position: 'absolute',\r\n        textAlign: 'left',\r\n        left : '0px',\r\n        width: '100%',\r\n        color: 'white',\r\n        fontSize : '17px',\r\n    },\r\n}));\r\n\r\nexport const PortraitMasterContentsFeedback = (props) => {\r\n    console.log('PortraitMasterContentsFeedback component start');\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.ContentsTitle}>\r\n            마스터 코멘트 (클리어)\r\n            </div>\r\n            <div className={classes.ContentsBody}>\r\n                <span className={classes.ContentsText}>\r\n                    <ul>\r\n                        <li>퀘스트 클리어! 구도를 잘 잡아주셨습니다.</li>\r\n                        <li>다만 피사체의 시선 방향으로 여백을 두는 구도로도 사진을 찍어보시면 좋겠습니다. 보다 안정적인 느낌이 들 겁니다.</li>\r\n                    </ul>\r\n            </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMasterContentsFeedback);","\r\nfunction playSound(fileName) {\r\n    console.log('playSound:' + fileName);\r\n    var audio = undefined;\r\n    if (undefined == window.HybridApp) {\r\n        audio = new Audio('./sound/' + fileName);\r\n    } else {\r\n        audio = new Audio('file:///android_asset/sound/' + fileName);\r\n    }\r\n    audio.play();\r\n}\r\n\r\nexport function playEnableClickSound() {\r\n    playSound('Common_Button_Enabled_Touch.wav');\r\n}\r\n\r\nexport function playDisableClickSound() {\r\n    playSound('Common_Button_Disabled_Touch.wav');\r\n}\r\n\r\nexport function playReadySound() {\r\n    playSound('Ready_Set_Signal.wav');\r\n}\r\n\r\nexport function playGoSound() {\r\n    playSound('Go_Signal.wav');\r\n}\r\n\r\nexport function playGetRewardSound() {\r\n    playSound('Quest_Clear_Reward.ogg');\r\n}\r\n\r\nexport function playQuestClearSound() {\r\n    playSound('Quest_Clear.wav');\r\n}\r\n\r\nexport function playQuestFailSound() {\r\n    playSound('Quest_Fail.wav');\r\n}\r\n\r\nexport function playCameraShutterSound() {\r\n    playSound('Cam_Shutter.wav');\r\n}\r\n\r\nexport function playQuizCorrectAnswerSound() {\r\n    playSound('Quiz_Correct_Answer.wav');\r\n}\r\n\r\nexport function playQuizWrongAnswerSound() {\r\n    playSound('Quiz_Wrong_Answer.wav');\r\n}\r\n\r\nexport function playTimeoverSound() {\r\n    playSound('Time_Over_Beep.wav');\r\n}\r\n\r\nexport function playWarringSound() {\r\n    playSound('Warning_Beep.wav');\r\n}\r\n\r\nexport function playQuestAcquireSound() {\r\n    playSound('Quest_Acquire.wav');\r\n}\r\n","import React, { useEffect }  from 'react';\r\nimport './PortraitMaster.css'\r\nimport { connect } from 'react-redux';\r\nimport { set_scene, SetSelectImgIndex } from '../actions/scene';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {RemoveScrollBar, fullWidthClassName} from 'react-remove-scroll-bar';\r\nimport { playEnableClickSound } from './util/SoundPlay'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\"\r\n        //background: '#FFFF0088', \r\n    },\r\n    ImgList: {\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n    },\r\n}));\r\n\r\nexport const PortraitMasterSimpleCaptureList = ({set_scene, isComplete, _current_scene, _selectImgIndex, SetSelectImgIndex, _canvasData}) => {\r\n    console.log('PortraitMasterSimpleCaptureList component start');\r\n    const classes = useStyles();\r\n\r\n    // useEffect(() => {\r\n    //     onUploadImageList();\r\n    //   }, []);\r\n\r\n    const onClickGridCaptureList = () => {\r\n        console.log(\"onClickGridCaptureList\");\r\n        set_scene('GridCaptureList');\r\n        playEnableClickSound();\r\n    }\r\n\r\n    const onImageClick = (index) => {\r\n        console.log(\"img click index:\" + index);\r\n        SetSelectImgIndex(index);\r\n        set_scene('FullScreenCaptureList');\r\n        playEnableClickSound();\r\n    }\r\n\r\n    const getImageNode = (index, src) => {\r\n        if (_current_scene == 'PortraitMasterStamp' && index == 0) {\r\n            return (\r\n                <div className=\"SimpleCaptureImageList_node\" onClick={()=> onImageClick(index)}>\r\n                    <img src={src} />\r\n                    {isComplete == true ? <span className='SimpleCaptureImageList_clear_node'>클리어</span> : <span>스탬프 요청</span>}\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n                <div className=\"SimpleCaptureImageList_node\" onClick={()=> onImageClick(index)}>\r\n                    <img src={src} />\r\n                </div>\r\n        )\r\n    }\r\n\r\n    const getImageList = () => {\r\n        var contents = [];\r\n        if (_current_scene == 'PortraitMasterStamp') {\r\n            if (undefined != window.HybridApp) {\r\n                var imgText = window.HybridApp.GetImageDataFromDirectory(_selectImgIndex);\r\n                contents.push(getImageNode(0, imgText));\r\n            }\r\n            else {\r\n                contents.push(getImageNode(0, _canvasData[_selectImgIndex]));\r\n            }\r\n            if (undefined != window.HybridApp) {\r\n                var imgCount = window.HybridApp.GetDirectoryFileCount();\r\n                for (var i = imgCount - 1; i >= 0; i--) {\r\n                    if (_selectImgIndex == i) {\r\n                        continue;\r\n                    }\r\n                    var imgText = window.HybridApp.GetImageDataFromDirectory(i);\r\n                    contents.push(getImageNode(i + 1, imgText));\r\n                }\r\n            }\r\n            else {\r\n                for (var i = _canvasData.length - 1; i >= 0; i--) {\r\n                    if (_selectImgIndex == i) {\r\n                        continue;\r\n                    }\r\n                    contents.push(getImageNode(i + 1, _canvasData[i]));\r\n                }\r\n            }\r\n        } else {\r\n            if (undefined != window.HybridApp) {\r\n                var imgCount = window.HybridApp.GetDirectoryFileCount();\r\n                for (var i = imgCount-1; i >= 0; i--) {\r\n                    var imgText = window.HybridApp.GetImageDataFromDirectory(i);\r\n                    contents.push(getImageNode(i, imgText));\r\n                }\r\n            }\r\n            else {\r\n                for (var i = _canvasData.length-1; i >= 0; i--) {\r\n                    contents.push(getImageNode(i, _canvasData[i]));\r\n                }\r\n            }\r\n        }\r\n        return contents;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className='simple_capture_left_title'>내 사진</div>\r\n            <img className='simple_capture_right_title' onClick={onClickGridCaptureList} src='img/image-modify-icon.png' />\r\n            <div>\r\n                <br/>\r\n                <div className=\"SimpleCaptureImageList\">\r\n                    {getImageList()}\r\n                </div>\r\n                {/* <div id='imagelist' className=\"SimpleCaptureImageList\" /> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _canvasData: state.camera._canvasData,\r\n    _selectImgIndex: state.scene._selectImgIndex,\r\n    _current_scene: state.scene._current_scene,\r\n});\r\nconst mapDispatchToProps = { set_scene, SetSelectImgIndex };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMasterSimpleCaptureList);","import React, {useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport const DefaultConfirmDialog = ({title, onOKClick, onCloseClick, openDialog}) => {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={onCloseClick}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" style={{textAlign:'center'}}>{title}</DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={onCloseClick} color=\"primary\">\r\n            취소\r\n          </Button>\r\n          <Button onClick={onOKClick} color=\"primary\" autoFocus>\r\n            확인\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DefaultConfirmDialog;","import React from 'react';\r\nimport './PortraitMaster.css';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { GetIframeReward, SetIframeFinish, SetIframeFinishAndLeave } from './util/SendMessage';\r\n\r\nimport RewardButton from './RewardButton';\r\nimport PortraitMasterContentsIntro from './PortraitMasterContentsIntro';\r\nimport PortraitMasterContentsFeedback from './PortraitMasterContentsFeedback';\r\nimport PortraitMasterSimpleCaptureList from './PortraitMasterSimpleCaptureList'\r\nimport DefaultConfirmDialog from './DefaultConfirmDialog'\r\n\r\n//import Sound from 'react-sound';\r\n// import UIfx from 'uifx';\r\n// import bellAudio from './util/sound/Cam_Shutter.wav'\r\n\r\n\r\nimport { playEnableClickSound, playDisableClickSound, playCameraShutterSound, playGetRewardSound } from './util/SoundPlay'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  // ContentsBody: {\r\n  //   position: \"absolute\",\r\n  //   width: \"100%\",\r\n  //   left: \"0px\",\r\n  //   top: \"0px\",\r\n  //   bottom: \"50px\",\r\n  //   display: \"grid\",\r\n  //   gridTemplateRows: \"50% 50%\"\r\n  // },\r\n  BottomBarBack: {\r\n    position: \"fixed\",\r\n    backgroundColor: '#FFFFFF88',\r\n    width: '100%',\r\n    height: '11%',\r\n    top: '89%',\r\n    left: '0%'\r\n  },\r\n  BottomBarButtonBase: {\r\n    position: \"fixed\",\r\n    height: \"8%\",\r\n    top: \"90%\",\r\n    background: 'linear-gradient(90deg, #cc6699 30%, #6666ff 80%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\r\n\r\n  },\r\n  BottomBarButtonLeft: {\r\n    width: \"44%\",\r\n    left: \"3%\",\r\n  },\r\n  BottomBarButtonRight: {\r\n    width: \"44%\",\r\n    left: \"53%\",\r\n  },\r\n  BottomBarButton: {\r\n    width: \"94%\",\r\n    left: \"3%\",\r\n  },\r\n  divLine: {\r\n    border: \"1px solid\",\r\n    color: \"#DDDDDD\",\r\n    width: \"95%\"\r\n  }\r\n}));\r\n\r\nexport const PortraitMaster = ({ _selectImgIndex, _current_scene, set_scene, _canvasData, rewardState, rewardCategory, rewardExp }) => {\r\n  console.log('PortraitMaster component start');\r\n  const classes = useStyles();\r\n  const [_getRewardDialog, setGetRewardDialog] = React.useState(false);\r\n\r\n  const BottomBarButtonRight = clsx(classes.BottomBarButtonBase, classes.BottomBarButtonRight);\r\n  const BottomBarButtonLeft = clsx(classes.BottomBarButtonBase, classes.BottomBarButtonLeft);\r\n  const BottomBarButton = clsx(classes.BottomBarButtonBase, classes.BottomBarButton);\r\n\r\n  // const bell = new UIfx(\r\n  //   bellAudio,\r\n  //   {\r\n  //     volume: 0.4, // number between 0.0 ~ 1.0\r\n  //     throttleMs: 100\r\n  //   }\r\n  // )\r\n\r\n  const onCameraCapture = () => {\r\n    console.log(\"onCameraCapture call\");\r\n    set_scene(\"CameraCapture\");\r\n    playEnableClickSound();\r\n  }\r\n\r\n  const onCameraCaptureSubmit = () => {\r\n    console.log(\"onCameraCaptureSubmit call\");\r\n    set_scene(\"SubmitCaptureList\");\r\n    playEnableClickSound();\r\n  }\r\n\r\n  const onGetRewardConfirmOK = () => {\r\n    console.log(\"onGetReward call\");\r\n    GetIframeReward();\r\n    setGetRewardDialog(false);\r\n  }\r\n\r\n  const onGetRewardConfirm = () => {\r\n    setGetRewardDialog(true);\r\n    playEnableClickSound();\r\n  }\r\n\r\n  const onGetRewardConfirmClose = () => {\r\n    setGetRewardDialog(false);\r\n    playEnableClickSound();\r\n  }\r\n\r\n  const GetImageCount = () => {\r\n    if (undefined != window.HybridApp) {\r\n      return window.HybridApp.GetDirectoryFileCount();\r\n    }\r\n    else {\r\n      return _canvasData.length;\r\n    }\r\n  }\r\n\r\n  const onTempFinish = () => {\r\n    playEnableClickSound();\r\n    SetIframeFinishAndLeave();\r\n  }\r\n\r\n  let simpleImageList;\r\n  let bottomButton;\r\n  var imageCount = GetImageCount();\r\n  if (true == rewardState) {\r\n    bottomButton = <RewardButton onClick={onGetRewardConfirm} rewardCategory={rewardCategory} rewardExp={rewardExp} ></RewardButton>\r\n    simpleImageList = <div><PortraitMasterSimpleCaptureList isComplete={true} /> <hr className={classes.divLine} /></div>\r\n  } else {\r\n    console.log(\"=============_current_scene:\" + _current_scene) // 'PortraitMasterStamp'\r\n    if (_current_scene == 'PortraitMasterStamp') {\r\n      bottomButton = <div className='quest_main_disable_button' onClick={onTempFinish}>\r\n        <span>스탬프 대기 중</span>\r\n      </div>\r\n      simpleImageList = <div><PortraitMasterSimpleCaptureList /> <hr className={classes.divLine} /></div>\r\n    } else {\r\n      if (imageCount == 0) {\r\n        bottomButton = <div className='quest_main_button' onClick={onCameraCapture}>\r\n          <span>사진 찍기</span>\r\n        </div>\r\n        // bottomButton = <Button onClick={onCameraCapture} className={BottomBarButton} variant=\"contained\" color=\"secondary\">사진 찍기</Button>\r\n      } else {\r\n        simpleImageList = <div><PortraitMasterSimpleCaptureList /> <hr className={classes.divLine} /></div>\r\n        bottomButton = <div>\r\n          <div className='quest_main_left_button' onClick={onCameraCapture}>\r\n            <span>사진 찍기</span>\r\n          </div>\r\n          <div className='quest_main_right_button' onClick={onCameraCaptureSubmit}>\r\n            <span>제출하기</span>\r\n          </div>\r\n        </div>\r\n        // bottomButton = <div>< Button onClick={onCameraCapture} className={BottomBarButtonLeft} variant=\"contained\" color=\"secondary\" > 사진 찍기</Button >\r\n        // <Button onClick={onCameraCaptureSubmit} className={BottomBarButtonRight} variant=\"contained\" color=\"secondary\">제출하기</Button></div>\r\n      }\r\n    }\r\n  }\r\n\r\n  const getFeedback = () => {\r\n    if (false == rewardState) {\r\n      return undefined;\r\n    }\r\n    \r\n    if (_current_scene == 'PortraitMasterStamp') {\r\n      return undefined;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <PortraitMasterContentsFeedback />\r\n        <hr className={classes.divLine} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"MainSceneRoot\">\r\n        {simpleImageList}\r\n        {getFeedback()}\r\n        <PortraitMasterContentsIntro />\r\n      <div className={classes.BottomBarBack}>\r\n        {bottomButton}\r\n      </div>\r\n      <DefaultConfirmDialog title='완료하면 퀘스트에 저장한 사진이 모두 지워집니다. 퀘스트를 완료하시겠습니까?' onOKClick={onGetRewardConfirmOK} onCloseClick={onGetRewardConfirmClose} openDialog={_getRewardDialog} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _canvasData: state.camera._canvasData,\r\n  _selectImgIndex: state.scene._selectImgIndex,\r\n  _current_scene: state.scene._current_scene,\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMaster);","export const CLOSECAMERA = 'CLOSECAMERA';\r\nexport function CloseCamera(closeCamera) {\r\n    return {\r\n        type: CLOSECAMERA,\r\n        _closeCamera: closeCamera\r\n    };\r\n}\r\n\r\nexport const ADDCANVASDATA = 'ADDCANVASDATA';\r\nexport function AddCanvasData(data) {\r\n    return {\r\n        type: ADDCANVASDATA,\r\n        _addCanvasData: data\r\n    };\r\n}\r\n\r\nexport const DELETECANVASDATA = 'DELETECANVASDATA';\r\nexport function DeleteCanvasData(index) {\r\n    return {\r\n        type: DELETECANVASDATA,\r\n        _deleteCanvasDataIndex: index\r\n    };\r\n}\r\n","import React, { Component } from 'react'\r\nimport './../PortraitMaster.css';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { set_scene } from '../../actions/scene'\r\nimport { AddCanvasData } from '../../actions/camera'\r\n\r\nimport { SetIframeFullScreen, ShowToast } from './../util/SendMessage'\r\nimport { playEnableClickSound, playDisableClickSound, playCameraShutterSound} from './../util/SoundPlay'\r\n\r\nvar _videoUserCameraFlag = false;\r\n\r\nconst btnTopBatStyle = {\r\n    //backgroundColor: '#FF0000',\r\n    position: \"fixed\",\r\n    left: \"0px\",\r\n    top: \"0\",\r\n    width: \"100%\",\r\n    height: \"11.6%\",\r\n}\r\n\r\nconst btnBottomBarStyle = {\r\n    //backgroundColor: '#FF0000',\r\n    position: \"fixed\",\r\n    left: \"0px\",\r\n    top: \"88.4%\",\r\n    height: \"11.6%\",\r\n    width: \"100%\",\r\n}\r\n\r\nconst rootStyle = {\r\n    position: \"fixed\",\r\n    left: \"0%\",\r\n    top: \"0%\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    zIndex: '-3',\r\n    backgroundColor : 'black'\r\n}\r\n\r\nconst videoStyle = {\r\n    position: \"fixed\",\r\n    left: \"0%\",\r\n    //top: \"0%\",\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    top: \"50%\",\r\n    transform: 'translate(0%, -50%)',\r\n    zIndex: '-2'\r\n}\r\n\r\nconst canvasStyle = {\r\n    position: \"fixed\",\r\n    left: \"0%\",\r\n    //top: \"0%\",\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    top: \"50%\",\r\n    transform: 'translate(0%, -50%)',\r\n    zIndex: '-1'\r\n}\r\n\r\nconst btnLeftBottomStyle = {\r\n    position: \"fixed\",\r\n    height: \"5.1%\",\r\n    left: \"10%\",\r\n    top: \"91.5%\"\r\n}\r\n\r\nconst btnCenterBottomStyle = {\r\n    position: \"fixed\",\r\n    height: \"9.1%\",\r\n    left: \"40%\",\r\n    top: \"89.5%\"\r\n}\r\n\r\nconst btnRightBottomStyle = {\r\n    position: \"fixed\", \r\n    height: \"5.1%\",\r\n    left: \"75%\",\r\n    top: \"91.5%\"\r\n}\r\n\r\nconst btnTopStyle1 = {\r\n    position: \"fixed\",\r\n    height: \"5.1%\",\r\n    left: \"5%\",\r\n    top: \"3.5%\"\r\n}\r\n\r\nconst btnTopStyle2 = {\r\n    position: \"fixed\",\r\n    height: \"5.1%\",\r\n    left: \"25%\",\r\n    top: \"3.5%\"\r\n}\r\n\r\nconst btnTopStyle3 = {\r\n    position: \"fixed\",\r\n    height: \"5.1%\",\r\n    left: \"45%\",\r\n    top: \"3.5%\"\r\n}\r\n\r\nconst btnTopStyle4 = {\r\n    position: \"fixed\",\r\n    height: \"2.1%\",\r\n    left: \"65%\",\r\n    top: \"5%\"\r\n}\r\n\r\nconst btnTopStyle5 = {\r\n    position: \"fixed\",\r\n    height: \"5.1%\",\r\n    left: \"85%\",\r\n    top: \"3.5%\"\r\n}\r\n\r\n// const flashEffect = {\r\n//     position: \"fixed\",\r\n//     height: \"100%\",\r\n//     width: \"100%\",\r\n//     left: \"0%\",\r\n//     top: \"0%\",\r\n//     backgroundColor : \"white\"\r\n// }\r\n\r\nclass CameraCapture extends Component {\r\n\r\n    static defaultProps = {\r\n        showVideo: false,\r\n        showDebugVideo: true,\r\n        loadingText: 'Loading...please be patient...'\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props, CameraCapture.defaultProps)\r\n        //this.resize = this.resize.bind(this);\r\n        this.stopCamera = this.stopCamera.bind(this);\r\n\r\n        this.state = {\r\n            cameraCaptureTimerType: 0,\r\n            cameraFlashType: 0,\r\n            cameraFilterType: 0,\r\n            captureRatioType: 0,\r\n            gridView: false,\r\n            flashEffect: false\r\n        };\r\n    }\r\n\r\n    getCanvas = elem => {\r\n        this.canvas = elem\r\n    }\r\n\r\n    getCanvasOverlay = elem => {\r\n        this.canvasOverlay = elem\r\n    }\r\n\r\n    getVideo = elem => {\r\n        this.video = elem;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        SetIframeFullScreen(true);\r\n        try {\r\n            await this.setupCamera();\r\n        } catch (error) {\r\n            throw new Error(\r\n                'This browser does not support video capture, or this device does not have a camera'\r\n            )\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        SetIframeFullScreen(false);\r\n        this.setFlashLight(false);\r\n        this.stopCamera();\r\n    }\r\n\r\n    async setupCamera() {\r\n        if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\r\n            throw new Error(\r\n                'Browser API navigator.mediaDevices.getUserMedia not available'\r\n            )\r\n        }\r\n        navigator.mediaDevices.enumerateDevices()\r\n            .then(function (devices) {\r\n                devices.forEach(function (device) {\r\n                    if (device.kind === 'videoinput') {\r\n                        //_videoCamneraList.push(device.deviceId);\r\n                    }\r\n                    console.log(device.kind + \": \" + device.label + \", id = \" + device.deviceId);\r\n                });\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err.name + \": \" + err.message);\r\n            });\r\n\r\n        //this.resize();\r\n        this.playCamera();\r\n        this.updateCamera();\r\n    }\r\n\r\n    async playCamera() {\r\n        if (window.stream) {\r\n            window.stream.getTracks().forEach(track => {\r\n                track.stop();\r\n            });\r\n        }\r\n\r\n        const video = this.video;\r\n        //video.style.transform = 'rotatey(180deg)';\r\n\r\n        // const videoSource = _videoCamneraList[_videoSelectIndex];\r\n        // console.log('videoSource:' + videoSource);\r\n\r\n        var screenWidth = 1080;//1280;//1920;//video.width;//window.innerWidth;\r\n        var screenHeight = 1080;//720;//1080;//video.height;//window.innerHeight;\r\n\r\n        var facingModeText = 'user';\r\n        if (_videoUserCameraFlag == false) {\r\n            facingModeText = 'environment';\r\n        }\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n          audio: false,\r\n          video: {\r\n            //deviceId: videoSource ? { exact: videoSource } : undefined,\r\n            facingMode: facingModeText,\r\n            frameRate: 60,\r\n            width: {exact: screenWidth},\r\n            height: {exact: screenHeight},\r\n            aspectRatio: {\r\n                exact: screenWidth / screenHeight\r\n            }\r\n          }\r\n        })\r\n\r\n        window.stream = stream;\r\n        video.srcObject = stream;\r\n        video.play();\r\n    }\r\n\r\n    stopCamera() {\r\n        console.log('stopCamera call');\r\n        const video = this.video;\r\n        //console.log(video);\r\n        if (undefined == video) {\r\n            return;\r\n        }\r\n        video.pause();\r\n        video.src = \"\";\r\n        if (undefined != video.srcObject) {\r\n            video.srcObject.getTracks()[0].stop();\r\n            video.srcObject = undefined;\r\n        }\r\n        console.log(\"video off\");\r\n    }\r\n\r\n    setFlashLight(state) {\r\n        console.log('setFlashLight:'+state);\r\n        if (undefined == window.stream) {\r\n            return;\r\n        }\r\n        const track = window.stream.getVideoTracks()[0];\r\n        console.log(track);\r\n        if (undefined == track) {\r\n            return;\r\n        }\r\n\r\n        var capabilities = track.getCapabilities();\r\n        console.log(capabilities);\r\n        if (undefined == capabilities) {\r\n            return;\r\n        }\r\n        console.log(capabilities.torch);\r\n        if (capabilities.torch) {\r\n            track.applyConstraints({\r\n                advanced: [{ torch: state }]\r\n            }).catch(e => console.log(e));\r\n        }\r\n    }\r\n\r\n    updateCamera() {\r\n        const canvas = this.canvas;\r\n        if (undefined == canvas) {\r\n            return;\r\n        }\r\n        const canvasContext = canvas.getContext('2d')\r\n        if (undefined == canvasContext) {\r\n            return;\r\n        }\r\n        const video = this.video;\r\n        if (undefined == video) {\r\n            return;\r\n        }\r\n        //console.log('showVideo:' + this.props.showVideo);\r\n        if (false == this.props.showVideo) {\r\n            video.style.display = \"none\";\r\n        }\r\n        else {\r\n            video.style.display = \"block\";\r\n        }\r\n        this.updateCameraFrame(canvasContext)\r\n    }\r\n\r\n    updateCameraFrame(canvasContext) {\r\n        const video = this.video;\r\n        const findUpdateCameraFrame = async () => {\r\n            const canvas = this.canvas;\r\n            if (true == this.props.showDebugVideo && undefined != canvas) {\r\n\r\n                if (video.videoWidth != canvas.width || video.videoHeight != canvas.height) {\r\n                    canvas.width = video.videoWidth;\r\n                    canvas.height = video.videoHeight;\r\n                    canvasContext.width = video.videoWidth;\r\n                    canvasContext.height = video.videoHeight;\r\n                }\r\n                //console.log('resolution width:' + video.videoWidth + \", canvas width:\" + canvas.width);\r\n                //console.log('video pos x:' + canvas.style.left + \", y:\" + canvas.style.top);\r\n                //console.log(video);\r\n                //console.log('video:' + video.left + ',' + video.top + ',' + video.width + ',' + video.height);\r\n                canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n                //CanvasFPS_Update();\r\n                canvasContext.save();\r\n\r\n                switch (this.state.cameraFilterType) {\r\n                    case 0: {\r\n                        canvasContext.filter = 'none';\r\n                    }break;\r\n                    case 1: {\r\n                        canvasContext.filter = 'grayscale(100%)';\r\n                    }break;\r\n                    case 2: {\r\n                        canvasContext.filter = 'brightness(100%)';\r\n                    }break;\r\n                    case 3: {\r\n                        canvasContext.filter = 'contrast(100%)';\r\n                    }break;\r\n                    case 4: {\r\n                        canvasContext.filter = 'sepia(100%)';\r\n                    }break;\r\n                    case 5: {\r\n                        canvasContext.filter = 'invert(100%)';\r\n                    }break;\r\n                    case 6: {\r\n                        canvasContext.filter = 'saturate(100%)';\r\n                    }break;\r\n                    case 7: {\r\n                        canvasContext.filter = 'blur(4px)';\r\n                    }break;\r\n                }\r\n                //canvasContext.scale(-1, 1)\r\n                //canvasContext.translate(-video.width, 0)\r\n                \r\n                canvasContext.drawImage(video, 0, 0);//, video.videoWidth, video.videoHeight)\r\n                canvasContext.restore();\r\n\r\n                // var fontSize = canvas.width/20;\r\n                // canvasContext.fillStyle = 'white';\r\n                // canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n                // canvasContext.shadowBlur = 2;\r\n                // canvasContext.shadowOffsetX = 3;\r\n                // canvasContext.shadowOffsetY = 3;\r\n                // canvasContext.font = fontSize + \"px Arial\";\r\n                // canvasContext.textAlign = \"center\";\r\n                // canvasContext.fillText('목표', canvas.width - fontSize*4, fontSize);\r\n                //CanvasFPS_Render(canvasContext);\r\n            }\r\n\r\n            if ('start' == this.props._closeCamera) {\r\n                this.stopCamera();\r\n                this.props.onCloseCamera('complete');\r\n                return;\r\n            }\r\n            requestAnimationFrame(findUpdateCameraFrame)\r\n        }\r\n        findUpdateCameraFrame()\r\n    }\r\n\r\n    updateCameraGrid = (viewState) => {\r\n        const video = this.video;\r\n        if (undefined == video) {\r\n            return;\r\n        }\r\n\r\n        const canvas = this.canvasOverlay;\r\n        if (undefined == canvas) {\r\n            return;\r\n        }\r\n        const canvasContext = canvas.getContext('2d')\r\n        if (undefined == canvasContext) {\r\n            return;\r\n        }\r\n    \r\n        if (video.videoWidth != canvas.width || video.videoHeight != canvas.height) {\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n            canvasContext.width = video.videoWidth;\r\n            canvasContext.height = video.videoHeight;\r\n        }\r\n\r\n        canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        if (true == viewState) {\r\n            canvasContext.save();\r\n            canvasContext.strokeStyle = 'rgb(255,0,0)';\r\n            canvasContext.lineWidth = 5;//Math.floor(Math.random() * Math.floor(3))+1; \r\n            canvasContext.globalAlpha = 0.3;\r\n\r\n            for (var x = 0; x <= canvas.width; x += canvas.width/3) {\r\n                canvasContext.moveTo(x, 0);\r\n                canvasContext.lineTo(x, canvas.height);\r\n            }\r\n            for (var y = 0; y <= canvas.height; y += canvas.height/3) {\r\n                canvasContext.moveTo(0, y);\r\n                canvasContext.lineTo(canvas.width, y);\r\n            }\r\n            canvasContext.stroke();\r\n            canvasContext.restore();\r\n        }\r\n    }\r\n\r\n    onNextCamera = () => {\r\n        // _videoSelectIndex++;\r\n        // if (_videoCamneraList.length <= _videoSelectIndex)\r\n        //   _videoSelectIndex = 0;\r\n        // console.log('camera index : ' + _videoSelectIndex);\r\n\r\n        _videoUserCameraFlag = !_videoUserCameraFlag;\r\n        console.log('user camera flag : ' + _videoUserCameraFlag);\r\n        this.playCamera();\r\n        if (true == _videoUserCameraFlag) {\r\n            this.onFlash();\r\n        }\r\n        else {\r\n            this.setFlashLight((this.state.cameraFlashType == 1) ? true : false);\r\n        }\r\n        playEnableClickSound();\r\n    }\r\n\r\n    onTimerSelect = () => {\r\n        var currentValue = this.state.cameraCaptureTimerType;\r\n        // currentValue++;\r\n        // if (currentValue > 3) {\r\n        //     currentValue = 0;\r\n        // }\r\n        // this.setState(() => {\r\n        //     return {cameraCaptureTimerType: currentValue};\r\n        //   });\r\n        // console.log(\"timer:\" + currentValue);\r\n        // playEnableClickSound();\r\n        playDisableClickSound();\r\n    }\r\n\r\n    onCaptureAnimation = () => {\r\n        console.log('onCaptureAnimation call');\r\n        if (true == this.state.flashEffect) {\r\n            console.log('onCaptureAnimation call fail!');\r\n            return;\r\n        }\r\n        this.setState({\r\n            flashEffect: true\r\n          });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                flashEffect: false\r\n              });\r\n        }, 800);\r\n        playCameraShutterSound();\r\n    }\r\n\r\n    onCapture = () => {\r\n        const canvas = this.canvas;\r\n        if (undefined == canvas) {\r\n            return;\r\n        }\r\n\r\n        var delayDuration = 0;\r\n        switch (this.state.cameraCaptureTimerType) {\r\n            case 0:\r\n                delayDuration = 0;\r\n                break;\r\n            case 1:\r\n                delayDuration = 3000;\r\n                break;\r\n            case 2:\r\n                delayDuration = 5000;\r\n                break;\r\n            case 3:\r\n                delayDuration = 10000;\r\n                break;\r\n        }\r\n        var d = new Date();\r\n        var dateText = d.toISOString();\r\n        if (undefined == window.HybridApp) {\r\n            setTimeout(() => {\r\n                var saveImage = canvas.toDataURL(\"image/jpeg\", 1.0);\r\n                this.props.onAddCanvasData(saveImage);\r\n                this.onCaptureAnimation();\r\n            }, delayDuration);\r\n        }\r\n        else {\r\n            setTimeout(() => {\r\n                var saveImage = canvas.toDataURL(\"image/jpeg\", 1.0);\r\n                if (undefined != window.HybridApp) {\r\n                    window.HybridApp.SaveAlbumJpgImage(saveImage, dateText + \".jpg\");\r\n                } else {\r\n                    var a = document.createElement(\"a\");\r\n                    document.body.appendChild(a);\r\n                    a.style = \"display: none\";\r\n                    a.href = saveImage;\r\n                    a.download = dateText + \".jpg\";\r\n                    a.click();\r\n                    window.URL.revokeObjectURL(saveImage);\r\n                }\r\n                this.onCaptureAnimation();\r\n                console.log(\"onCapture\");\r\n            }, delayDuration);\r\n        }\r\n    }\r\n\r\n    onBack = () => {\r\n        console.log(\"onBack\");\r\n        this.props.onSetScene(\"PortraitMaster\");\r\n        playEnableClickSound();\r\n    }\r\n\r\n    onFlash = () => {\r\n        var currentValue = this.state.cameraFlashType;\r\n        currentValue++;\r\n        if (currentValue > 1) {\r\n            currentValue = 0;\r\n        }\r\n        // 유저 카메라 모드에소는 라이트를 쓰지 않게함\r\n        if (true == _videoUserCameraFlag) {\r\n            currentValue = 0;\r\n            ShowToast('전면 카메라에서는 라이트를 사용 할 수 없습니다.');\r\n        }\r\n        this.setState(() => {\r\n            return {cameraFlashType: currentValue};\r\n          });\r\n\r\n        this.setFlashLight((currentValue == 1) ? true : false);\r\n        console.log(\"flash:\" + currentValue);\r\n        playEnableClickSound();\r\n    }\r\n    \r\n    onToggleGrid = () => {\r\n        var viewState = !this.state.gridView;\r\n        this.setState(() => {\r\n            return {gridView: viewState};\r\n          });\r\n        console.log(\"grid view:\" + viewState);\r\n        this.updateCameraGrid(viewState);\r\n        playEnableClickSound();\r\n    }\r\n\r\n    onCaptureRatio = () => {\r\n        var currentValue = this.state.captureRatioType;\r\n        // currentValue++;\r\n        // if (currentValue > 1) {\r\n        //     currentValue = 0;\r\n        // }\r\n        // this.setState(() => {\r\n        //     return {captureRatioType: currentValue};\r\n        //   });\r\n        console.log(\"capture Ratio Type:\" + currentValue);\r\n        playDisableClickSound();\r\n    }\r\n\r\n\r\n    onMovieFilter = () => {\r\n        var currentValue = this.state.cameraFilterType;\r\n        currentValue++;\r\n        if (currentValue > 7) {\r\n            currentValue = 0;\r\n        }\r\n        this.setState(() => {\r\n            return {cameraFilterType: currentValue};\r\n          });\r\n        console.log(\"camera filter:\" + currentValue);\r\n        playDisableClickSound();\r\n    }\r\n    \r\n    render() {\r\n        let timerIcon;\r\n        switch (this.state.cameraCaptureTimerType) {\r\n            case 0: {\r\n                timerIcon = <img style={btnLeftBottomStyle} onClick={this.onTimerSelect.bind(this)} src='img/TimerOff.png' />;\r\n            } break;\r\n            case 1: {\r\n                timerIcon = <img style={btnLeftBottomStyle} onClick={this.onTimerSelect.bind(this)} src='img/Timer3.png' />;\r\n            } break;\r\n            case 2: {\r\n                timerIcon = <img style={btnLeftBottomStyle} onClick={this.onTimerSelect.bind(this)} src='img/Timer5.png' />;\r\n                \r\n            } break;\r\n            case 3: {\r\n                timerIcon = <img style={btnLeftBottomStyle} onClick={this.onTimerSelect.bind(this)} src='/mg/Timer10.png' />;\r\n            } break;\r\n        }\r\n\r\n        let flashIcon;\r\n        switch (this.state.cameraFlashType) {\r\n            case 0: {\r\n                flashIcon = <img style={btnTopStyle2} onClick={this.onFlash.bind(this)} src='img/FlashOff.png' />\r\n            } break;\r\n            case 1: {\r\n                flashIcon = <img style={btnTopStyle2} onClick={this.onFlash.bind(this)} src='img/FlashOn.png' />\r\n            } break;\r\n        }\r\n        \r\n        let gridIcon;\r\n        if (false == this.state.gridView) {\r\n            gridIcon = <img style={btnTopStyle3} onClick={this.onToggleGrid.bind(this)} src='img/GridOff.png' />\r\n        } else {\r\n            gridIcon = <img style={btnTopStyle3} onClick={this.onToggleGrid.bind(this)} src='img/GridOn.png' />\r\n        }\r\n\r\n        let captureRatioIcon;\r\n        if (0 == this.state.captureRatioType) {\r\n            captureRatioIcon = <img style={btnTopStyle4} onClick={this.onCaptureRatio.bind(this)} src='img/CaptureRatio4_3.png' />\r\n        } else {\r\n            captureRatioIcon = <img style={btnTopStyle4} onClick={this.onCaptureRatio.bind(this)} src='img/CaptureRatio16_9.png' />\r\n        }\r\n\r\n        let filterIcon;\r\n        if (0 == this.state.cameraFilterType) {\r\n            filterIcon = <img style={btnTopStyle5} onClick={this.onMovieFilter.bind(this)} src='img/FilterOff.png' />\r\n        } else {\r\n            filterIcon = <img style={btnTopStyle5} onClick={this.onMovieFilter.bind(this)} src='img/FilterOn.png' />\r\n        }\r\n\r\n        return (\r\n            <div style={rootStyle}>\r\n                {/* <meta http-equiv=\"Content-Security-Policy\" content=\"default-src * gap:; script-src * 'unsafe-inline' 'unsafe-eval'; connect-src *; img-src * data: blob: android-webview-video-poster:; style-src * 'unsafe-inline';\" /> */}\r\n                <video id='videoCamera' style={videoStyle} src=\"\" playsInline ref={this.getVideo} />\r\n                <canvas style={canvasStyle} ref={this.getCanvas} />\r\n                <canvas id='canvasOverlay' style={canvasStyle} ref={this.getCanvasOverlay} />\r\n\r\n                <div style={btnTopBatStyle}>\r\n                    <img style={btnTopStyle1} onClick={this.onBack.bind(this)} src='img/CameraBack.png' />\r\n                    {flashIcon}\r\n                    {gridIcon}\r\n                    {captureRatioIcon}\r\n                    {filterIcon}\r\n                    {/* <IconButton onClick={this.onBack.bind(this)}><ArrowBackIosOutlinedIcon color=\"primary\" fontSize=\"large\" /></IconButton>\r\n                    <IconButton onClick={this.onFlash.bind(this)}>{flashIcon}</IconButton>\r\n                    <IconButton onClick={this.onToggleGrid.bind(this)}><GridOnOutlinedIcon color=\"primary\" fontSize=\"large\" /></IconButton>\r\n                    <IconButton onClick={this.onMovieFilter.bind(this)}><MovieFilterOutlinedIcon color=\"primary\" fontSize=\"large\" /></IconButton> */}\r\n                </div>\r\n\r\n                <div style={btnBottomBarStyle}>\r\n                    {timerIcon}\r\n                    <img style={btnCenterBottomStyle} onClick={this.onCapture.bind(this)} src='img/shutter_normal.png' />\r\n                    <img style={btnRightBottomStyle} onClick={this.onNextCamera.bind(this)} src='img/FlipCamera.png' />\r\n                </div>\r\n\r\n                <div className={\"CameraCaptureEffect \" + (this.state.flashEffect ? 'CameraCaptureAnimation' : '')}>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        _closeCamera: state.camera._closeCamera\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetScene: (state) => dispatch(set_scene(state)),\r\n        onAddCanvasData: (img) => dispatch(AddCanvasData(img)),\r\n    }\r\n}\r\n\r\nCameraCapture = connect(mapStateToProps, mapDispatchToProps)(CameraCapture);\r\n\r\nexport default CameraCapture;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  ContentsBody: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    left: \"0px\",\r\n    top: \"0px\",\r\n    bottom: \"50px\",\r\n  },\r\n  ImgList: {\r\n    display: \"flex\",\r\n    overflowX: \"auto\",\r\n  },\r\n  BottomBar1: {\r\n    position: \"fixed\",\r\n    width: \"40%\",\r\n    Height: \"50px\",\r\n    left: \"5%\",\r\n    bottom: \"0px\",\r\n  },\r\n  BottomBar2: {\r\n    position: \"fixed\",\r\n    width: \"40%\",\r\n    left: \"55%\",\r\n    Height: \"50px\",\r\n    bottom: \"0px\",\r\n  }\r\n}));\r\n\r\n\r\nexport const CameraCaptureSelect = ({ set_scene }) => {\r\n  console.log('Index_scene component start');\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    onUploadImageList();\r\n  });\r\n\r\n  const imgUpload = (file) => {\r\n    console.log(\"imgUpload:\");\r\n    console.log(file);\r\n    var fr = new FileReader();\r\n    fr.onload = function (event) {\r\n      var src = event.target.result;\r\n      var img = new Image();\r\n      img.onload = function () {\r\n        AddImage(fr.result);\r\n      };\r\n      img.src = src;\r\n    };\r\n    fr.readAsDataURL(file);\r\n  }\r\n\r\n  const onAddImageChange = (imageInput) => {\r\n    console.log(\"onAddImageChange\");\r\n    if (imageInput.target.files[0]) {\r\n      imgUpload(imageInput.target.files[0]);\r\n    }\r\n  }\r\n\r\n  const onAddImageSelect = () => {\r\n    console.log(\"onAddImageSelect\");\r\n    var fileInput = document.createElement('input');\r\n    fileInput.type = \"file\";\r\n    fileInput.accept = \"image/*\";\r\n    fileInput.style.display = 'none';\r\n    fileInput.onchange = onAddImageChange;\r\n    document.body.appendChild(fileInput);\r\n    fileInput.click();\r\n  }\r\n\r\n  const onUploadImageList = () => {\r\n    console.log('onUploadImageList');\r\n    if (undefined != window.HybridApp) {\r\n      var imgCount = window.HybridApp.GetDirectoryFileCount();\r\n      for (var i = 0; i < imgCount; i++) {\r\n        var imgText = window.HybridApp.GetImageDataFromDirectory(i);\r\n        AddImage(imgText);\r\n      }\r\n    }\r\n  }\r\n\r\n  const onUploadData = () => {\r\n    console.log('onUploadData');\r\n  }\r\n\r\n  const AddImage = (imgsrc) => {\r\n    var element = document.createElement('img');\r\n    element.style.display = \"block\";\r\n    element.style.width = \"65%\";\r\n    element.style.height = \"auto\";\r\n    element.style.margin = \"5px\";\r\n    element.src = imgsrc;\r\n    var imgList = document.getElementById('imagelist');\r\n    imgList.appendChild(element);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div id='imagelist' className={classes.ImgList}>\r\n      </div>\r\n      {/* <input type='file' accept='image/*' onChange={onAddImageChange}/> */}\r\n      <Button onClick={onAddImageSelect} className={classes.BottomBar1} variant=\"contained\" color=\"secondary\">\r\n        이미지 선택\r\n      </Button>\r\n      <Button onClick={onUploadData} className={classes.BottomBar2} variant=\"contained\" color=\"secondary\">\r\n        제출하기\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CameraCaptureSelect);","import React, { useEffect } from 'react';\r\nimport { useDispatch, connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { playEnableClickSound } from './util/SoundPlay'\r\nimport './Appbar.css'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 1,\r\n    backgroundColor: \"black\",\r\n    color: \"white\"\r\n  },\r\n  bar: {\r\n    position: \"absolute\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    margin: \"2%\",\r\n  },\r\n  title: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    textAlign: \"left\",\r\n    margin: \"2%\",\r\n    color: \"white\"\r\n  },\r\n}));\r\n\r\n// ArrowBackIos\r\nexport const AppBar_Quest = ({title, set_scene}) => {\r\n  const classes = useStyles();\r\n  \r\n  useEffect(() => {\r\n  });\r\n\r\n\r\n  const onBack = () => {\r\n    console.log('onBack set_page');\r\n    set_scene('PortraitMaster');\r\n    playEnableClickSound();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <div className={classes.bar}>\r\n            <span onClick={onBack} >\r\n              <img className='appbar_title_img_arrow' src='img/CameraBack.png' />\r\n            </span>\r\n            <span className='appbar_quest_title_text'>\r\n              {title}\r\n            </span>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppBar_Quest);","import React, { useEffect, useState }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\nimport { DeleteCanvasData } from '../actions/camera'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport {playDisableClickSound} from './util/SoundPlay'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n    bottomBar: {\r\n        position: \"fixed\",\r\n        height: '50px',\r\n        bottom: \"0px\",\r\n        width: \"100%\",\r\n        backgroundColor: '#000000AA',\r\n    },\r\n    upload_button: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        left: \"20px\",\r\n        height: \"30px\",\r\n    },\r\n    delete_button: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"20px\",\r\n        height: \"30px\",\r\n    },\r\n    BottomBarButton: {\r\n        position: \"absolute\",\r\n        height: \"94%\",\r\n        top: \"3%\",\r\n        background: 'linear-gradient(90deg, #cc6699 30%, #6666ff 80%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\r\n        width: \"94%\",\r\n        left: \"3%\",\r\n      },\r\n}));\r\n\r\nexport const PortraitMasterCaptureImageControlBar = ({set_scene, itemCount, onClickUploadImage, onClickDeleteImage, onClickSubmit, DeleteCanvasData, enableSubmit}) => {\r\n    console.log('PortraitMasterCaptureImageControlBar component start');\r\n    console.log('enableSubmit:' + enableSubmit);\r\n    const classes = useStyles();\r\n\r\n    const onDisableButton = () => {\r\n        playDisableClickSound();\r\n    }\r\n\r\n    const getButton = () => {\r\n        if (true == enableSubmit) {\r\n            return (\r\n                <div className='quest_main_button' onClick={onClickSubmit}>\r\n                    <span>이 사진 제출하기</span>\r\n                </div>\r\n\r\n                // <div className={classes.bottomBar} >\r\n                //     <Button onClick={onClickSubmit} className={classes.BottomBarButton} variant=\"contained\" color=\"secondary\">이 사진 제출하기</Button>;\r\n                // </div>\r\n            );\r\n        } else {\r\n            let uploadImageButton;\r\n            let deleteImageButton;\r\n\r\n            if (itemCount != 0) {\r\n                uploadImageButton = <img className={classes.upload_button} onClick={onClickUploadImage} src='img/image-select-upload-enable-icon.png' />;\r\n                deleteImageButton = <img className={classes.delete_button} onClick={onClickDeleteImage} src='img/image-select-delete-enable-icon.png' />;\r\n            } else {\r\n                uploadImageButton = <img className={classes.upload_button} onClick={onDisableButton} src='img/image-select-upload-disable-icon.png' />;\r\n                deleteImageButton = <img className={classes.delete_button} onClick={onDisableButton} src='img/image-select-delete-disable-icon.png' />;\r\n            }\r\n            return (\r\n                <div className={classes.bottomBar} >\r\n                    {uploadImageButton}\r\n                    {deleteImageButton}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}> \r\n            {getButton()}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n});\r\nconst mapDispatchToProps = { set_scene, DeleteCanvasData };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMasterCaptureImageControlBar);","import React, { useEffect, useState }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\nimport { DeleteCanvasData } from '../actions/camera'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SetIframeFullScreen, SetIframeFinish } from './util/SendMessage';\r\nimport AppBar_Quest from './AppBar_Quest';\r\nimport PortraitMasterCaptureImageControlBar from './PortraitMasterCaptureImageControlBar'\r\nimport DefaultConfirmDialog from './DefaultConfirmDialog'\r\nimport './PortraitMaster.css'\r\nimport { playEnableClickSound } from './util/SoundPlay'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        background: '#000000', \r\n    },\r\n    app_root: {\r\n        position: \"fixed\",\r\n        left: \"0%\",\r\n        top: \"0%\",\r\n        width: '100%',\r\n        height: '8%',\r\n        //backgroundColor: \"green\"\r\n    },\r\n    body: {\r\n        position: \"fixed\",\r\n        left: \"0%\",\r\n        top: \"8%\",\r\n        width: '100%',\r\n        height: '92%',\r\n        backgroundColor: \"black\"\r\n    },\r\n    select_text: {\r\n        color: 'white'\r\n    },\r\n    ImgList: {\r\n        overflowY: \"auto\",\r\n        background: '#000000', \r\n    },\r\n    bottomBar: {\r\n        position: \"fixed\",\r\n        height: '50px',\r\n        bottom: \"0px\",\r\n        width: \"100%\",\r\n        backgroundColor: '#000000AA',\r\n    },\r\n    upload_button: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        left: \"20px\",\r\n        height: \"30px\",\r\n    },\r\n    delete_button: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"20px\",\r\n        height: \"30px\",\r\n    },\r\n}));\r\n\r\nvar _items = [];\r\nexport const PortraitMasterGridCaptureImageList = ({_canvasData, set_scene, DeleteCanvasData}) => {\r\n    console.log('PortraitMasterGridCaptureImageList component start');\r\n    const classes = useStyles();\r\n    const [itemCount, setItemCount] = useState(0);\r\n    const [_deleteImageDialog, setDeleteImageDialog] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        SetIframeFullScreen(true);\r\n        return () => {\r\n            SetIframeFullScreen(false);\r\n        }\r\n      }, []);\r\n\r\n    const toggleSelectImage = (index) => {\r\n        console.log(\"toggleSelectImage:\" + index);\r\n        var deleteState = false;\r\n        for (var i = 0; i < _items.length; i++) {\r\n            if (_items[i] == index) {\r\n                _items.splice(i, 1); \r\n                deleteState = true;\r\n                break;\r\n            }\r\n        }\r\n        if (false == deleteState) {\r\n            _items.push(index);\r\n        }\r\n        setItemCount(_items.length);\r\n        return !deleteState;\r\n    }\r\n\r\n    const getSelectState = (index) => {\r\n        for (var i = 0; i < _items.length; i++) {\r\n            if (_items[i] == index) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const onClickUploadImage = () => {\r\n        console.log(\"onClickUploadImage call\");\r\n\r\n        var selectIndex = -1;\r\n        for (var i = 0; i < _items.length; i++) {\r\n            var selectState = getSelectState(_items[i]);\r\n            if (selectState == true) {\r\n                selectIndex = _items[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (-1 != selectIndex) {\r\n            if (undefined != window.HybridApp) {\r\n                window.HybridApp.DoShareImage(selectIndex, 'level up hero 인물사진 퀘스트');\r\n            } else {\r\n                //set_scene('PortraitMaster');\r\n            }\r\n        }\r\n        playEnableClickSound();\r\n    }\r\n    \r\n    const onClickDeleteImage = () => {\r\n        console.log(\"onClickDeleteImage call\");\r\n        setDeleteImageDialog(true);\r\n        playEnableClickSound();\r\n    }\r\n\r\n    const onDeleteImageDialogClose = () => {\r\n        console.log(\"onDeleteImageDialogClose call\");\r\n        setDeleteImageDialog(false);\r\n        playEnableClickSound();\r\n    }\r\n    \r\n    const onDeleteImageOK = () => {\r\n        console.log(\"onClickDeleteImage call\");\r\n        setDeleteImageDialog(false);\r\n        var deleteIndexList = [];\r\n        for (var i = 0; i < _items.length; i++) {\r\n            var selectState = getSelectState(_items[i]);\r\n            if (selectState == true) {\r\n                deleteIndexList.push(_items[i]);\r\n            }\r\n        }\r\n        \r\n        var imageCount = getImageCount();\r\n        var isRemoveAll = imageCount == deleteIndexList.length;\r\n        console.log('======isRemoveAll:' + isRemoveAll + ', ' + imageCount + '/' + deleteIndexList.length)\r\n        _items = [];\r\n        setItemCount(0);\r\n\r\n        deleteIndexList.sort(function(a, b) {\r\n            return b - a;\r\n        });\r\n\r\n        //console.log('===========delete index', deleteIndexList);\r\n        \r\n        for (var i = 0; i < deleteIndexList.length; i++) {\r\n            console.log('select item DeleteCanvasData call index:' + deleteIndexList[i]);\r\n            if (undefined != window.HybridApp) {\r\n                window.HybridApp.DeleteImageDataFromDirectory(deleteIndexList[i]);\r\n            }\r\n            else {\r\n                DeleteCanvasData(deleteIndexList[i]);\r\n            }\r\n        }\r\n        if (isRemoveAll == true) {\r\n            set_scene('PortraitMaster');\r\n        }\r\n        playEnableClickSound();\r\n    }\r\n\r\n    const onImageClick = (index) => {\r\n        console.log('onImageClick index:' + index);\r\n        toggleSelectImage(index);\r\n        playEnableClickSound();\r\n    }\r\n\r\n    const getImageNode = (index, imgSrc) => {\r\n        var className = 'gridView-play_quest_thumb_img';\r\n        var isSelected = getSelectState(index);\r\n        if (true == isSelected) {\r\n            className = 'gridView-play_quest_thumb_is_selected_img';\r\n        }\r\n        /// overlayElement.src = 'img/image-checked-icon.png';\r\n        return (\r\n            <li onClick={() => onImageClick(index)}>\r\n                <div className='gridView-play_quest_thumb'>\r\n                    <img className={className} src={imgSrc} alt=\"\" />\r\n                    {isSelected == true ? <img className='gridView-play_quest_thumb-check' src= 'img/image-checked-icon.png' alt=\"\" /> : undefined}\r\n                </div>\r\n                {/* {isSelected == true ? <div className=\"gridView-play_quest_thumb_check\">\r\n                    <img src= 'img/image-checked-icon.png' alt=\"\" />\r\n                </div> : undefined} */}\r\n                {/* <span className=\"gridView-play_quest_label\">{index} + 이미지</span> */}\r\n            </li>\r\n        );\r\n    }\r\n\r\n    const getImageCount = () => {\r\n        if (undefined != window.HybridApp) {\r\n            return window.HybridApp.GetDirectoryFileCount();\r\n        }\r\n        else {\r\n            return _canvasData.length;\r\n        }\r\n    }\r\n\r\n    const getImageList = () => {\r\n        var contents = [];\r\n\r\n        if (undefined != window.HybridApp) {\r\n            var imgCount = window.HybridApp.GetDirectoryFileCount();\r\n            for (var i = imgCount-1; i >= 0; i--) {\r\n                var imgText = window.HybridApp.GetImageDataFromDirectory(i);\r\n                contents.push(getImageNode(i, imgText));\r\n            }\r\n        }\r\n        else {\r\n            for (var i = _canvasData.length-1; i >= 0; i--) {\r\n                contents.push(getImageNode(i, _canvasData[i]));\r\n            }\r\n        }\r\n        return contents;\r\n    }\r\n\r\n    let selectText;\r\n\r\n    if (itemCount != 0) {\r\n        selectText = <div className={classes.select_text}><center>{itemCount}개 선택됨</center></div>;\r\n    } else {\r\n        selectText = <div className={classes.select_text}><center>선택 되지 않음</center></div>;\r\n    }\r\n    \r\n    let appbarTitle = '내 사진 편집';\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.app_root}>\r\n                <AppBar_Quest title={appbarTitle} />\r\n            </div>\r\n            <div className={classes.body}>\r\n                {selectText}\r\n                {/* <div id=\"imagelist\" className={classes.ImgList} /> */}\r\n                <div className='gridView-filter-content'>\r\n                    <ul className=\"gridView-play_quest\">\r\n                        {getImageList()}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <DefaultConfirmDialog title='사진을 삭제 하시겠습니까?' onOKClick={onDeleteImageOK} onCloseClick={onDeleteImageDialogClose} openDialog={_deleteImageDialog} />\r\n            <PortraitMasterCaptureImageControlBar itemCount={itemCount} onClickUploadImage={onClickUploadImage} onClickDeleteImage={onClickDeleteImage} />\r\n        </div >\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _canvasData: state.camera._canvasData\r\n});\r\nconst mapDispatchToProps = { set_scene, DeleteCanvasData };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMasterGridCaptureImageList);","import React, { useEffect, useState }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene, SetSelectImgIndex, SetImageSubmit } from '../actions/scene';\r\nimport { DeleteCanvasData } from '../actions/camera'\r\nimport { makeStyles, formatMs } from '@material-ui/core/styles';\r\nimport { SetIframeFullScreen, SetIframeFinish } from './util/SendMessage';\r\nimport AppBar_Quest from './AppBar_Quest';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { PortraitMasterCaptureImageControlBar } from './PortraitMasterCaptureImageControlBar';\r\nimport DefaultConfirmDialog from './DefaultConfirmDialog'\r\n\r\nimport { playEnableClickSound } from './util/SoundPlay'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: \"absolute\",\r\n        left: \"0%\",\r\n        top: \"0%\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundColor: 'black'\r\n    },\r\n    app_root: {\r\n        position: \"fixed\",\r\n        left: \"0%\",\r\n        top: \"0%\",\r\n        width: '100%',\r\n        height: '8%',\r\n        //backgroundColor: \"green\"\r\n    },\r\n    body: {\r\n        position: \"fixed\",\r\n        left: \"0%\",\r\n        top: \"8%\",\r\n        width: '100%',\r\n        height: '92%',\r\n        //backgroundColor: \"red\"\r\n    },\r\n    multi_select_text: {\r\n        color: 'white'\r\n    },\r\n    image_count_select_text: {\r\n        color: 'white'\r\n    },\r\n    ImgList: {\r\n        overflowY: \"auto\",\r\n        backgroundColor: 'black'\r\n    },\r\n}));\r\n\r\nvar _items = [];\r\nexport const PortraitMasterFullScreenCaptureList = ({_canvasData, set_scene, SetSelectImgIndex, _selectImgIndex, DeleteCanvasData, enableSubmit}) => {\r\n    console.log('PortraitMasterFullScreenCaptureList component start');\r\n    console.log('enableSubmit:' + enableSubmit);\r\n    const classes = useStyles();\r\n    const [itemCount, setItemCount] = useState(0);\r\n    const [_deleteImageDialog, setDeleteImageDialog] = React.useState(false);\r\n    const [_submitImageDialog, setSubmitImageDialog] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        onUpdateImageList();\r\n        SetIframeFullScreen(true);\r\n        return () => {\r\n            SetIframeFullScreen(false);\r\n        }\r\n      }, []);\r\n    const onUpdateImageList = () => {\r\n        _items = [];\r\n        console.log('onUpdateImageList');\r\n        if (undefined != window.HybridApp) {\r\n            var imgCount = window.HybridApp.GetDirectoryFileCount();\r\n            //for (var i = imgCount-1; i >= 0; i--) {\r\n            for (var i = 0; i < imgCount; i++) {\r\n                var imgText = window.HybridApp.GetImageDataFromDirectory(i);\r\n                AddImage(i, imgText);\r\n            }\r\n        }\r\n        else {\r\n            //for (var i = _canvasData.length-1; i >= 0; i--) {\r\n            for (var i = 0; i < _canvasData.length; i++) {\r\n                AddImage(i, _canvasData[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    const AddImage = (index, imgsrc) => {\r\n        var node = {};\r\n        node.index = index;\r\n        node.image = imgsrc;\r\n        _items.push(node);\r\n        setItemCount(_items.length);\r\n        console.log('item count:' + _items.length);\r\n    }\r\n\r\n    const onClickUploadImage = () => {\r\n        console.log(\"onClickUploadImage call\");\r\n        if (undefined != window.HybridApp) {\r\n            window.HybridApp.DoShareImage(_selectImgIndex, 'level up hero 인물사진 퀘스트');\r\n            //window.HybridApp.DoShare('level up hero', '인물사진 퀘스트', 'level up hero');\r\n        } else {\r\n            //set_scene('PortraitMaster');\r\n        }\r\n        playEnableClickSound();\r\n    }\r\n\r\n    const onClickDeleteImage = () => {\r\n        console.log(\"onClickDeleteImage call index:\" + _selectImgIndex);\r\n        setDeleteImageDialog(true);\r\n        playEnableClickSound();\r\n    }\r\n\r\n    const onSwipeSound = () => {\r\n        console.log(\"onSwipeSound call:\");\r\n        playEnableClickSound();\r\n    }\r\n\r\n    const onSelectImage = (idx) => {\r\n        console.log(\"onSelectImage call:\" + idx);\r\n        SetSelectImgIndex(idx);\r\n        //playEnableClickSound();\r\n    }\r\n    \r\n    const onSubmitImageOK = () => {\r\n        console.log('onSubmitImageOK call');\r\n        playEnableClickSound();\r\n        //SetIframeFinish();\r\n        //SetImageSubmit(true);\r\n        set_scene('PortraitMasterStamp');\r\n        setSubmitImageDialog(false);\r\n    }\r\n\r\n    const onSubmitImageDialogOpen = () => {\r\n        console.log('onSubmitImageDialogOpen call');\r\n        setSubmitImageDialog(true);\r\n        playEnableClickSound();\r\n    }\r\n\r\n    const onSubmitImageDialogClose = () => {\r\n        console.log('onSubmitImageDialogClose call');\r\n        setSubmitImageDialog(false);\r\n        playEnableClickSound();\r\n    }\r\n\r\n    const onDeleteImageOK = () => {\r\n        console.log(\"onDeleteImageOK call:\" + _selectImgIndex);\r\n        setDeleteImageDialog(false);\r\n        \r\n        if (undefined != window.HybridApp) {\r\n            window.HybridApp.DeleteImageDataFromDirectory(_selectImgIndex);\r\n        }\r\n        else {\r\n            DeleteCanvasData(_selectImgIndex);\r\n        }\r\n\r\n        SetSelectImgIndex(0);\r\n        if (_items.length <= 1) {\r\n            set_scene('PortraitMaster');\r\n        }\r\n        playEnableClickSound();\r\n    }\r\n\r\n    const onDeleteImageDialogClose = () => {\r\n        console.log(\"onDeleteImageDialogClose call\");\r\n        setDeleteImageDialog(false);\r\n        playEnableClickSound();\r\n    }\r\n\r\n    const getCarousel = () => {\r\n        console.log('_items count:' + _items.length);\r\n        return (\r\n        <Carousel infiniteLoop={true} onSwipeEnd={onSwipeSound} selectedItem={_selectImgIndex} showArrows={true} showStatus={false} showThumbs={false} showIndicators={false} onChange={onSelectImage}>\r\n            {\r\n                _items.map( node => {\r\n                    //console.log('=============_items index:', node.index)\r\n                return <img key={node.index} src={node.image} />\r\n                })\r\n            }\r\n        </Carousel>)\r\n    }\r\n\r\n    let selectText;\r\n    if (itemCount > 1) {\r\n        selectText = <div className={classes.multi_select_text}><center>슬라이드하면 다른 사진 표시</center></div>;\r\n    } else {\r\n        selectText = <div className={classes.multi_select_text}></div>\r\n    }\r\n\r\n    let imageCountText;\r\n    if (itemCount > 1) {\r\n        imageCountText = <div className={classes.image_count_select_text}><center>{_selectImgIndex+1}/{itemCount}</center></div>;\r\n    } else {\r\n        imageCountText = <div className={classes.image_count_select_text}></div>\r\n    }\r\n\r\n    let appbarTitle = '사진 보기';\r\n    if (enableSubmit == true) {\r\n        appbarTitle = '제출하기';\r\n    }\r\n    console.log('itemCount renderring update');\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.app_root}>\r\n                <AppBar_Quest title={appbarTitle} />\r\n            </div>\r\n            <div className={classes.body}>\r\n                {selectText}\r\n                {getCarousel()}\r\n                {imageCountText}\r\n            </div>\r\n            <DefaultConfirmDialog title='사진을 삭제 하시겠습니까?' onOKClick={onDeleteImageOK} onCloseClick={onDeleteImageDialogClose} openDialog={_deleteImageDialog} />\r\n            <PortraitMasterCaptureImageControlBar itemCount={1} onClickUploadImage={onClickUploadImage} onClickDeleteImage={onClickDeleteImage} onClickSubmit={onSubmitImageDialogOpen} enableSubmit={enableSubmit} />\r\n            <DefaultConfirmDialog title='스탬프를 받을 때까지 다시 제출할 수 없습니다.' onOKClick={onSubmitImageOK} onCloseClick={onSubmitImageDialogClose} openDialog={_submitImageDialog} />\r\n        </div >\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _canvasData: state.camera._canvasData,\r\n    _selectImgIndex: state.scene._selectImgIndex\r\n});\r\nconst mapDispatchToProps = { set_scene, SetSelectImgIndex, SetImageSubmit, DeleteCanvasData };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMasterFullScreenCaptureList);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        // height: '100%',\r\n        bottom: 0,\r\n        position: 'fixed',\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nexport const SceneNavigation = ({ set_scene }) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    return (\r\n        <BottomNavigation\r\n            value={value}\r\n            onChange={(event, newValue) => {\r\n                set_scene(newValue);\r\n                setValue(newValue);\r\n            }}\r\n            showLabels\r\n            className={classes.root}\r\n        >\r\n            <BottomNavigationAction value=\"PortraitMaster\" label=\"Home\" icon={<HomeIcon />} />\r\n            <BottomNavigationAction value=\"CameraCapture\" label=\"사진찍기\" icon={<CameraAltIcon />} />\r\n\r\n        </BottomNavigation>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SceneNavigation);","import React, { useEffect } from 'react';\r\nimport queryString from 'query-string';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport PortraitMaster from './../components/PortraitMaster'\r\nimport CameraCapture from './../components/camera/CameraCapture'\r\nimport CameraCaptureSelect from './../components/camera/CameraCaptureSelect'\r\nimport PortraitMasterGridCaptureImageList from '../components/PortraitMasterGridCaptureImageList'\r\nimport PortraitMasterFullScreenCaptureList from './../components/PortraitMasterFullScreenCaptureList'\r\nimport SceneNavigation from './SceneNavigation'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      width: \"100%\",\r\n      height: \"100%\"\r\n  },\r\n}));\r\n\r\n\r\nexport const IndexScene = ({ _current_scene, set_scene, location, _isImageSubmit }) => {\r\n  console.log('Index_scene component start');\r\n  const classes = useStyles();\r\n  const [_rewardState, setRewardState] = React.useState(false);\r\n  const [_rewardCategory, setRewardCategory] = React.useState('');\r\n  const [_rewardExp, setRewardExp] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    const query = queryString.parse(location.search);\r\n    console.log(query);\r\n    setRewardState((query.Complete == \"true\"));\r\n    setRewardCategory(query.reward_category);\r\n    setRewardExp(query.reward_exp);\r\n  },[location]);\r\n\r\n  const getActiveScene = () => {\r\n    switch(_current_scene) {\r\n      case 'CameraCapture': {\r\n        return (<CameraCapture />);\r\n      }\r\n      case 'CameraCaptureSelect': {\r\n        return (<CameraCaptureSelect />);\r\n      }\r\n      case 'GridCaptureList': {\r\n        return (<PortraitMasterGridCaptureImageList  />);\r\n      }\r\n      case 'FullScreenCaptureList': {\r\n        return (<PortraitMasterFullScreenCaptureList enableSubmit={false} />);\r\n      }\r\n      case 'SubmitCaptureList': {\r\n        return (<PortraitMasterFullScreenCaptureList enableSubmit={true} />);\r\n      }\r\n      case 'PortraitMasterStamp': {\r\n        return (<PortraitMaster isStampState={true} rewardState={_rewardState} rewardCategory={_rewardCategory} rewardExp={_rewardExp} />);\r\n      }\r\n      case 'PortraitMaster': {\r\n        return (<PortraitMaster isStampState={false} rewardState={_rewardState} rewardCategory={_rewardCategory} rewardExp={_rewardExp} />);\r\n      }\r\n      default: {\r\n        return (<PortraitMaster isStampState={false} rewardState={_rewardState} rewardCategory={_rewardCategory} rewardExp={_rewardExp} />);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {getActiveScene()}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _current_scene: state.scene._current_scene,\r\n  _isImageSubmit: state.scene._isImageSubmit,\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexScene);","import React from 'react';\r\nimport './App.css';\r\nimport IndexScene from './scene/IndexScene'\r\nimport { Route, BrowserRouter } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Route path=\"/\" component={IndexScene}/>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { SET_SCENE, SETSELECTIMGINDEX, SETIMAGESUBMIT } from '../actions/scene'\r\n\r\nconst initialState = {\r\n    _current_scene: 'IndexScene',\r\n    _selectImgIndex: 0,\r\n    _isImageSubmit: false\r\n};\r\n\r\nexport default function quest(state = initialState, action) {\r\n    console.log('reducer scene action call:' + action.type);\r\n    switch(action.type) {\r\n        case SET_SCENE:\r\n            console.log('SET_SCENE:' + action._change_scene);\r\n            return Object.assign({}, state, {\r\n                _current_scene: action._change_scene\r\n            });\r\n        case SETSELECTIMGINDEX:\r\n            console.log('SETSELECTIMGINDEX:' + action._selectImgIndex);\r\n            return Object.assign({}, state, {\r\n                _selectImgIndex: action._selectImgIndex\r\n            });\r\n        case SETIMAGESUBMIT:\r\n            console.log('SETIMAGESUBMIT:' + action._flag);\r\n            return Object.assign({}, state, {\r\n                _isImageSubmit: action._flag\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}","import { CLOSECAMERA, ADDCANVASDATA, DELETECANVASDATA } from '../actions/camera'\r\n\r\nconst initialState = {\r\n    _closeCamera: '',\r\n    _canvasData:[]\r\n};\r\n\r\nexport default function camera(state = initialState, action) {\r\n    console.log('reducer scene action call:' + action.type);\r\n    switch (action.type) {\r\n        case CLOSECAMERA:\r\n            console.log('CLOSECAMERA:' + action._closeCamera);\r\n            return Object.assign({}, state, {\r\n                _closeCamera: action._closeCamera\r\n            });\r\n        case ADDCANVASDATA:\r\n            console.log('ADDCANVASDATA:' + action._addCanvasData);\r\n            return {\r\n                ...state,\r\n                _canvasData: [...state._canvasData, action._addCanvasData]\r\n            }\r\n        case DELETECANVASDATA:\r\n            console.log('DELETECANVASDATA:' + action._deleteCanvasDataIndex);\r\n            return {\r\n                ...state,\r\n                _canvasData: [\r\n                    ...state._canvasData.slice(0, action._deleteCanvasDataIndex),\r\n                    ...state._canvasData.slice(action._deleteCanvasDataIndex + 1)]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport scene from './scene'\r\nimport camera from './camera'\r\n\r\nexport default combineReducers({\r\n    scene,\r\n    camera\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createStore } from 'redux';\r\nimport { Provider  } from 'react-redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst appElement = document.getElementById('root');\r\n\r\n// 리덕스 개발자도구 적용\r\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nconst store = createStore(rootReducer, devTools);\r\n// const store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  appElement\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}