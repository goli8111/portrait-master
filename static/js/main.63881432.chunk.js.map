{"version":3,"sources":["actions/scene.js","components/PortraitMasterContentsIntro.js","components/PortraitMasterSimpleCaptureList.js","components/PortraitMaster.js","actions/camera.js","components/camera/CameraCapture.js","components/camera/CameraCaptureSelect.js","components/PortraitMasterCaptureImageControlBar.js","components/PortraitMasterGridCaptureImageList.js","components/PortraitMasterFullScreenCaptureList.js","scene/SceneNavigation.js","scene/IndexScene.js","App.js","serviceWorker.js","reducers/scene.js","reducers/camera.js","reducers/index.js","index.js"],"names":["set_scene","change_scene","type","_change_scene","SetSelectImgIndex","index","_selectImgIndex","useStyles","makeStyles","theme","root","width","height","ContentsText","textAlign","contents_site_link","position","frameBorder","mapDispatchToProps","connect","state","_current_scene","scene","props","console","log","classes","className","url","process","overflow","left_title","left","right_title","top","right","ImgList","display","_canvasData","camera","useEffect","onUploadImageList","undefined","window","HybridApp","imgCount","GetDirectoryFileCount","i","imgText","GetImageDataFromDirectory","AddImage","length","imgsrc","element","document","createElement","style","margin","src","onclick","getElementById","appendChild","onClick","id","ContentsBody","bottom","gridTemplateRows","BottomBarBack","backgroundColor","BottomBarButtonBase","background","borderRadius","border","color","boxShadow","BottomBarButtonLeft","BottomBarButtonRight","BottomBarButton","divLine","simpleImageList","bottomButton","clsx","onCameraCapture","Button","variant","DeleteCanvasData","_deleteCanvasDataIndex","_videoUserCameraFlag","btnTopBatStyle","btnBottomBarStyle","rootStyle","zIndex","videoStyle","transform","canvasStyle","btnLeftBottomStyle","btnCenterBottomStyle","btnRightBottomStyle","btnTopStyle1","btnTopStyle2","btnTopStyle3","btnTopStyle4","btnTopStyle5","CameraCapture","defaultProps","getCanvas","elem","canvas","getCanvasOverlay","canvasOverlay","getVideo","video","updateCameraGrid","viewState","canvasContext","getContext","videoWidth","videoHeight","clearRect","save","strokeStyle","lineWidth","globalAlpha","x","moveTo","lineTo","y","stroke","restore","onNextCamera","playCamera","onFlash","setFlashLight","cameraFlashType","onTimerSelect","currentValue","cameraCaptureTimerType","setState","onCaptureAnimation","flashEffect","setTimeout","onCapture","delayDuration","dateText","Date","toISOString","saveImage","toDataURL","onAddCanvasData","SaveAlbumJpgImage","a","body","href","download","click","URL","revokeObjectURL","this","onBack","onSetScene","onToggleGrid","gridView","onCaptureRatio","captureRatioType","onMovieFilter","cameraFilterType","stopCamera","bind","setupCamera","Error","navigator","mediaDevices","enumerateDevices","then","devices","forEach","device","kind","label","deviceId","catch","err","name","message","updateCamera","stream","getTracks","track","stop","facingModeText","getUserMedia","audio","facingMode","frameRate","exact","aspectRatio","screenWidth","srcObject","play","pause","getVideoTracks","capabilities","getCapabilities","torch","applyConstraints","advanced","e","showVideo","updateCameraFrame","findUpdateCameraFrame","showDebugVideo","filter","drawImage","_closeCamera","onCloseCamera","requestAnimationFrame","timerIcon","flashIcon","gridIcon","captureRatioIcon","filterIcon","playsInline","ref","Component","loadingText","dispatch","img","_addCanvasData","overflowX","BottomBar1","Height","BottomBar2","onAddImageChange","imageInput","target","files","file","fr","FileReader","onload","event","result","Image","readAsDataURL","imgUpload","fileInput","accept","onchange","bottomBar","upload_button","delete_button","PortraitMasterCaptureImageControlBar","itemCount","onClickUploadImage","onClickDeleteImage","uploadImageButton","deleteImageButton","select_text","overflowY","_items","useState","setItemCount","onUpdateImageList","getSelectState","onToggleImage","selectState","deleteState","splice","push","selectImage","imgElement","checkElement","selectText","imgList","divElement","overlayElement","getIndexFromId","indexText","substring","parseInt","error","deleteIndexList","img_element","remove","sort","b","DeleteImageDataFromDirectory","childElementCount","multi_select_text","onSelectImage","idx","infiniteLoop","selectedItem","showArrows","showStatus","showThumbs","onChange","map","image","flexGrow","React","value","setValue","BottomNavigation","newValue","showLabels","BottomNavigationAction","icon","getActiveScene","App","Boolean","location","hostname","match","initialState","combineReducers","action","Object","assign","slice","appElement","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.63881432.chunk.js","sourcesContent":["export const SET_SCENE = 'SET_SCENE';\r\nexport function set_scene(change_scene) {\r\n    return {\r\n        type: SET_SCENE,\r\n        _change_scene: change_scene\r\n    };\r\n}\r\n\r\nexport const SETSELECTIMGINDEX = 'SETSELECTIMGINDEX';\r\nexport function SetSelectImgIndex(index) {\r\n    return {\r\n        type: SETSELECTIMGINDEX,\r\n        _selectImgIndex: index\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Iframe from 'react-iframe'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        //background: '#00FF0088', \r\n    },\r\n    ContentsText: {\r\n        textAlign: 'left'\r\n    },\r\n    contents_site_link: {\r\n        position: 'absolute',\r\n        height: '100%',\r\n        width: '100%',\r\n        frameBorder: 0,\r\n      },\r\n}));\r\n\r\nexport const PortraitMasterContentsIntro = (props) => {\r\n    console.log('PortraitMasterContentsIntro component start');\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n              <Iframe url={process.env.PUBLIC_URL + '/contents/index.html'} className={classes.contents_site_link} frameBorder=\"0\"/>;\r\n            {/* <center><h2><b>스마트폰 인물사진 마스터</b></h2>\r\n                <img src={process.env.PUBLIC_URL + '/img/camera-master-intro.jpg'} />;\r\n                <h5>오드리 헵번 by 유수프 카쉬, 1956</h5>\r\n            </center>\r\n            <div className={classes.ContentsText}>\r\n                <h4>\r\n                    스마트폰으로 <b>인물사진 마스터</b>에 도전합니다.\r\n                </h4>\r\n                <h5>\r\n                    늘 우리와 함께 하는 스마트폰. 작고 가벼운 스마트폰이지만, 스마트폰 카메라의 성능은 결고 가볍지 않습니다. 무려 <b>촬영, 편집, 보정을 한 큐에 끝낼 수 있는</b> 강력한 도구죠.\r\n<br /><br />\r\n모델의 마음까지 훔치는 스마트폰 인물사진 노우-하우를 <b>마스터와 함께</b> 배워 나갑니다. 퀘스트 특성에 맞는 맞춤 카메라를 제공해 드리니, 한 발짝씩 쉽게 따라오실 수 있을 거예요.\r\n</h5>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _current_scene: state.scene._current_scene\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMasterContentsIntro);","import React, { useEffect }  from 'react';\r\nimport './PortraitMaster.css'\r\nimport { connect } from 'react-redux';\r\nimport { set_scene, SetSelectImgIndex } from '../actions/scene';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {RemoveScrollBar, fullWidthClassName} from 'react-remove-scroll-bar';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\"\r\n        //background: '#FFFF0088', \r\n    },\r\n    left_title: {\r\n        position: \"absolute\",\r\n        left: \"0\",\r\n    },\r\n    right_title: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"10px\",\r\n        height: \"3%\",\r\n    },\r\n    ImgList: {\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n    },\r\n}));\r\n\r\nexport const PortraitMasterSimpleCaptureList = ({set_scene, SetSelectImgIndex, _canvasData}) => {\r\n    console.log('PortraitMasterSimpleCaptureList component start');\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        onUploadImageList();\r\n      }, []);\r\n\r\n    const onUploadImageList = () => {\r\n        console.log('onUploadImageList');\r\n        if (undefined != window.HybridApp) {\r\n            var imgCount = window.HybridApp.GetDirectoryFileCount();\r\n            for (var i = 0; i < imgCount; i++) {\r\n                var imgText = window.HybridApp.GetImageDataFromDirectory(i);\r\n                AddImage(i, imgText);\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < _canvasData.length; i++) {\r\n                AddImage(i, _canvasData[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    const AddImage = (index, imgsrc) => {\r\n        var element = document.createElement('img');\r\n        element.style.width = \"90%\";\r\n        element.style.height = \"auto\";\r\n        element.style.margin = \"5px\";\r\n        element.src = imgsrc;\r\n        element.onclick = function() {\r\n            console.log(\"img click index:\"+ index);\r\n            SetSelectImgIndex(index);\r\n            set_scene('FullScreenCaptureList');\r\n        };\r\n        var imgList = document.getElementById('imagelist');\r\n        imgList.appendChild(element);\r\n    }\r\n\r\n    const onClickGridCaptureList = () => {\r\n        console.log(\"onClickGridCaptureList\");\r\n        set_scene('GridCaptureList');\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.left_title}>내 사진</div>\r\n            <img className={classes.right_title} onClick={onClickGridCaptureList} src={process.env.PUBLIC_URL + '/img/image-modify-icon.png'} />\r\n            <div>\r\n                <br/>\r\n                <div id='imagelist' className=\"SimpleCaptureImageList\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _current_scene: state.scene._current_scene,\r\n    _canvasData: state.camera._canvasData\r\n});\r\nconst mapDispatchToProps = { set_scene, SetSelectImgIndex };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMasterSimpleCaptureList);","import React from 'react';\r\nimport './PortraitMaster.css';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport PortraitMasterContentsIntro from './PortraitMasterContentsIntro'\r\nimport PortraitMasterSimpleCaptureList from './PortraitMasterSimpleCaptureList'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  ContentsBody: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    left: \"0px\",\r\n    top: \"0px\",\r\n    bottom: \"50px\",\r\n    display: \"grid\",\r\n    gridTemplateRows: \"50% 50%\"\r\n  },\r\n  BottomBarBack: {\r\n    position: \"fixed\",\r\n    backgroundColor: '#FFFFFF88',\r\n    width: '100%',\r\n    height: '11%',\r\n    top: '89%',\r\n    left: '0%'\r\n  },\r\n  BottomBarButtonBase: {\r\n    position: \"fixed\",\r\n    height: \"8%\",\r\n    top: \"90%\",\r\n    background: 'linear-gradient(90deg, #cc6699 30%, #6666ff 80%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\r\n\r\n  },\r\n  BottomBarButtonLeft: {\r\n    width: \"44%\",\r\n    left: \"3%\",\r\n  },\r\n  BottomBarButtonRight: {\r\n    width: \"44%\",\r\n    left: \"53%\",\r\n  },\r\n  BottomBarButton: {\r\n    width: \"94%\",\r\n    left: \"3%\",\r\n  },\r\n  divLine: {\r\n    border: \"1px solid\",\r\n    color: \"#DDDDDD\",\r\n    width: \"95%\"\r\n  }\r\n}));\r\n\r\nexport const PortraitMaster = ({ _current_scene, set_scene, _canvasData }) => {\r\n  console.log('PortraitMaster component start');\r\n  const classes = useStyles();\r\n  const BottomBarButtonRight = clsx(classes.BottomBarButtonBase, classes.BottomBarButtonRight);\r\n  const BottomBarButtonLeft = clsx(classes.BottomBarButtonBase, classes.BottomBarButtonLeft);\r\n  const BottomBarButton = clsx(classes.BottomBarButtonBase, classes.BottomBarButton);\r\n\r\n  const onCameraCapture = () => {\r\n    set_scene(\"CameraCapture\");\r\n    console.log(\"onCameraCapture\");\r\n  }\r\n\r\n  const onCameraCaptureSubmit = () => {\r\n    set_scene(\"GridCaptureList\");\r\n    console.log(\"onCameraCaptureSubmit\");\r\n  }\r\n\r\n  const GetImageCount = () => {\r\n    if (undefined != window.HybridApp) {\r\n      return window.HybridApp.GetDirectoryFileCount();\r\n    }\r\n    else {\r\n      return _canvasData.length;\r\n    }\r\n  }\r\n\r\n  let simpleImageList;\r\n  let bottomButton;\r\n  var imageCount = GetImageCount();\r\n  if (imageCount == 0) {\r\n    bottomButton = <Button onClick={onCameraCapture} className={BottomBarButton} variant=\"contained\" color=\"secondary\">사진 찍기</Button>;\r\n  } else {\r\n    simpleImageList = <div><PortraitMasterSimpleCaptureList /> <hr className={classes.divLine} /></div>;\r\n    bottomButton = <div>< Button onClick={onCameraCapture} className={BottomBarButtonLeft} variant=\"contained\" color=\"secondary\" > 사진 찍기</Button >\r\n    <Button onClick={onCameraCaptureSubmit} className={BottomBarButtonRight} variant=\"contained\" color=\"secondary\">제출하기</Button></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"MainSceneRoot\">\r\n        {simpleImageList}\r\n        <PortraitMasterContentsIntro />\r\n      <div className={classes.BottomBarBack}>\r\n        {bottomButton}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _current_scene: state.scene._current_scene,\r\n  _canvasData: state.camera._canvasData\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMaster);","export const CLOSECAMERA = 'CLOSECAMERA';\r\nexport function CloseCamera(closeCamera) {\r\n    return {\r\n        type: CLOSECAMERA,\r\n        _closeCamera: closeCamera\r\n    };\r\n}\r\n\r\nexport const ADDCANVASDATA = 'ADDCANVASDATA';\r\nexport function AddCanvasData(data) {\r\n    return {\r\n        type: ADDCANVASDATA,\r\n        _addCanvasData: data\r\n    };\r\n}\r\n\r\nexport const DELETECANVASDATA = 'DELETECANVASDATA';\r\nexport function DeleteCanvasData(index) {\r\n    return {\r\n        type: DELETECANVASDATA,\r\n        _deleteCanvasDataIndex: index\r\n    };\r\n}\r\n","import React, { Component } from 'react'\r\nimport './../PortraitMaster.css';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { set_scene } from '../../actions/scene'\r\nimport { AddCanvasData } from '../../actions/camera'\r\n\r\nvar _videoUserCameraFlag = true;\r\n\r\nconst btnTopBatStyle = {\r\n    //backgroundColor: '#FF0000',\r\n    position: \"fixed\",\r\n    left: \"0px\",\r\n    top: \"0\",\r\n    width: \"100%\",\r\n    height: \"11.6%\",\r\n}\r\n\r\nconst btnBottomBarStyle = {\r\n    //backgroundColor: '#FF0000',\r\n    position: \"fixed\",\r\n    left: \"0px\",\r\n    top: \"88.4%\",\r\n    height: \"11.6%\",\r\n    width: \"100%\",\r\n}\r\n\r\nconst rootStyle = {\r\n    position: \"fixed\",\r\n    left: \"0%\",\r\n    width: \"100%\",\r\n    top: \"0%\",\r\n    height: \"100%\",\r\n    zIndex: '-3',\r\n    backgroundColor : 'black'\r\n}\r\n\r\nconst videoStyle = {\r\n    position: \"fixed\",\r\n    left: \"0px\",\r\n    width: \"100%\",\r\n    top: \"50%\",\r\n    height: \"auto\",\r\n    transform: 'translate(0%, -50%)',\r\n    zIndex: '-2'\r\n}\r\n\r\nconst canvasStyle = {\r\n    position: \"fixed\",\r\n    left: \"0px\",\r\n    width: \"100%\",\r\n    top: \"50%\",\r\n    height: \"auto\",\r\n    transform: 'translate(0%, -50%)',\r\n    zIndex: '-1'\r\n}\r\n\r\nconst btnLeftBottomStyle = {\r\n    position: \"fixed\",\r\n    height: \"5.1%\",\r\n    left: \"10%\",\r\n    top: \"91.5%\"\r\n}\r\n\r\nconst btnCenterBottomStyle = {\r\n    position: \"fixed\",\r\n    height: \"9.1%\",\r\n    left: \"40%\",\r\n    top: \"89.5%\"\r\n}\r\n\r\nconst btnRightBottomStyle = {\r\n    position: \"fixed\", \r\n    height: \"5.1%\",\r\n    left: \"75%\",\r\n    top: \"91.5%\"\r\n}\r\n\r\nconst btnTopStyle1 = {\r\n    position: \"fixed\",\r\n    height: \"5.1%\",\r\n    left: \"5%\",\r\n    top: \"3.5%\"\r\n}\r\n\r\nconst btnTopStyle2 = {\r\n    position: \"fixed\",\r\n    height: \"5.1%\",\r\n    left: \"25%\",\r\n    top: \"3.5%\"\r\n}\r\n\r\nconst btnTopStyle3 = {\r\n    position: \"fixed\",\r\n    height: \"5.1%\",\r\n    left: \"45%\",\r\n    top: \"3.5%\"\r\n}\r\n\r\nconst btnTopStyle4 = {\r\n    position: \"fixed\",\r\n    height: \"2.1%\",\r\n    left: \"65%\",\r\n    top: \"5%\"\r\n}\r\n\r\nconst btnTopStyle5 = {\r\n    position: \"fixed\",\r\n    height: \"5.1%\",\r\n    left: \"85%\",\r\n    top: \"3.5%\"\r\n}\r\n\r\n// const flashEffect = {\r\n//     position: \"fixed\",\r\n//     height: \"100%\",\r\n//     width: \"100%\",\r\n//     left: \"0%\",\r\n//     top: \"0%\",\r\n//     backgroundColor : \"white\"\r\n// }\r\n\r\nclass CameraCapture extends Component {\r\n\r\n    static defaultProps = {\r\n        showVideo: false,\r\n        showDebugVideo: true,\r\n        loadingText: 'Loading...please be patient...'\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props, CameraCapture.defaultProps)\r\n        //this.resize = this.resize.bind(this);\r\n        this.stopCamera = this.stopCamera.bind(this);\r\n\r\n        this.state = {\r\n            cameraCaptureTimerType: 0,\r\n            cameraFlashType: 0,\r\n            cameraFilterType: 0,\r\n            captureRatioType: 0,\r\n            gridView: false,\r\n            flashEffect: false\r\n        };\r\n    }\r\n\r\n    getCanvas = elem => {\r\n        this.canvas = elem\r\n    }\r\n\r\n    getCanvasOverlay = elem => {\r\n        this.canvasOverlay = elem\r\n    }\r\n\r\n    getVideo = elem => {\r\n        this.video = elem;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            await this.setupCamera();\r\n        } catch (error) {\r\n            throw new Error(\r\n                'This browser does not support video capture, or this device does not have a camera'\r\n            )\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setFlashLight(false);\r\n        this.stopCamera();\r\n    }\r\n\r\n    async setupCamera() {\r\n        if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\r\n            throw new Error(\r\n                'Browser API navigator.mediaDevices.getUserMedia not available'\r\n            )\r\n        }\r\n        navigator.mediaDevices.enumerateDevices()\r\n            .then(function (devices) {\r\n                devices.forEach(function (device) {\r\n                    if (device.kind === 'videoinput') {\r\n                        //_videoCamneraList.push(device.deviceId);\r\n                    }\r\n                    console.log(device.kind + \": \" + device.label + \", id = \" + device.deviceId);\r\n                });\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err.name + \": \" + err.message);\r\n            });\r\n\r\n        //this.resize();\r\n        this.playCamera();\r\n        this.updateCamera();\r\n    }\r\n\r\n    async playCamera() {\r\n        if (window.stream) {\r\n            window.stream.getTracks().forEach(track => {\r\n                track.stop();\r\n            });\r\n        }\r\n\r\n        const video = this.video;\r\n        //video.style.transform = 'rotatey(180deg)';\r\n\r\n        // const videoSource = _videoCamneraList[_videoSelectIndex];\r\n        // console.log('videoSource:' + videoSource);\r\n\r\n        var screenWidth = 1080;//1280;//1920;//video.width;//window.innerWidth;\r\n        var screenHeight = 1080;//720;//1080;//video.height;//window.innerHeight;\r\n\r\n        var facingModeText = 'user';\r\n        if (_videoUserCameraFlag == false) {\r\n            facingModeText = 'environment';\r\n        }\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n          audio: false,\r\n          video: {\r\n            //deviceId: videoSource ? { exact: videoSource } : undefined,\r\n            facingMode: facingModeText,\r\n            frameRate: 60,\r\n            width: {exact: screenWidth},\r\n            height: {exact: screenHeight},\r\n            aspectRatio: {\r\n                exact: screenWidth / screenHeight\r\n            }\r\n          }\r\n        })\r\n\r\n        window.stream = stream;\r\n        video.srcObject = stream;\r\n        video.play();\r\n    }\r\n\r\n    stopCamera() {\r\n        console.log('stopCamera call');\r\n        const video = this.video;\r\n        //console.log(video);\r\n        if (undefined == video) {\r\n            return;\r\n        }\r\n        video.pause();\r\n        video.src = \"\";\r\n        if (undefined != video.srcObject) {\r\n            video.srcObject.getTracks()[0].stop();\r\n            video.srcObject = undefined;\r\n        }\r\n        console.log(\"video off\");\r\n    }\r\n\r\n    setFlashLight(state) {\r\n        console.log('setFlashLight:'+state);\r\n        if (undefined == window.stream) {\r\n            return;\r\n        }\r\n        const track = window.stream.getVideoTracks()[0];\r\n        console.log(track);\r\n        if (undefined == track) {\r\n            return;\r\n        }\r\n\r\n        var capabilities = track.getCapabilities();\r\n        console.log(capabilities);\r\n        if (undefined == capabilities) {\r\n            return;\r\n        }\r\n        console.log(capabilities.torch);\r\n        if (capabilities.torch) {\r\n            track.applyConstraints({\r\n                advanced: [{ torch: state }]\r\n            }).catch(e => console.log(e));\r\n        }\r\n    }\r\n\r\n    updateCamera() {\r\n        const canvas = this.canvas;\r\n        if (undefined == canvas) {\r\n            return;\r\n        }\r\n        const canvasContext = canvas.getContext('2d')\r\n        if (undefined == canvasContext) {\r\n            return;\r\n        }\r\n        const video = this.video;\r\n        if (undefined == video) {\r\n            return;\r\n        }\r\n        //console.log('showVideo:' + this.props.showVideo);\r\n        if (false == this.props.showVideo) {\r\n            video.style.display = \"none\";\r\n        }\r\n        else {\r\n            video.style.display = \"block\";\r\n        }\r\n        this.updateCameraFrame(canvasContext)\r\n    }\r\n\r\n    updateCameraFrame(canvasContext) {\r\n        const video = this.video;\r\n        const findUpdateCameraFrame = async () => {\r\n            const canvas = this.canvas;\r\n            if (true == this.props.showDebugVideo && undefined != canvas) {\r\n\r\n                if (video.videoWidth != canvas.width || video.videoHeight != canvas.height) {\r\n                    canvas.width = video.videoWidth;\r\n                    canvas.height = video.videoHeight;\r\n                    canvasContext.width = video.videoWidth;\r\n                    canvasContext.height = video.videoHeight;\r\n                }\r\n                //console.log('resolution width:' + video.videoWidth + \", canvas width:\" + canvas.width);\r\n                //console.log('video pos x:' + canvas.style.left + \", y:\" + canvas.style.top);\r\n                //console.log(video);\r\n                //console.log('video:' + video.left + ',' + video.top + ',' + video.width + ',' + video.height);\r\n                canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n                //CanvasFPS_Update();\r\n                canvasContext.save();\r\n\r\n                switch (this.state.cameraFilterType) {\r\n                    case 0: {\r\n                        canvasContext.filter = 'none';\r\n                    }break;\r\n                    case 1: {\r\n                        canvasContext.filter = 'grayscale(100%)';\r\n                    }break;\r\n                    case 2: {\r\n                        canvasContext.filter = 'brightness(100%)';\r\n                    }break;\r\n                    case 3: {\r\n                        canvasContext.filter = 'contrast(100%)';\r\n                    }break;\r\n                    case 4: {\r\n                        canvasContext.filter = 'sepia(100%)';\r\n                    }break;\r\n                    case 5: {\r\n                        canvasContext.filter = 'invert(100%)';\r\n                    }break;\r\n                    case 6: {\r\n                        canvasContext.filter = 'saturate(100%)';\r\n                    }break;\r\n                    case 7: {\r\n                        canvasContext.filter = 'blur(4px)';\r\n                    }break;\r\n                }\r\n                //canvasContext.scale(-1, 1)\r\n                //canvasContext.translate(-video.width, 0)\r\n                \r\n                canvasContext.drawImage(video, 0, 0);//, video.videoWidth, video.videoHeight)\r\n                canvasContext.restore();\r\n\r\n                // var fontSize = canvas.width/20;\r\n                // canvasContext.fillStyle = 'white';\r\n                // canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n                // canvasContext.shadowBlur = 2;\r\n                // canvasContext.shadowOffsetX = 3;\r\n                // canvasContext.shadowOffsetY = 3;\r\n                // canvasContext.font = fontSize + \"px Arial\";\r\n                // canvasContext.textAlign = \"center\";\r\n                // canvasContext.fillText('목표', canvas.width - fontSize*4, fontSize);\r\n                //CanvasFPS_Render(canvasContext);\r\n            }\r\n\r\n            if ('start' == this.props._closeCamera) {\r\n                this.stopCamera();\r\n                this.props.onCloseCamera('complete');\r\n                return;\r\n            }\r\n            requestAnimationFrame(findUpdateCameraFrame)\r\n        }\r\n        findUpdateCameraFrame()\r\n    }\r\n\r\n    updateCameraGrid = (viewState) => {\r\n        const video = this.video;\r\n        if (undefined == video) {\r\n            return;\r\n        }\r\n\r\n        const canvas = this.canvasOverlay;\r\n        if (undefined == canvas) {\r\n            return;\r\n        }\r\n        const canvasContext = canvas.getContext('2d')\r\n        if (undefined == canvasContext) {\r\n            return;\r\n        }\r\n    \r\n        if (video.videoWidth != canvas.width || video.videoHeight != canvas.height) {\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n            canvasContext.width = video.videoWidth;\r\n            canvasContext.height = video.videoHeight;\r\n        }\r\n\r\n        canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        if (true == viewState) {\r\n            canvasContext.save();\r\n            canvasContext.strokeStyle = 'rgb(255,0,0)';\r\n            canvasContext.lineWidth = 3;//Math.floor(Math.random() * Math.floor(3))+1; \r\n            canvasContext.globalAlpha = 0.1;\r\n\r\n            for (var x = 0; x <= canvas.width; x += canvas.width/3) {\r\n                canvasContext.moveTo(x, 0);\r\n                canvasContext.lineTo(x, canvas.height);\r\n            }\r\n            for (var y = 0; y <= canvas.height; y += canvas.height/3) {\r\n                canvasContext.moveTo(0, y);\r\n                canvasContext.lineTo(canvas.width, y);\r\n            }\r\n            canvasContext.stroke();\r\n            canvasContext.restore();\r\n        }\r\n    }\r\n\r\n    onNextCamera = () => {\r\n        // _videoSelectIndex++;\r\n        // if (_videoCamneraList.length <= _videoSelectIndex)\r\n        //   _videoSelectIndex = 0;\r\n        // console.log('camera index : ' + _videoSelectIndex);\r\n\r\n        _videoUserCameraFlag = !_videoUserCameraFlag;\r\n        console.log('user camera flag : ' + _videoUserCameraFlag);\r\n        this.playCamera();\r\n        if (true == _videoUserCameraFlag) {\r\n            this.onFlash();\r\n        }\r\n        else {\r\n            this.setFlashLight((this.state.cameraFlashType == 1) ? true : false);\r\n        }\r\n    }\r\n\r\n    onTimerSelect = () => {\r\n        var currentValue = this.state.cameraCaptureTimerType;\r\n        currentValue++;\r\n        if (currentValue > 3) {\r\n            currentValue = 0;\r\n        }\r\n        this.setState(() => {\r\n            return {cameraCaptureTimerType: currentValue};\r\n          });\r\n        console.log(\"timer:\" + currentValue);\r\n    }\r\n\r\n    onCaptureAnimation = () => {\r\n        console.log('onCaptureAnimation call');\r\n        if (true == this.state.flashEffect) {\r\n            console.log('onCaptureAnimation call fail!');\r\n            return;\r\n        }\r\n        this.setState({\r\n            flashEffect: true\r\n          });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                flashEffect: false\r\n              });\r\n        }, 1000);\r\n    }\r\n\r\n    onCapture = () => {\r\n        const canvas = this.canvas;\r\n        if (undefined == canvas) {\r\n            return;\r\n        }\r\n\r\n        var delayDuration = 0;\r\n        switch (this.state.cameraCaptureTimerType) {\r\n            case 0:\r\n                delayDuration = 0;\r\n                break;\r\n            case 1:\r\n                delayDuration = 3000;\r\n                break;\r\n            case 2:\r\n                delayDuration = 5000;\r\n                break;\r\n            case 3:\r\n                delayDuration = 10000;\r\n                break;\r\n        }\r\n        var d = new Date();\r\n        var dateText = d.toISOString();\r\n        if (undefined == window.HybridApp) {\r\n            var saveImage = canvas.toDataURL(\"image/jpeg\", 1.0);\r\n            this.props.onAddCanvasData(saveImage);\r\n            this.onCaptureAnimation();\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                var saveImage = canvas.toDataURL(\"image/jpeg\", 1.0);\r\n                if (undefined != window.HybridApp) {\r\n                    window.HybridApp.SaveAlbumJpgImage(saveImage, dateText + \".jpg\");\r\n                } else {\r\n                    var a = document.createElement(\"a\");\r\n                    document.body.appendChild(a);\r\n                    a.style = \"display: none\";\r\n                    a.href = saveImage;\r\n                    a.download = dateText + \".jpg\";\r\n                    a.click();\r\n                    window.URL.revokeObjectURL(saveImage);\r\n                }\r\n                this.onCaptureAnimation();\r\n                console.log(\"onCapture\");\r\n            }, delayDuration);\r\n        }\r\n    }\r\n\r\n    onBack = () => {\r\n        console.log(\"onBack\");\r\n        this.props.onSetScene(\"PortraitMaster\");\r\n    }\r\n\r\n    onFlash = () => {\r\n        var currentValue = this.state.cameraFlashType;\r\n        currentValue++;\r\n        if (currentValue > 1) {\r\n            currentValue = 0;\r\n        }\r\n        // 유저 카메라 모드에소는 라이트를 쓰지 않게함\r\n        if (true == _videoUserCameraFlag) {\r\n            currentValue = 0;\r\n        }\r\n        this.setState(() => {\r\n            return {cameraFlashType: currentValue};\r\n          });\r\n\r\n        this.setFlashLight((currentValue == 1) ? true : false);\r\n        console.log(\"flash:\" + currentValue);\r\n    }\r\n    \r\n    onToggleGrid = () => {\r\n        var viewState = !this.state.gridView;\r\n        this.setState(() => {\r\n            return {gridView: viewState};\r\n          });\r\n        console.log(\"grid view:\" + viewState);\r\n        this.updateCameraGrid(viewState);\r\n    }\r\n\r\n    onCaptureRatio = () => {\r\n        var currentValue = this.state.captureRatioType;\r\n        currentValue++;\r\n        if (currentValue > 1) {\r\n            currentValue = 0;\r\n        }\r\n        this.setState(() => {\r\n            return {captureRatioType: currentValue};\r\n          });\r\n        console.log(\"capture Ratio Type:\" + currentValue);\r\n    }\r\n\r\n\r\n    onMovieFilter = () => {\r\n        var currentValue = this.state.cameraFilterType;\r\n        currentValue++;\r\n        if (currentValue > 7) {\r\n            currentValue = 0;\r\n        }\r\n        this.setState(() => {\r\n            return {cameraFilterType: currentValue};\r\n          });\r\n        console.log(\"camera filter:\" + currentValue);\r\n    }\r\n    \r\n    render() {\r\n        let timerIcon;\r\n        switch (this.state.cameraCaptureTimerType) {\r\n            case 0: {\r\n                timerIcon = <img style={btnLeftBottomStyle} onClick={this.onTimerSelect.bind(this)} src={process.env.PUBLIC_URL + '/img/TimerOff.png'} />;\r\n            } break;\r\n            case 1: {\r\n                timerIcon = <img style={btnLeftBottomStyle} onClick={this.onTimerSelect.bind(this)} src={process.env.PUBLIC_URL + '/img/Timer3.png'} />;\r\n            } break;\r\n            case 2: {\r\n                timerIcon = <img style={btnLeftBottomStyle} onClick={this.onTimerSelect.bind(this)} src={process.env.PUBLIC_URL + '/img/Timer5.png'} />;\r\n                \r\n            } break;\r\n            case 3: {\r\n                timerIcon = <img style={btnLeftBottomStyle} onClick={this.onTimerSelect.bind(this)} src={process.env.PUBLIC_URL + '/img/Timer10.png'} />;\r\n            } break;\r\n        }\r\n\r\n        let flashIcon;\r\n        switch (this.state.cameraFlashType) {\r\n            case 0: {\r\n                flashIcon = <img style={btnTopStyle2} onClick={this.onFlash.bind(this)} src={process.env.PUBLIC_URL + '/img/FlashOff.png'} />\r\n            } break;\r\n            case 1: {\r\n                flashIcon = <img style={btnTopStyle2} onClick={this.onFlash.bind(this)} src={process.env.PUBLIC_URL + '/img/FlashOn.png'} />\r\n            } break;\r\n        }\r\n        \r\n        let gridIcon;\r\n        if (false == this.state.gridView) {\r\n            gridIcon = <img style={btnTopStyle3} onClick={this.onToggleGrid.bind(this)} src={process.env.PUBLIC_URL + '/img/GridOff.png'} />\r\n        } else {\r\n            gridIcon = <img style={btnTopStyle3} onClick={this.onToggleGrid.bind(this)} src={process.env.PUBLIC_URL + '/img/GridOn.png'} />\r\n        }\r\n\r\n        let captureRatioIcon;\r\n        if (0 == this.state.captureRatioType) {\r\n            captureRatioIcon = <img style={btnTopStyle4} onClick={this.onCaptureRatio.bind(this)} src={process.env.PUBLIC_URL + '/img/CaptureRatio4_3.png'} />\r\n        } else {\r\n            captureRatioIcon = <img style={btnTopStyle4} onClick={this.onCaptureRatio.bind(this)} src={process.env.PUBLIC_URL + '/img/CaptureRatio16_9.png'} />\r\n        }\r\n\r\n        let filterIcon;\r\n        if (0 == this.state.cameraFilterType) {\r\n            filterIcon = <img style={btnTopStyle5} onClick={this.onMovieFilter.bind(this)} src={process.env.PUBLIC_URL + '/img/FilterOff.png'} />\r\n        } else {\r\n            filterIcon = <img style={btnTopStyle5} onClick={this.onMovieFilter.bind(this)} src={process.env.PUBLIC_URL + '/img/FilterOn.png'} />\r\n        }\r\n\r\n        return (\r\n            <div style={rootStyle}>\r\n                {/* <meta http-equiv=\"Content-Security-Policy\" content=\"default-src * gap:; script-src * 'unsafe-inline' 'unsafe-eval'; connect-src *; img-src * data: blob: android-webview-video-poster:; style-src * 'unsafe-inline';\" /> */}\r\n                <video id='videoCamera' style={videoStyle} src=\"\" playsInline ref={this.getVideo} />\r\n                <canvas style={canvasStyle} ref={this.getCanvas} />\r\n                <canvas id='canvasOverlay' style={canvasStyle} ref={this.getCanvasOverlay} />\r\n\r\n                <div style={btnTopBatStyle}>\r\n                    <img style={btnTopStyle1} onClick={this.onBack.bind(this)} src={process.env.PUBLIC_URL + '/img/CameraBack.png'} />\r\n                    {flashIcon}\r\n                    {gridIcon}\r\n                    {captureRatioIcon}\r\n                    {filterIcon}\r\n                    {/* <IconButton onClick={this.onBack.bind(this)}><ArrowBackIosOutlinedIcon color=\"primary\" fontSize=\"large\" /></IconButton>\r\n                    <IconButton onClick={this.onFlash.bind(this)}>{flashIcon}</IconButton>\r\n                    <IconButton onClick={this.onToggleGrid.bind(this)}><GridOnOutlinedIcon color=\"primary\" fontSize=\"large\" /></IconButton>\r\n                    <IconButton onClick={this.onMovieFilter.bind(this)}><MovieFilterOutlinedIcon color=\"primary\" fontSize=\"large\" /></IconButton> */}\r\n                </div>\r\n\r\n                <div style={btnBottomBarStyle}>\r\n                    {timerIcon}\r\n                    <img style={btnCenterBottomStyle} onClick={this.onCapture.bind(this)} src={process.env.PUBLIC_URL + '/img/shutter_normal.png'} />\r\n                    <img style={btnRightBottomStyle} onClick={this.onNextCamera.bind(this)} src={process.env.PUBLIC_URL + '/img/FlipCamera.png'} />\r\n                </div>\r\n\r\n                <div className={\"CameraCaptureEffect \" + (this.state.flashEffect ? 'CameraCaptureAnimation' : '')}>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        _current_scene: state.scene._current_scene,\r\n        _closeCamera: state.camera._closeCamera\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetScene: (state) => dispatch(set_scene(state)),\r\n        onAddCanvasData: (img) => dispatch(AddCanvasData(img)),\r\n    }\r\n}\r\n\r\nCameraCapture = connect(mapStateToProps, mapDispatchToProps)(CameraCapture);\r\n\r\nexport default CameraCapture;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  ContentsBody: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    left: \"0px\",\r\n    top: \"0px\",\r\n    bottom: \"50px\",\r\n  },\r\n  ImgList: {\r\n    display: \"flex\",\r\n    overflowX: \"auto\",\r\n  },\r\n  BottomBar1: {\r\n    position: \"fixed\",\r\n    width: \"40%\",\r\n    Height: \"50px\",\r\n    left: \"5%\",\r\n    bottom: \"0px\",\r\n  },\r\n  BottomBar2: {\r\n    position: \"fixed\",\r\n    width: \"40%\",\r\n    left: \"55%\",\r\n    Height: \"50px\",\r\n    bottom: \"0px\",\r\n  }\r\n}));\r\n\r\n\r\nexport const CameraCaptureSelect = ({ _current_scene, set_scene }) => {\r\n  console.log('Index_scene component start');\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    onUploadImageList();\r\n  });\r\n\r\n  const imgUpload = (file) => {\r\n    console.log(\"imgUpload:\");\r\n    console.log(file);\r\n    var fr = new FileReader();\r\n    fr.onload = function (event) {\r\n      var src = event.target.result;\r\n      var img = new Image();\r\n      img.onload = function () {\r\n        AddImage(fr.result);\r\n      };\r\n      img.src = src;\r\n    };\r\n    fr.readAsDataURL(file);\r\n  }\r\n\r\n  const onAddImageChange = (imageInput) => {\r\n    console.log(\"onAddImageChange\");\r\n    if (imageInput.target.files[0]) {\r\n      imgUpload(imageInput.target.files[0]);\r\n    }\r\n  }\r\n\r\n  const onAddImageSelect = () => {\r\n    console.log(\"onAddImageSelect\");\r\n    var fileInput = document.createElement('input');\r\n    fileInput.type = \"file\";\r\n    fileInput.accept = \"image/*\";\r\n    fileInput.style.display = 'none';\r\n    fileInput.onchange = onAddImageChange;\r\n    document.body.appendChild(fileInput);\r\n    fileInput.click();\r\n  }\r\n\r\n  const onUploadImageList = () => {\r\n    console.log('onUploadImageList');\r\n    if (undefined != window.HybridApp) {\r\n      var imgCount = window.HybridApp.GetDirectoryFileCount();\r\n      for (var i = 0; i < imgCount; i++) {\r\n        var imgText = window.HybridApp.GetImageDataFromDirectory(i);\r\n        AddImage(imgText);\r\n      }\r\n    }\r\n  }\r\n\r\n  const onUploadData = () => {\r\n    console.log('onUploadData');\r\n  }\r\n\r\n  const AddImage = (imgsrc) => {\r\n    var element = document.createElement('img');\r\n    element.style.display = \"block\";\r\n    element.style.width = \"65%\";\r\n    element.style.height = \"auto\";\r\n    element.style.margin = \"5px\";\r\n    element.src = imgsrc;\r\n    var imgList = document.getElementById('imagelist');\r\n    imgList.appendChild(element);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div id='imagelist' className={classes.ImgList}>\r\n      </div>\r\n      {/* <input type='file' accept='image/*' onChange={onAddImageChange}/> */}\r\n      <Button onClick={onAddImageSelect} className={classes.BottomBar1} variant=\"contained\" color=\"secondary\">\r\n        이미지 선택\r\n      </Button>\r\n      <Button onClick={onUploadData} className={classes.BottomBar2} variant=\"contained\" color=\"secondary\">\r\n        제출하기\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _current_scene: state.scene._current_scene\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CameraCaptureSelect);","import React, { useEffect, useState }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\nimport { DeleteCanvasData } from '../actions/camera'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n    bottomBar: {\r\n        position: \"fixed\",\r\n        height: '50px',\r\n        bottom: \"0px\",\r\n        width: \"100%\",\r\n        backgroundColor: '#000000AA',\r\n    },\r\n    upload_button: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        left: \"20px\",\r\n        height: \"30px\",\r\n    },\r\n    delete_button: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"20px\",\r\n        height: \"30px\",\r\n    },\r\n}));\r\n\r\nexport const PortraitMasterCaptureImageControlBar = ({set_scene, itemCount, onClickUploadImage, onClickDeleteImage, DeleteCanvasData}) => {\r\n    console.log('PortraitMasterCaptureImageControlBar component start');\r\n    const classes = useStyles();\r\n\r\n    let uploadImageButton;\r\n    let deleteImageButton;\r\n\r\n    if (itemCount != 0) {\r\n        uploadImageButton = <img className={classes.upload_button} onClick={onClickUploadImage} src={process.env.PUBLIC_URL + '/img/image-select-upload-enable-icon.png'} />;\r\n        deleteImageButton = <img className={classes.delete_button} onClick={onClickDeleteImage} src={process.env.PUBLIC_URL + '/img/image-select-delete-enable-icon.png'} />;\r\n    } else {\r\n        uploadImageButton = <img className={classes.upload_button} src={process.env.PUBLIC_URL + '/img/image-select-upload-disable-icon.png'} />;\r\n        deleteImageButton = <img className={classes.delete_button} src={process.env.PUBLIC_URL + '/img/image-select-delete-disable-icon.png'} />;\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.root}> \r\n            <div className={classes.bottomBar} >\r\n                {uploadImageButton}\r\n                {deleteImageButton}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _current_scene: state.scene._current_scene\r\n});\r\nconst mapDispatchToProps = { set_scene, DeleteCanvasData };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMasterCaptureImageControlBar);","import React, { useEffect, useState }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\nimport { DeleteCanvasData } from '../actions/camera'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport PortraitMasterCaptureImageControlBar from './PortraitMasterCaptureImageControlBar'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        background: '#000000', \r\n    },\r\n    select_text: {\r\n        color: 'white'\r\n    },\r\n    ImgList: {\r\n        overflowY: \"auto\",\r\n        background: '#000000', \r\n    },\r\n    bottomBar: {\r\n        position: \"fixed\",\r\n        height: '50px',\r\n        bottom: \"0px\",\r\n        width: \"100%\",\r\n        backgroundColor: '#000000AA',\r\n    },\r\n    upload_button: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        left: \"20px\",\r\n        height: \"30px\",\r\n    },\r\n    delete_button: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"20px\",\r\n        height: \"30px\",\r\n    },\r\n}));\r\n\r\nvar _items = [];\r\nexport const PortraitMasterGridCaptureImageList = ({_canvasData, set_scene, DeleteCanvasData}) => {\r\n    console.log('PortraitMasterGridCaptureImageList component start');\r\n    const classes = useStyles();\r\n    const [itemCount, setItemCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        onUpdateImageList();\r\n      }, []);\r\n\r\n    const onUpdateImageList = () => {\r\n        console.log('onUpdateImageList');\r\n        if (undefined != window.HybridApp) {\r\n            var imgCount = window.HybridApp.GetDirectoryFileCount();\r\n            for (var i = 0; i < imgCount; i++) {\r\n                var imgText = window.HybridApp.GetImageDataFromDirectory(i);\r\n                AddImage(i, imgText);\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < _canvasData.length; i++) {\r\n                AddImage(i, _canvasData[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectImage = (id) => {\r\n        console.log(\"selectImage:\" + id);\r\n        var deleteState = false;\r\n        for (var i = 0; i < _items.length; i++) {\r\n            if (_items[i] == id) {\r\n                _items.splice(i, 1); \r\n                deleteState = true;\r\n                break;\r\n            }\r\n        }\r\n        if (false == deleteState) {\r\n            _items.push(id);\r\n        }\r\n        setItemCount(_items.length);\r\n        return !deleteState;\r\n    }\r\n\r\n    const getSelectState = (id) => {\r\n        for (var i = 0; i < _items.length; i++) {\r\n            if (_items[i] == id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function onToggleImage(){\r\n        console.log(\"onToggleImage:\" + this.id);\r\n        var selectState = selectImage(this.id);\r\n        //console.log(\"onToggleImage:\");\r\n        var imgElement = document.getElementById(this.id);\r\n        if (undefined != imgElement) {\r\n            if (true == selectState) {\r\n                imgElement.style.filter = \"brightness(150%) grayscale(80%)\";\r\n            }\r\n            else {\r\n                imgElement.style.filter = \"\";\r\n            }\r\n        }\r\n\r\n        var checkElement = document.getElementById(this.id + 'Check');\r\n        if (undefined != checkElement) {\r\n            if (true == selectState) {\r\n                //console.log('checkElement block');\r\n                checkElement.style.display = \"block\";\r\n            }\r\n            else {\r\n                //console.log('checkElement none');\r\n                checkElement.style.display = \"none\";\r\n            }\r\n        }\r\n    }\r\n\r\n    const AddImage = (index, imgsrc) => {\r\n        var imgList = document.getElementById('imagelist');\r\n        if (undefined == imgList) {\r\n            return;\r\n        }\r\n\r\n        var divElement = document.createElement('div');\r\n        divElement.id = 'img' + index + 'Root';\r\n        divElement.style.position = \"relative\";\r\n        imgList.appendChild(divElement);\r\n\r\n        var imgElement = document.createElement('img');\r\n        imgElement.id = 'img' + index;\r\n        imgElement.style.position = \"relative\";\r\n        imgElement.style.width = \"100%\";\r\n        imgElement.style.height = \"auto\";\r\n        imgElement.onclick = onToggleImage;\r\n        imgElement.style.margin = \"5px\";\r\n        imgElement.src = imgsrc;\r\n        divElement.appendChild(imgElement);\r\n\r\n        var overlayElement = document.createElement('img');\r\n        overlayElement.id = 'img' + index + 'Check';\r\n        overlayElement.style.position = \"absolute\";\r\n        overlayElement.style.display = \"none\";\r\n        overlayElement.style.width = \"40px\";\r\n        overlayElement.style.height = \"auto\";\r\n        overlayElement.style.right = \"10px\";\r\n        overlayElement.style.bottom = \"10px\";\r\n        overlayElement.src = process.env.PUBLIC_URL + '/img/image-checked-icon.png';\r\n        divElement.appendChild(overlayElement);\r\n    }\r\n\r\n    const onClickUploadImage = () => {\r\n        console.log(\"onClickUploadImage call\");\r\n        _items = [];\r\n        set_scene('PortraitMaster');\r\n    }\r\n\r\n    const getIndexFromId = (id) => {\r\n        var removeText = 'img';\r\n        var indexText = id.substring(removeText.length);\r\n        try {\r\n            return parseInt(indexText);\r\n        } catch (error) {\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    const onClickDeleteImage = () => {\r\n        console.log(\"onClickDeleteImage call\");\r\n        var deleteIndexList = [];\r\n        for (var i = 0; i < _items.length; i++) {\r\n            var img_element = document.getElementById(_items[i] + 'Root');\r\n            if (undefined == img_element) {\r\n                console.log('select item delete error id:' + _items[i]);\r\n                break;\r\n            }\r\n            img_element.remove();\r\n            var selectState = getSelectState(_items[i]);\r\n            if (selectState == true) {\r\n                var index = getIndexFromId(_items[i]);\r\n                deleteIndexList.push(index);\r\n            }\r\n        }\r\n        _items = [];\r\n        setItemCount(0);\r\n\r\n        deleteIndexList.sort(function(a, b) {\r\n            return b - a;\r\n        });\r\n        \r\n        for (var i = 0; i < deleteIndexList.length; i++) {\r\n            console.log('select item DeleteCanvasData call index:' + deleteIndexList[i]);\r\n            if (undefined != window.HybridApp) {\r\n                window.HybridApp.DeleteImageDataFromDirectory(deleteIndexList[i]);\r\n            }\r\n            else {\r\n                DeleteCanvasData(deleteIndexList[i]);\r\n            }\r\n        }\r\n        var imgList = document.getElementById('imagelist');\r\n        if (undefined == imgList) {\r\n            return;\r\n        }\r\n        if (imgList.childElementCount == 0) {\r\n            set_scene('PortraitMaster');\r\n        }\r\n    }\r\n\r\n    let selectText;\r\n\r\n    if (itemCount != 0) {\r\n        selectText = <div className={classes.select_text}><center>{itemCount}개 선택됨</center></div>;\r\n    } else {\r\n        selectText = <div className={classes.select_text}><center>선택 되지 않음</center></div>;\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n            {selectText}\r\n            <div id=\"imagelist\" className={classes.ImgList} />\r\n            <PortraitMasterCaptureImageControlBar itemCount={itemCount} onClickUploadImage={onClickUploadImage} onClickDeleteImage={onClickDeleteImage} />\r\n        </div >\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _current_scene: state.scene._current_scene,\r\n    _canvasData: state.camera._canvasData\r\n});\r\nconst mapDispatchToProps = { set_scene, DeleteCanvasData };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMasterGridCaptureImageList);","import React, { useEffect, useState }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene, SetSelectImgIndex } from '../actions/scene';\r\nimport { DeleteCanvasData } from '../actions/camera'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { PortraitMasterCaptureImageControlBar } from './PortraitMasterCaptureImageControlBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        background: '#000000', \r\n    },\r\n    multi_select_text: {\r\n        color: 'white'\r\n    },\r\n    ImgList: {\r\n        overflowY: \"auto\",\r\n        background: '#000000', \r\n    },\r\n}));\r\n\r\nvar _items = [];\r\nexport const PortraitMasterFullScreenCaptureList = ({_canvasData, set_scene, SetSelectImgIndex, _selectImgIndex, DeleteCanvasData}) => {\r\n    console.log('PortraitMasterFullScreenCaptureList component start');\r\n    const classes = useStyles();\r\n    const [itemCount, setItemCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        onUpdateImageList();\r\n      });\r\n\r\n    const onUpdateImageList = () => {\r\n        _items = [];\r\n        console.log('onUpdateImageList');\r\n        if (undefined != window.HybridApp) {\r\n            var imgCount = window.HybridApp.GetDirectoryFileCount();\r\n            for (var i = 0; i < imgCount; i++) {\r\n                var imgText = window.HybridApp.GetImageDataFromDirectory(i);\r\n                AddImage(i, imgText);\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < _canvasData.length; i++) {\r\n                AddImage(i, _canvasData[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    const AddImage = (index, imgsrc) => {\r\n        _items.push(imgsrc);\r\n        setItemCount(_items.length);\r\n        console.log('item count:' + _items.length);\r\n    }\r\n\r\n    const onClickUploadImage = () => {\r\n        console.log(\"onClickUploadImage call\");\r\n        set_scene('PortraitMaster');\r\n    }\r\n\r\n    const onClickDeleteImage = () => {\r\n        console.log(\"onClickDeleteImage call index:\" + _selectImgIndex);\r\n        if (undefined != window.HybridApp) {\r\n            window.HybridApp.DeleteImageDataFromDirectory(_selectImgIndex);\r\n        }\r\n        else {\r\n            DeleteCanvasData(_selectImgIndex);\r\n        }\r\n\r\n        SetSelectImgIndex(0);\r\n        if (_items.length <= 1) {\r\n            set_scene('PortraitMaster');\r\n        }\r\n    }\r\n\r\n    const onSelectImage = (idx) => {\r\n        console.log(\"onSelectImage call:\" + idx);\r\n        SetSelectImgIndex(idx);\r\n    }\r\n\r\n    const getCarousel = () => {\r\n        console.log('_items count:' + _items.length);\r\n        return <Carousel infiniteLoop={true} selectedItem={_selectImgIndex} showArrows={true} showStatus={true} showThumbs={false} onChange={onSelectImage}>\r\n      {\r\n        _items.map( image => {\r\n          return <img src={image} />\r\n        })\r\n      }\r\n    </Carousel>\r\n    }\r\n\r\n    let selectText;\r\n    if (itemCount > 1) {\r\n        selectText = <div className={classes.multi_select_text}><center>슬라이드하면 다른 사진 표시</center></div>;\r\n    } else {\r\n        selectText = <div className={classes.multi_select_text}></div>;\r\n    }\r\n\r\n    console.log('itemCount renderring update');\r\n    return (\r\n        <div className={classes.root}>\r\n            {selectText}\r\n            {getCarousel()}\r\n            <PortraitMasterCaptureImageControlBar itemCount={1} onClickUploadImage={onClickUploadImage} onClickDeleteImage={onClickDeleteImage} />\r\n        </div >\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _current_scene: state.scene._current_scene,\r\n    _canvasData: state.camera._canvasData,\r\n    _selectImgIndex: state.scene._selectImgIndex\r\n});\r\nconst mapDispatchToProps = { set_scene, SetSelectImgIndex, DeleteCanvasData };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortraitMasterFullScreenCaptureList);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        // height: '100%',\r\n        bottom: 0,\r\n        position: 'fixed',\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nexport const SceneNavigation = ({ _current_scene, set_scene }) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    return (\r\n        <BottomNavigation\r\n            value={value}\r\n            onChange={(event, newValue) => {\r\n                set_scene(newValue);\r\n                setValue(newValue);\r\n            }}\r\n            showLabels\r\n            className={classes.root}\r\n        >\r\n            <BottomNavigationAction value=\"PortraitMaster\" label=\"Home\" icon={<HomeIcon />} />\r\n            <BottomNavigationAction value=\"CameraCapture\" label=\"사진찍기\" icon={<CameraAltIcon />} />\r\n\r\n        </BottomNavigation>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _current_scene: state.scene._current_scene\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SceneNavigation);","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport PortraitMaster from './../components/PortraitMaster'\r\nimport CameraCapture from './../components/camera/CameraCapture'\r\nimport CameraCaptureSelect from './../components/camera/CameraCaptureSelect'\r\nimport PortraitMasterGridCaptureImageList from '../components/PortraitMasterGridCaptureImageList'\r\nimport PortraitMasterFullScreenCaptureList from './../components/PortraitMasterFullScreenCaptureList'\r\nimport SceneNavigation from './SceneNavigation'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      width: \"100%\",\r\n      height: \"100%\"\r\n  },\r\n}));\r\n\r\n\r\nexport const IndexScene = ({ _current_scene, set_scene }) => {\r\n  console.log('Index_scene component start');\r\n  const classes = useStyles();\r\n\r\n  const getActiveScene = () => {\r\n    switch(_current_scene) {\r\n      case 'CameraCapture': {\r\n        return (<CameraCapture />);\r\n      }\r\n      case 'PortraitMaster': {\r\n        return (<PortraitMaster />);\r\n      }\r\n      case 'CameraCaptureSelect': {\r\n        return (<CameraCaptureSelect />);\r\n      }\r\n      case 'GridCaptureList': {\r\n        return (<PortraitMasterGridCaptureImageList />);\r\n      }\r\n      case 'FullScreenCaptureList': {\r\n        return (<PortraitMasterFullScreenCaptureList />);\r\n      }\r\n      default: {\r\n        return (<PortraitMaster />); // SceneNavigation\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {getActiveScene()}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _current_scene: state.scene._current_scene\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexScene);","import React from 'react';\r\nimport './App.css';\r\nimport IndexScene from './scene/IndexScene'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <IndexScene />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { SET_SCENE, SETSELECTIMGINDEX } from '../actions/scene'\r\n\r\nconst initialState = {\r\n    _current_scene: 'IndexScene',\r\n    _selectImgIndex: 0\r\n};\r\n\r\nexport default function quest(state = initialState, action) {\r\n    console.log('reducer scene action call:' + action.type);\r\n    switch(action.type) {\r\n        case SET_SCENE:\r\n            console.log('SET_SCENE:' + action._change_scene);\r\n            return Object.assign({}, state, {\r\n                _current_scene: action._change_scene\r\n            });\r\n        case SETSELECTIMGINDEX:\r\n            console.log('SETSELECTIMGINDEX:' + action._selectImgIndex);\r\n            return Object.assign({}, state, {\r\n                _selectImgIndex: action._selectImgIndex\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}","import { CLOSECAMERA, ADDCANVASDATA, DELETECANVASDATA } from '../actions/camera'\r\n\r\nconst initialState = {\r\n    _closeCamera: '',\r\n    _canvasData:[]\r\n};\r\n\r\nexport default function camera(state = initialState, action) {\r\n    console.log('reducer scene action call:' + action.type);\r\n    switch (action.type) {\r\n        case CLOSECAMERA:\r\n            console.log('CLOSECAMERA:' + action._closeCamera);\r\n            return Object.assign({}, state, {\r\n                _closeCamera: action._closeCamera\r\n            });\r\n        case ADDCANVASDATA:\r\n            console.log('ADDCANVASDATA:' + action._addCanvasData);\r\n            return {\r\n                ...state,\r\n                _canvasData: [...state._canvasData, action._addCanvasData]\r\n            }\r\n        case DELETECANVASDATA:\r\n            console.log('DELETECANVASDATA:' + action._deleteCanvasDataIndex);\r\n            return {\r\n                ...state,\r\n                _canvasData: [\r\n                    ...state._canvasData.slice(0, action._deleteCanvasDataIndex),\r\n                    ...state._canvasData.slice(action._deleteCanvasDataIndex + 1)]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport scene from './scene'\r\nimport camera from './camera'\r\n\r\nexport default combineReducers({\r\n    scene,\r\n    camera\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createStore } from 'redux';\r\nimport { Provider  } from 'react-redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst appElement = document.getElementById('root');\r\n\r\n// 리덕스 개발자도구 적용\r\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nconst store = createStore(rootReducer, devTools);\r\n// const store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  appElement\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}